<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux03：Vim使用及账号用户管理</title>
      <link href="2021/02/23/linux03-vim-shi-yong-ji-zhang-hao-yong-hu-guan-li/"/>
      <url>2021/02/23/linux03-vim-shi-yong-ji-zhang-hao-yong-hu-guan-li/</url>
      
        <content type="html"><![CDATA[<blockquote><p>什么是Vim编辑器</p></blockquote><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。</p><p>vim 则可以说是程序开发者的一项很好用的工具。</p><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>连 vim 的官方网站 (<a href="http://www.vim.org">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p><p>vim 键盘图：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7L1I72C1HrwJ9bG6XAbVggM4RsQuEaoMI78gr3jGxkVH7ONWyDHmremOHiaUibc3sqPRfEuVuHqicfqA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><blockquote><p>三种使用模式</p></blockquote><p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是：</p><p><strong>命令模式：</strong></p><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符。</li><li><strong>x</strong> 删除当前光标所在处的字符。</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><p><strong>输入模式：</strong></p><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><p><strong>底线命令模式</strong></p><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7L1I72C1HrwJ9bG6XAbVggMIxVoDyQ4LWxSbHDjAYfHuId7xfHHichtqZK2ehsXvcC9KiaibPf68s9dg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><blockquote><p>上手体验一下，在home目录下测试</p></blockquote><p>如果你想要使用 vi 来建立一个名为 kuangstudy.txt 的文件时，你可以这样做：</p><pre><code>[root@kuangshen home]# vim kuangstudy.txt</code></pre><p>然后就会进入文件</p><p><img src= "/img/loading.gif" data-src="/2021/02/23/linux03-vim-shi-yong-ji-zhang-hao-yong-hu-guan-li/gif;base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVQImWNgYGBgAAAABQABh6FO1AAAAABJRU5ErkJggg==" alt="img"></p><p><strong>按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</strong></p><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p><p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p><p>这个时候，键盘上除了 <strong>Esc</strong> 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7L1I72C1HrwJ9bG6XAbVggMEarICtkr8ia1N6zqcuv3ROj1TBDoMicM5DoYzaGU29qQ2mbQhlBUbbww/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><strong>按下 ESC 按钮回到一般模式</strong></p><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 <strong>Esc</strong> 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p><p>在一般模式中按下 <strong>:wq</strong> 储存后离开 vim！</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7L1I72C1HrwJ9bG6XAbVggMeA5EoVUt4j2544oibjdoeRah06s2ALh1QDXwep41Mj4ZnhWyb6icdp0w/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>OK! 这样我们就成功创建了一个 kuangstudy.txt 的文件。</p><blockquote><p>Vim 按键说明</p></blockquote><p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p><p><strong>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</strong></p><table><thead><tr><th align="left">移动光标的方法</th><th></th></tr></thead><tbody><tr><td align="left">h 或 向左箭头键(←)</td><td>光标向左移动一个字符</td></tr><tr><td align="left">j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td align="left">k 或 向上箭头键(↑)</td><td>光标向上移动一个字符</td></tr><tr><td align="left">l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr><tr><td align="left">[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [d]</td><td>屏幕『向下』移动半页</td></tr><tr><td align="left">[Ctrl] + [u]</td><td>屏幕『向上』移动半页</td></tr><tr><td align="left">+</td><td>光标移动到非空格符的下一行</td></tr><tr><td align="left">-</td><td>光标移动到非空格符的上一行</td></tr><tr><td align="left">n&lt; space&gt;</td><td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。</td></tr><tr><td align="left">0 或功能键[Home]</td><td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td align="left">$ 或功能键[End]</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td align="left">H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td align="left">M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td align="left">L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td align="left">G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td align="left">nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td align="left">gg</td><td>移动到这个档案的第一行，相当于 1G 啊！(常用)</td></tr><tr><td align="left">n&lt; Enter&gt;</td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><table><thead><tr><th align="left">搜索替换</th><th></th></tr></thead><tbody><tr><td align="left">/word</td><td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！(常用)</td></tr><tr><td align="left">?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td align="left">n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td align="left">N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr></tbody></table><table><thead><tr><th align="left">删除、复制与粘贴</th><th></th></tr></thead><tbody><tr><td align="left">x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td align="left">nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td align="left">dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td align="left">ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td align="left">d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td align="left">dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td align="left">d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td align="left">d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td align="left">yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td align="left">nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td align="left">y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td align="left">yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td align="left">y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td align="left">y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td align="left">p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？那么原本的第 20 行会被推到变成 30 行。(常用)</td></tr><tr><td align="left">J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td align="left">c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td align="left">u</td><td>复原前一个动作。(常用)</td></tr><tr><td align="left">[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr></tbody></table><p><strong>第二部分：一般模式切换到编辑模式的可用的按钮说明</strong></p><table><thead><tr><th align="left">进入输入或取代的编辑模式</th><th></th></tr></thead><tbody><tr><td align="left">i, I</td><td>进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。(常用)</td></tr><tr><td align="left">a, A</td><td>进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td align="left">o, O</td><td>进入输入模式(Insert mode)：这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』；O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td align="left">r, R</td><td>进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td align="left">[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><p><strong>第三部分：一般模式切换到指令行模式的可用的按钮说明</strong></p><table><thead><tr><th align="left">指令行的储存、离开等指令</th><th></th></tr></thead><tbody><tr><td align="left">:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td align="left">:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td align="left">:q</td><td>离开 vi (常用)</td></tr><tr><td align="left">:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td align="left">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td></td></tr><tr><td align="left">:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td align="left">ZZ</td><td>这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！</td></tr><tr><td align="left">:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td align="left">:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td align="left">:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td align="left">:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td align="left">:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td align="left">:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><h3 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h3><blockquote><p>简介</p></blockquote><p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p><p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p><p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p><p>实现用户账号的管理，要完成的工作主要有如下几个方面：</p><ul><li>用户账号的添加、删除与修改。</li><li>用户口令的管理。</li><li>用户组的管理。</li></ul><blockquote><p>用户账号的管理</p></blockquote><p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除。</p><p>添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。</p><blockquote><p>添加账号 useradd</p></blockquote><pre><code>useradd 选项 用户名</code></pre><p>参数说明：</p><ul><li><p>选项 :</p></li><li><ul><li>-c comment 指定一段注释性描述。</li><li>-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</li><li>-g 用户组 指定用户所属的用户组。</li><li>-G 用户组，用户组 指定用户所属的附加组。</li><li>-m　使用者目录如不存在则自动建立。</li><li>-s Shell文件 指定用户的登录Shell。</li><li>-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</li></ul></li><li><p>用户名 :</p></li><li><ul><li>指定新账号的登录名。</li></ul></li></ul><p>测试：</p><pre><code># 此命令创建了一个用户kuangshen，其中-m选项用来为登录名kuangshen产生一个主目录 /home/kuangshen[root@kuangshen home]# useradd -m kuangshen</code></pre><p>增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group等。</p><blockquote><p>Linux下如何切换用户</p></blockquote><p>1.切换用户的命令为：su username 【username是你的用户名哦】</p><p>2.从普通用户切换到root用户，还可以使用命令：sudo su</p><p>3.在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令</p><p>4.在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在su和username之间加-，例如：【su - root】</p><p>$表示普通用户</p><p>#表示超级用户，也就是root用户</p><blockquote><p>删除帐号</p></blockquote><p>如果一个用户的账号不再使用，可以从系统中删除。</p><p>删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。</p><p>删除一个已有的用户账号使用userdel命令，其格式如下：</p><pre><code>userdel 选项 用户名</code></pre><p>常用的选项是 <strong>-r</strong>，它的作用是把用户的主目录一起删除。</p><pre><code>[root@kuangshen home]# userdel -r kuangshen</code></pre><p>此命令删除用户kuangshen在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group等）的记录，同时删除用户的主目录。</p><blockquote><p>修改帐号</p></blockquote><p>修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。</p><p>修改已有用户的信息使用usermod命令，其格式如下：</p><pre><code>usermod 选项 用户名</code></pre><p>常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</p><p>例如：</p><pre><code># usermod -s /bin/ksh -d /home/z –g developer kuangshen</code></pre><p>此命令将用户kuangshen的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。</p><blockquote><p>用户口令的管理</p></blockquote><p>用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。</p><p>指定和修改用户口令的Shell命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。</p><p>命令的格式为：</p><pre><code>passwd 选项 用户名</code></pre><p>可使用的选项：</p><ul><li>-l 锁定口令，即禁用账号。</li><li>-u 口令解锁。</li><li>-d 使账号无口令。</li><li>-f 强迫用户下次登录时修改口令。</li></ul><p>如果默认用户名，则修改当前用户的口令。</p><p>例如，假设当前用户是kuangshen，则下面的命令修改该用户自己的口令：</p><pre><code>$ passwdOld password:******New password:*******Re-enter new password:*******</code></pre><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><pre><code># passwd kuangshenNew password:*******Re-enter new password:*******</code></pre><p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p><p>为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。</p><p>为用户指定空口令时，执行下列形式的命令：</p><pre><code># passwd -d kuangshen</code></pre><p>此命令将用户 kuangshen的口令删除，这样用户 kuangshen下一次登录时，系统就不再允许该用户登录了。</p><p>passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：</p><pre><code># passwd -l kuangshen</code></pre><h3 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h3><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。</p><blockquote><p>增加一个新的用户组使用groupadd命令</p></blockquote><pre><code>groupadd 选项 用户组</code></pre><p>可以使用的选项有：</p><ul><li>-g GID 指定新用户组的组标识号（GID）。</li><li>-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</li></ul><p>实例1：</p><pre><code># groupadd group1</code></pre><p>此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。</p><p>实例2：</p><pre><code># groupadd -g 101 group2</code></pre><p>此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</p><blockquote><p>如果要删除一个已有的用户组，使用groupdel命令</p></blockquote><pre><code>groupdel 用户组</code></pre><p>例如：</p><pre><code># groupdel group1</code></pre><p>此命令从系统中删除组group1。</p><blockquote><p>修改用户组的属性使用groupmod命令</p></blockquote><pre><code>groupmod 选项 用户组</code></pre><p>常用的选项有：</p><ul><li>-g GID 为用户组指定新的组标识号。</li><li>-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</li><li>-n新用户组 将用户组的名字改为新名字</li></ul><pre><code># 此命令将组group2的组标识号修改为102。groupmod -g 102 group2# 将组group2的标识号改为10000，组名修改为group3。groupmod –g 10000 -n group3 group2</code></pre><blockquote><p>切换组</p></blockquote><p>如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</p><p>用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：</p><pre><code>$ newgrp root</code></pre><p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。</p><blockquote><p>/etc/passwd</p></blockquote><p>完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。</p><p>与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括/etc/passwd, /etc/shadow, /etc/group等。</p><p>下面分别介绍这些文件的内容。</p><p><strong>/etc/passwd文件是用户管理工作涉及的最重要的一个文件。</strong></p><p>Linux系统中的每个用户都在/etc/passwd文件中有一个对应的记录行，它记录了这个用户的一些基本属性。</p><p>这个文件对所有用户都是可读的。它的内容类似下面的例子：</p><pre><code>＃ cat /etc/passwdroot:x:0:0:Superuser:/:daemon:x:1:1:System daemons:/etc:bin:x:2:2:Owner of system commands:/bin:sys:x:3:3:Owner of system files:/usr/sys:adm:x:4:4:System accounting:/usr/adm:uucp:x:5:5:UUCP administrator:/usr/lib/uucp:auth:x:7:21:Authentication administrator:/tcb/files/auth:cron:x:9:16:Cron daemon:/usr/spool/cron:listen:x:37:4:Network daemon:/usr/net/nls:lp:x:71:18:Printer administrator:/usr/spool/lp:</code></pre><p>从上面的例子我们可以看到，/etc/passwd中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：</p><pre><code>用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</code></pre><p>1）”用户名”是代表用户账号的字符串。</p><p>通常长度不超过8个字符，并且由大小写字母和/或数字组成。登录名中不能有冒号(:)，因为冒号在这里是分隔符。</p><p>为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。</p><p>2）“口令”一些系统中，存放着加密后的用户口令字。</p><p>虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于/etc/passwd文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux 系统（如SVR4）都使用了shadow技术，把真正的加密后的用户口令字存放到/etc/shadow文件中，而在/etc/passwd文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。</p><p>3）“用户标识号”是一个整数，系统内部用它来标识用户。</p><p>一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录Shell等。</p><p>通常用户标识号的取值范围是0～65 535。0是超级用户root的标识号，1～99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。</p><p>4）“组标识号”字段记录的是用户所属的用户组。</p><p>它对应着/etc/group文件中的一条记录。</p><p>5)“注释性描述”字段记录着用户的一些个人情况。</p><p>例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的Linux 系统中，这个字段的格式并没有统一。在许多Linux系统中，这个字段存放的是一段任意的注释性描述文字，用作finger命令的输出。</p><p>6)“主目录”，也就是用户的起始工作目录。</p><p>它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。</p><p>7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。</p><p>Shell是用户与Linux系统之间的接口。Linux的Shell有许多种，每种都有不同的特点。常用的有sh(Bourne Shell), csh(C Shell), ksh(Korn Shell), tcsh(TENEX/TOPS-20 type C Shell), bash(Bourne Again Shell)等。</p><p>系统管理员可以根据系统情况和用户习惯为用户指定某个Shell。如果不指定Shell，那么系统使用sh为默认的登录Shell，即这个字段的值为/bin/sh。</p><p>用户的登录Shell也可以指定为某个特定的程序（此程序不是一个命令解释器）。</p><p>利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。</p><p>8)系统中有一类用户称为伪用户（pseudo users）。</p><p>这些用户在/etc/passwd文件中也占有一条记录，但是不能登录，因为它们的登录Shell为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。</p><p>常见的伪用户如下所示：</p><pre><code>伪 用 户 含 义bin 拥有可执行的用户命令文件sys 拥有系统文件adm 拥有帐户文件uucp UUCP使用lp lp或lpd子系统使用nobody NFS使用</code></pre><blockquote><p>/etc/shadow</p></blockquote><p><strong>1、除了上面列出的伪用户外，还有许多标准的伪用户，例如：audit, cron, mail, usenet等，它们也都各自为相关的进程和文件所需要。</strong></p><p>由于/etc/passwd文件是所有用户都可读的，如果用户的密码太简单或规律比较明显的话，一台普通的计算机就能够很容易地将它破解，因此对安全性要求较高的Linux系统都把加密后的口令字分离出来，单独存放在一个文件中，这个文件是/etc/shadow文件。有超级用户才拥有该文件读权限，这就保证了用户密码的安全性。</p><p><strong>2、/etc/shadow中的记录行与/etc/passwd中的一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生</strong></p><p>它的文件格式与/etc/passwd类似，由若干个字段组成，字段之间用”:”隔开。这些字段是：</p><pre><code>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</code></pre><ol><li>“登录名”是与/etc/passwd文件中的登录名相一致的用户账号</li><li>“口令”字段存放的是加密后的用户口令字，长度为13个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 { ./0-9A-Za-z }中的字符，则对应的用户不能登录。</li><li>“最后一次修改时间”表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在SCO Linux 中，这个时间起点是1970年1月1日。</li><li>“最小时间间隔”指的是两次修改口令之间所需的最小天数。</li><li>“最大时间间隔”指的是口令保持有效的最大天数。</li><li>“警告时间”字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。</li><li>“不活动时间”表示的是用户没有登录活动但账号仍能保持有效的最大天数。</li><li>“失效时间”字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。</li></ol><blockquote><p>/etc/group</p></blockquote><p>用户组的所有信息都存放在/etc/group文件中。</p><p>将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。</p><p>每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。</p><p>当一个用户同时是多个组中的成员时，在/etc/passwd文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。</p><p>用户要访问属于附加组的文件时，必须首先使用newgrp命令使自己成为所要访问的组中的成员。</p><p>用户组的所有信息都存放在/etc/group文件中。此文件的格式也类似于/etc/passwd文件，由冒号(:)隔开若干个字段，这些字段有：</p><pre><code>组名:口令:组标识号:组内用户列表</code></pre><ol><li><p>“组名”是用户组的名称，由字母或数字构成。与/etc/passwd中的登录名一样，组名不应重复。</p></li><li><p>“口令”字段存放的是用户组加密后的口令字。一般Linux 系统的用户组都没有口令，即这个字段一般为空，或者是*。</p></li><li><p>“组标识号”与用户标识号类似，也是一个整数，被系统内部用来标识组。</p></li><li><p>“组内用户列表”是属于这个组的所有用户的列表/b]，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。</p></li></ol><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><blockquote><p>概述</p></blockquote><p>Linux磁盘管理好坏直接关系到整个系统的性能问题。</p><p>Linux磁盘管理常用命令为 df、du。</p><ul><li>df ：列出文件系统的整体磁盘使用量</li><li>du：检查磁盘空间使用量</li></ul><blockquote><p>df</p></blockquote><p>df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><p>语法：</p><pre><code>df [-ahikHTm] [目录或文件名]</code></pre><p>选项与参数：</p><ul><li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li><li>-k ：以 KBytes 的容量显示各文件系统；</li><li>-m ：以 MBytes 的容量显示各文件系统；</li><li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li><li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li><li>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li><li>-i ：不用硬盘容量，而以 inode 的数量来显示</li></ul><p>测试：</p><pre><code># 将系统内所有的文件系统列出来！# 在 Linux 底下如果 df 没有加任何选项# 那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来！[root@kuangshen /]# dfFilesystem     1K-blocks   Used Available Use% Mounted ondevtmpfs          889100       0    889100   0% /devtmpfs             899460     704    898756   1% /dev/shmtmpfs             899460     496    898964   1% /runtmpfs             899460       0    899460   0% /sys/fs/cgroup/dev/vda1       41152812 6586736  32662368  17% /tmpfs             179896       0    179896   0% /run/user/0# 将容量结果以易读的容量格式显示出来[root@kuangshen /]# df -hFilesystem     Size Used Avail Use% Mounted ondevtmpfs       869M     0 869M   0% /devtmpfs           879M 708K 878M   1% /dev/shmtmpfs           879M 496K 878M   1% /runtmpfs           879M     0 879M   0% /sys/fs/cgroup/dev/vda1       40G  6.3G   32G  17% /tmpfs           176M     0 176M   0% /run/user/0# 将系统内的所有特殊文件格式及名称都列出来[root@kuangshen /]# df -aTFilesystem     Type       1K-blocks   Used Available Use% Mounted onsysfs         sysfs               0       0         0    - /sysproc           proc                0       0         0    - /procdevtmpfs       devtmpfs       889100       0    889100   0% /devsecurityfs     securityfs          0       0         0    - /sys/kernel/securitytmpfs         tmpfs          899460     708    898752   1% /dev/shmdevpts         devpts              0       0         0    - /dev/ptstmpfs         tmpfs          899460     496    898964   1% /runtmpfs         tmpfs          899460       0    899460   0% /sys/fs/cgroupcgroup         cgroup              0       0         0    - /sys/fs/cgroup/systemdpstore         pstore              0       0         0    - /sys/fs/pstorecgroup         cgroup              0       0         0    - /sys/fs/cgroup/freezercgroup         cgroup              0       0         0    - /sys/fs/cgroup/cpusetcgroup         cgroup              0       0         0    - /sys/fs/cgroup/hugetlbcgroup         cgroup              0       0         0    - /sys/fs/cgroup/blkiocgroup         cgroup              0       0         0    - /sys/fs/cgroup/net_cls,net_priocgroup         cgroup              0       0         0    - /sys/fs/cgroup/memorycgroup         cgroup              0       0         0    - /sys/fs/cgroup/pidscgroup         cgroup              0       0         0    - /sys/fs/cgroup/cpu,cpuacctcgroup         cgroup              0       0         0    - /sys/fs/cgroup/devicescgroup         cgroup              0       0         0    - /sys/fs/cgroup/perf_eventconfigfs       configfs            0       0         0    - /sys/kernel/config/dev/vda1     ext4         41152812 6586748  32662356  17% /systemd-1      -                   -       -         -    - /proc/sys/fs/binfmt_miscmqueue         mqueue              0       0         0    - /dev/mqueuedebugfs       debugfs             0       0         0    - /sys/kernel/debughugetlbfs     hugetlbfs           0       0         0    - /dev/hugepagestmpfs         tmpfs          179896       0    179896   0% /run/user/0binfmt_misc   binfmt_misc         0       0         0    - /proc/sys/fs/binfmt_misc# 将 /etc 底下的可用的磁盘容量以易读的容量格式显示[root@kuangshen /]# df -h /etcFilesystem     Size Used Avail Use% Mounted on/dev/vda1       40G  6.3G   32G  17% /</code></pre><blockquote><p>du</p></blockquote><p>Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍Linux du命令。</p><p>语法：</p><pre><code>du [-ahskm] 文件或目录名称</code></pre><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><p>测试：</p><pre><code># 只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:# 直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间。[root@kuangshen home]# du16./redis8./www/.oracle_jre_usage  # 包括隐藏文件的目录24./www48.                        # 这个目录(.)所占用的总量# 将文件的容量也列出来[root@kuangshen home]# du -a4./redis/.bash_profile4./redis/.bash_logout    ....中间省略....4./kuangstudy.txt # 有文件的列表了48.# 检查根目录底下每个目录所占用的容量[root@kuangshen home]# du -sm /*0/bin146/boot.....中间省略....0/proc.....中间省略....1/tmp3026/usr  # 系统初期最大就是他了啦！513/var2666/www</code></pre><p>通配符 * 来代表每个目录。</p><p>与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。</p><blockquote><p>磁盘挂载与卸除</p></blockquote><p>根文件系统之外的其他文件要想能够被访问，都必须通过“关联”至根文件系统上的某个目录来实现，此关联操作即为“挂载”，此目录即为“挂载点”,解除此关联关系的过程称之为“卸载”</p><p>Linux 的磁盘挂载使用mount命令，卸载使用umount命令。</p><p>磁盘挂载语法：</p><pre><code>mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n] 装置文件名 挂载点</code></pre><p>测试：</p><pre><code># 将 /dev/hdc6 挂载到 /mnt/hdc6 上面！[root@www ~]# mkdir /mnt/hdc6[root@www ~]# mount /dev/hdc6 /mnt/hdc6[root@www ~]# dfFilesystem           1K-blocks     Used Available Use% Mounted on/dev/hdc6              1976312     42072   1833836   3% /mnt/hdc6</code></pre><p>磁盘卸载命令 umount 语法：</p><pre><code>umount [-fn] 装置文件名或挂载点</code></pre><p>选项与参数：</p><ul><li>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</li><li>-n ：不升级 /etc/mtab 情况下卸除。</li></ul><p>卸载/dev/hdc6</p><pre><code>[root@www ~]# umount /dev/hdc6</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diary</title>
      <link href="2021/02/22/diary/"/>
      <url>2021/02/22/diary/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>从今天（2021.2.21）开始，学习 Java（就业路线），并记录学习的每日Memo.</strong></p></blockquote><p>[toc]</p><h1 id="2021-2-22"><a href="#2021-2-22" class="headerlink" title="2021.2.22"></a>2021.2.22</h1><p>🔴🟠🟡🟢🔵</p><h3 id="Q-如何能够在全匹配的同时，将即使在有内容的一行的man也找出来"><a href="#Q-如何能够在全匹配的同时，将即使在有内容的一行的man也找出来" class="headerlink" title="Q : 如何能够在全匹配的同时，将即使在有内容的一行的man也找出来"></a>Q : 如何能够在全匹配的同时，将即使在有内容的一行的<code>man</code>也找出来</h3><p><img src= "/img/loading.gif" data-src="/2021/02/22/diary/D:_Markdown%5Cimg_root%5Cimage-20210222011435612.png" alt="image-20210222011435612"></p><h3 id="修改虚拟机-Linux-的Wriprin-Pitt-账户的密码"><a href="#修改虚拟机-Linux-的Wriprin-Pitt-账户的密码" class="headerlink" title="修改虚拟机(Linux)的Wriprin(Pitt)账户的密码"></a>修改虚拟机(Linux)的Wriprin(Pitt)账户的密码</h3><p><a href="https://www.linuxrumen.com/rmxx/889.html">💫</a>    <a href="https://blog.csdn.net/w410589502/article/details/53611974">💫</a>    </p><h3 id="学习ubuntu-sudo-update与upgrade的作用及区别"><a href="#学习ubuntu-sudo-update与upgrade的作用及区别" class="headerlink" title="学习ubuntu sudo update与upgrade的作用及区别"></a>学习ubuntu <code>sudo update</code>与<code>upgrade</code>的作用及区别</h3><p><a href="https://blog.csdn.net/beckeyloveyou/article/details/51352426">💫</a></p><h3 id="学习Typora"><a href="#学习Typora" class="headerlink" title="学习Typora"></a>学习<code>Typora</code></h3><ol><li>User Manual <a href="https://sspai.com/post/54912">💫</a></li><li>快捷键 <a href="https://www.cnblogs.com/hongdada/p/9776547.html">💫</a></li></ol><h3 id="修改-Typora-的主题"><a href="#修改-Typora-的主题" class="headerlink" title="修改 Typora 的主题"></a>修改 <code>Typora</code> 的主题</h3><ol><li><h4 id="自定义主题💫"><a href="#自定义主题💫" class="headerlink" title="自定义主题💫"></a>自定义主题<a href="https://zhuanlan.zhihu.com/p/133863913">💫</a></h4></li><li><h4 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h4><ol><li><p>new 主题文件夹/wriprin/noto.css =&gt; <a href="https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;900&amp;display=swap%22%20rel=%22stylesheet%22%20media=%22print%22%20onload=%22this.media=%27all%27">💫</a></p></li><li><p>下面代码为引用内容，已将其引用到本地 =&gt; noto.css</p></li><li><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css2?family<span class="token punctuation">=</span>Noto+Serif+SC:wght@400;900&amp;display<span class="token punctuation">=</span>swap<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>print<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this.media<span class="token punctuation">=</span><span class="token punctuation">'</span>all<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改主题文件夹/wriprin.css</p></li><li><pre class="line-numbers language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">'wriprin/noto.css'</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">body </span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Mulish'</span>, -apple-system, <span class="token string">'Noto Serif SC'</span>, <span class="token string">"PingFang SC"</span>, <span class="token string">"Microsoft Yahei UI"</span>, <span class="token string">"Microsoft Yahei"</span>, sans-serif<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* font-family: "Vollkorn", Palatino, Times; */</span>    <span class="token comment" spellcheck="true">/* font-family: 'Source Han SerifCN', Georgia, Times, 'SimSun', serif!important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--mid-<span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.8</span>rem<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li><li><h4 id="Typora简单样式修改方法-💫"><a href="#Typora简单样式修改方法-💫" class="headerlink" title="Typora简单样式修改方法 💫"></a><code>Typora</code>简单样式修改方法 <a href="https://www.jianshu.com/p/af9aeb50b3ff">💫</a></h4><ol><li><p>添加高亮Highlight快捷键</p><ol start="2"><li><img src= "/img/loading.gif" data-src="/2021/02/22/diary/D:_Markdown%5Cimg_root%5Cimage-20210222183659891.png" alt="image-20210222183659891"></li></ol></li><li><p>打开 <code>conf.user.json</code></p></li><li><pre class="line-numbers language-json"><code class="language-json">// Custom key binding<span class="token punctuation">,</span> which will override the default ones.<span class="token property">"keyBinding"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  // for example<span class="token operator">:</span>   // <span class="token property">"Always on Top"</span><span class="token operator">:</span> <span class="token string">"Ctrl+Shift+P"</span>  <span class="token property">"Highlight"</span><span class="token operator">:</span> <span class="token string">"Ctrl+Shift+H"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><h3 id="关于二进制计算"><a href="#关于二进制计算" class="headerlink" title="关于二进制计算"></a>关于二进制计算</h3><pre><code>1011 1111第二位是64 所以其后面的总和就为64-1=63</code></pre><h3 id="html里，如果让背景图片根据屏幕大小铺满屏幕，不重复？"><a href="#html里，如果让背景图片根据屏幕大小铺满屏幕，不重复？" class="headerlink" title="html里，如果让背景图片根据屏幕大小铺满屏幕，不重复？"></a>html里，如果让背景图片根据屏幕大小铺满屏幕，不重复？</h3><ol><li><p>方案一 ：css3支持，background-size:cover</p></li><li><p>方案二 ：</p></li></ol><pre class="line-numbers language-css"><code class="language-css">   <span class="token selector">body</span><span class="token punctuation">{</span>              <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>              <span class="token property">background</span><span class="token punctuation">:</span><span class="token url">url(images/bg.jpg)</span> no-repeat<span class="token punctuation">;</span>              <span class="token property">background-size</span><span class="token punctuation">:</span><span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux02：常用的基本命令</title>
      <link href="2021/02/21/linux02-chang-yong-de-ji-ben-ming-ling/"/>
      <url>2021/02/21/linux02-chang-yong-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="目录管理"><a href="#目录管理" class="headerlink" title="目录管理"></a>目录管理</h3><blockquote><p>绝对路径和相对路径</p></blockquote><p>我们知道Linux的目录结构为树状结构，最顶级的目录为根目录 /。</p><p>其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。</p><p>在开始本教程前我们需要先知道什么是绝对路径与相对路径。</p><p><strong>绝对路径：</strong></p><p>路径的写法，由根目录 / 写起，例如：/usr/share/doc 这个目录。</p><p><strong>相对路径：</strong></p><p>路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成：cd ../man 这就是相对路径的写法啦！</p><blockquote><p>处理目录的常用命令</p></blockquote><p>接下来我们就来看几个常见的处理目录的命令吧：</p><ul><li>ls: 列出目录</li><li>cd：切换目录</li><li>pwd：显示目前的目录</li><li>mkdir：创建一个新的目录</li><li>rmdir：删除一个空的目录</li><li>cp: 复制文件或目录</li><li>rm: 移除文件或目录</li><li>mv: 移动文件与目录，或修改文件与目录的名称</li></ul><p>你可以使用 <em>man [命令]</em> 来查看各个命令的使用文档，如 ：man cp。</p><blockquote><p>ls （列出目录）</p></blockquote><p>在Linux系统当中， ls 命令可能是最常被运行的。</p><p>语法：</p><pre><code>[root@www ~]# ls [-aAdfFhilnrRSt] 目录名称</code></pre><p>选项与参数：</p><ul><li>-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)</li><li>-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</li></ul><p>将目录下的所有文件列出来(含属性与隐藏档)</p><pre><code>[root@www ~]# ls -al ~</code></pre><blockquote><p>cd （切换目录）</p></blockquote><p>cd是Change Directory的缩写，这是用来变换工作目录的命令。</p><p>语法：</p><pre><code>cd [相对路径或绝对路径]</code></pre><p>测试：</p><pre><code># 切换到用户目录下[root@kuangshen /]# cd home  # 使用 mkdir 命令创建 kuangstudy 目录[root@kuangshen home]# mkdir kuangstudy# 进入 kuangstudy 目录[root@kuangshen home]# cd kuangstudy# 回到上一级[root@kuangshen kuangstudy]# cd ..# 回到根目录[root@kuangshen kuangstudy]# cd /# 表示回到自己的家目录，亦即是 /root 这个目录[root@kuangshen kuangstudy]# cd ~</code></pre><p>接下来大家多操作几次应该就可以很好的理解 cd 命令的。</p><blockquote><p>pwd ( 显示目前所在的目录 )</p></blockquote><p>pwd 是 <strong>Print Working Directory</strong> 的缩写，也就是显示目前所在目录的命令。</p><pre><code>[root@kuangshen kuangstudy]#pwd [-P]</code></pre><p>选项与参数：<strong>-P</strong> ：显示出确实的路径，而非使用连接(link) 路径。</p><p>测试：</p><pre><code># 单纯显示出目前的工作目录[root@kuangshen ~]# pwd/root# 如果是链接，要显示真实地址，可以使用 -P参数[root@kuangshen /]# cd bin[root@kuangshen bin]# pwd -P/usr/bin</code></pre><blockquote><p>mkdir （创建新目录）</p></blockquote><p>如果想要创建新的目录的话，那么就使用mkdir (make directory)吧。</p><pre><code>mkdir [-mp] 目录名称</code></pre><p>选项与参数：</p><ul><li>-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～</li><li>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</li></ul><p>测试：</p><pre><code># 进入我们用户目录下[root@kuangshen /]# cd /home# 创建一个 test 文件夹[root@kuangshen home]# mkdir test# 创建多层级目录[root@kuangshen home]# mkdir test1/test2/test3/test4mkdir: cannot create directory ‘test1/test2/test3/test4’:No such file or directory  # &lt;== 没办法直接创建此目录啊！# 加了这个 -p 的选项，可以自行帮你创建多层目录！[root@kuangshen home]# mkdir -p test1/test2/test3/test4# 创建权限为 rwx--x--x 的目录。[root@kuangshen home]# mkdir -m 711 test2[root@kuangshen home]# ls -ldrwxr-xr-x 2 root root  4096 Mar 12 21:55 testdrwxr-xr-x 3 root root  4096 Mar 12 21:56 test1drwx--x--x 2 root root  4096 Mar 12 21:58 test2</code></pre><blockquote><p>rmdir ( 删除空的目录 )</p></blockquote><p>语法：</p><pre><code>rmdir [-p] 目录名称</code></pre><p>选项与参数：<strong>-p ：</strong>连同上一级『空的』目录也一起删除</p><p>测试：</p><pre><code># 看看有多少目录存在？[root@kuangshen home]# ls -ldrwxr-xr-x 2 root root  4096 Mar 12 21:55 testdrwxr-xr-x 3 root root  4096 Mar 12 21:56 test1drwx--x--x 2 root root  4096 Mar 12 21:58 test2# 可直接删除掉，没问题[root@kuangshen home]# rmdir test# 因为尚有内容，所以无法删除！[root@kuangshen home]# rmdir test1rmdir: failed to remove ‘test1’: Directory not empty# 利用 -p 这个选项，立刻就可以将 test1/test2/test3/test4 依次删除。[root@kuangshen home]# rmdir -p test1/test2/test3/test4</code></pre><p>注意：这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录，后面我们会将！</p><blockquote><p>cp ( 复制文件或目录 )</p></blockquote><p>语法：</p><pre><code>[root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)[root@www ~]# cp [options] source1 source2 source3 .... directory</code></pre><p>选项与参数：</p><ul><li><strong>-a：</strong>相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li><li><strong>-p：</strong>连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li><li><strong>-d：</strong>若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li><li><strong>-r：</strong>递归持续复制，用於目录的复制行为；(常用)</li><li><strong>-f：</strong>为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li><li><strong>-i：</strong>若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li><li><strong>-l：</strong>进行硬式连结(hard link)的连结档创建，而非复制文件本身。</li><li><strong>-s：</strong>复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li><li><strong>-u：</strong>若 destination 比 source 旧才升级 destination ！</li></ul><p>测试：</p><pre><code># 找一个有文件的目录，我这里找到 root目录[root@kuangshen home]# cd /root[root@kuangshen ~]# lsinstall.sh[root@kuangshen ~]# cd /home# 复制 root目录下的install.sh 到 home目录下[root@kuangshen home]# cp /root/install.sh /home[root@kuangshen home]# lsinstall.sh# 再次复制，加上-i参数，增加覆盖询问？[root@kuangshen home]# cp -i /root/install.sh /homecp: overwrite ‘/home/install.sh’? y # n不覆盖，y为覆盖</code></pre><blockquote><p>rm ( 移除文件或目录 )</p></blockquote><p>语法：</p><pre><code>rm [-fir] 文件或目录</code></pre><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul><p>测试：</p><pre><code># 将刚刚在 cp 的实例中创建的 install.sh删除掉！[root@kuangshen home]# rm -i install.shrm: remove regular file ‘install.sh’? y# 如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！# 尽量不要在服务器上使用 rm -rf /</code></pre><blockquote><p>mv  ( 移动文件与目录，或修改名称 )</p></blockquote><p>语法：</p><pre><code>[root@www ~]# mv [-fiu] source destination[root@www ~]# mv [options] source1 source2 source3 .... directory</code></pre><p>选项与参数：</p><ul><li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li><li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li><li>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</li></ul><p>测试：</p><pre><code># 复制一个文件到当前目录[root@kuangshen home]# cp /root/install.sh /home# 创建一个文件夹 test[root@kuangshen home]# mkdir test# 将复制过来的文件移动到我们创建的目录，并查看[root@kuangshen home]# mv install.sh test[root@kuangshen home]# lstest[root@kuangshen home]# cd test[root@kuangshen test]# lsinstall.sh# 将文件夹重命名，然后再次查看！[root@kuangshen test]# cd ..[root@kuangshen home]# mv test mvtest[root@kuangshen home]# lsmvtest</code></pre><h3 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h3><blockquote><p>看懂文件属性</p></blockquote><p>Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p><p>在Linux中我们可以使用<code>ll</code>或者<code>ls –l</code>命令来显示一个文件的属性以及文件所属的用户和组，如：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7JGpeIS4j9q3B4LQhsQkFiauXAQN0qOnVCYvj7Cm1oQbvexVDFqPhUIeTe83BdAHlXCJhGoNabSFKQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>实例中，boot文件的第一个属性用”d”表示。”d”在Linux中代表该文件是一个目录文件。</p><p>在Linux中第一个字符代表这个文件是目录、文件或链接文件等等：</p><ul><li>当为[ <strong>d</strong> ]则是目录</li><li>当为[ <strong>-</strong> ]则是文件；</li><li>若是[ <strong>l</strong> ]则表示为链接文档 ( link file )；</li><li>若是[ <strong>b</strong> ]则表示为装置文件里面的可供储存的接口设备 ( 可随机存取装置 )；</li><li>若是[ <strong>c</strong> ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标 ( 一次性读取装置 )。</li></ul><p>接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。</p><p>其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。</p><p>要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。</p><p>每个文件的属性由左边第一部分的10个字符来确定（如下图）：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7JGpeIS4j9q3B4LQhsQkFiauEybzG2XIdlOMLyO13lMfPKUWRpGJGgyxCAJ9mics9dTZ1qrWDIvleYQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>从左至右用0-9这些数字来表示。</p><p>第0位确定文件类型，第1-3位确定属主（该文件的所有者）拥有该文件的权限。第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。</p><p>其中：</p><p>第1、4、7位表示读权限，如果用”r”字符表示，则有读权限，如果用”-“字符表示，则没有读权限；</p><p>第2、5、8位表示写权限，如果用”w”字符表示，则有写权限，如果用”-“字符表示没有写权限；</p><p>第3、6、9位表示可执行权限，如果用”x”字符表示，则有执行权限，如果用”-“字符表示，则没有执行权限。</p><p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p><p>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p><p>文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。</p><p>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p><p>在以上实例中，boot 文件是一个目录文件，属主和属组都为 root。</p><blockquote><p>修改文件属性</p></blockquote><p><strong>1、chgrp：更改文件属组</strong></p><pre><code>chgrp [-R] 属组名 文件名</code></pre><p>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</p><p><strong>2、chown：更改文件属主，也可以同时更改文件属组</strong></p><pre><code>chown [–R] 属主名 文件名chown [-R] 属主名：属组名 文件名</code></pre><p><strong>3、chmod：更改文件9个属性</strong></p><pre><code>chmod [-R] xyz 文件或目录</code></pre><p>Linux文件属性有两种设置方法，一种是数字，一种是符号。</p><p>Linux文件的基本权限就有九个，分别是owner/group/others三种身份各有自己的read/write/execute权限。</p><p>先复习一下刚刚上面提到的数据：文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p><pre><code>r:4     w:2         x:1</code></pre><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为：[-rwxrwx—] 分数则是：</p><ul><li>owner = rwx = 4+2+1 = 7</li><li>group = rwx = 4+2+1 = 7</li><li>others= — = 0+0+0 = 0</li></ul><pre><code>chmod 770 filename</code></pre><p>可以自己下去多进行测试！</p><h3 id="文件内容查看"><a href="#文件内容查看" class="headerlink" title="文件内容查看"></a>文件内容查看</h3><blockquote><p>概述</p></blockquote><p>Linux系统中使用以下命令来查看文件的内容：</p><ul><li>cat 由第一行开始显示文件内容</li><li>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li><li>nl  显示的时候，顺道输出行号！</li><li>more 一页一页的显示文件内容</li><li>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li><li>head 只看头几行</li><li>tail 只看尾巴几行</li></ul><p>你可以使用 <em>man [命令]</em>来查看各个命令的使用文档，如 ：man cp。</p><blockquote><p>cat 由第一行开始显示文件内容</p></blockquote><p>语法：</p><pre><code>cat [-AbEnTv]</code></pre><p>选项与参数：</p><ul><li>-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；</li><li>-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！</li><li>-E ：将结尾的断行字节 $ 显示出来；</li><li>-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；</li><li>-T ：将 [tab] 按键以 ^I 显示出来；</li><li>-v ：列出一些看不出来的特殊字符</li></ul><p>测试：</p><pre><code># 查看网络配置: 文件地址 /etc/sysconfig/network-scripts/[root@kuangshen ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0DEVICE=eth0BOOTPROTO=dhcpONBOOT=yes</code></pre><blockquote><p>tac</p></blockquote><p>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：</p><pre><code>[root@kuangshen ~]# tac /etc/sysconfig/network-scripts/ifcfg-eth0ONBOOT=yesBOOTPROTO=dhcpDEVICE=eth0</code></pre><blockquote><p>nl  显示行号</p></blockquote><p>语法：</p><pre><code>nl [-bnw] 文件</code></pre><p>选项与参数：</p><ul><li>-b ：指定行号指定的方式，主要有两种：-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；-b t ：如果有空行，空的那一行不要列出行号(默认值)；</li><li>-n ：列出行号表示的方法，主要有三种：-n ln ：行号在荧幕的最左方显示；-n rn ：行号在自己栏位的最右方显示，且不加 0 ；-n rz ：行号在自己栏位的最右方显示，且加 0 ；</li><li>-w ：行号栏位的占用的位数。</li></ul><p>测试：</p><pre><code>[root@kuangshen ~]# nl /etc/sysconfig/network-scripts/ifcfg-eth01DEVICE=eth02BOOTPROTO=dhcp3ONBOOT=yes</code></pre><blockquote><p>more  一页一页翻动</p></blockquote><p>在 more 这个程序的运行过程中，你有几个按键可以按的：</p><ul><li>空白键 (space)：代表向下翻一页；</li><li>Enter   ：代表向下翻『一行』；</li><li>/字串   ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</li><li>:f    ：立刻显示出档名以及目前显示的行数；</li><li>q    ：代表立刻离开 more ，不再显示该文件内容。</li><li>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。</li></ul><pre><code>[root@kuangshen etc]# more /etc/csh.login....(中间省略)....--More--(28%) # 重点在这一行喔！你的光标也会在这里等待你的命令</code></pre><blockquote><p>less  一页一页翻动，以下实例输出/etc/man.config文件的内容：</p></blockquote><p>less运行时可以输入的命令有：</p><ul><li>空白键  ：向下翻动一页；</li><li>[pagedown]：向下翻动一页；</li><li>[pageup] ：向上翻动一页；</li><li>/字串  ：向下搜寻『字串』的功能；</li><li>?字串  ：向上搜寻『字串』的功能；</li><li>n   ：重复前一个搜寻 (与 / 或 ? 有关！)</li><li>N   ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li><li>q   ：离开 less 这个程序；</li></ul><pre><code>[root@kuangshen etc]# more /etc/csh.login....(中间省略)....:   # 这里可以等待你输入命令！</code></pre><blockquote><p>head  取出文件前面几行</p></blockquote><p>语法：</p><pre><code>head [-n number] 文件</code></pre><p>选项与参数：<strong>-n</strong> 后面接数字，代表显示几行的意思！</p><p>默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：</p><pre><code>[root@kuangshen etc]# head -n 20 /etc/csh.login</code></pre><blockquote><p>tail  取出文件后面几行</p></blockquote><p>语法：</p><pre><code>tail [-n number] 文件</code></pre><p>选项与参数：</p><ul><li>-n ：后面接数字，代表显示几行的意思</li></ul><p>默认的情况中，显示最后 10 行！若要显示最后 20 行，就得要这样：</p><pre><code>[root@kuangshen etc]# tail -n 20 /etc/csh.login</code></pre><blockquote><p>拓展：Linux 链接概念</p></blockquote><p>Linux 链接分两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。</p><p>情况下，<strong>ln</strong> 命令产生硬链接。</p><p><strong>硬连接</strong></p><p>硬连接指通过索引节点来进行连接。在 Linux 的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在 Linux 中，多个文件名指向同一索引节点是存在的。比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件，A 和 B 对文件系统来说是完全平等的。删除其中任何一个都不会影响另外一个的访问。</p><p>硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p><p><strong>软连接</strong></p><p>另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。比如：A 是 B 的软链接（A 和 B 都是文件名），A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号不相同，A 和 B 指向的是两个不同的 inode，继而指向两块不同的数据块。但是 A 的数据块中存放的只是 B 的路径名（可以根据这个找到 B 的目录项）。A 和 B 之间是“主从”关系，如果 B 被删除了，A 仍然存在（因为两个是不同的文件），但指向的是一个无效的链接。</p><p><strong>测试：</strong></p><pre><code>[root@kuangshen /]# cd /home[root@kuangshen home]# touch f1 # 创建一个测试文件f1[root@kuangshen home]# lsf1[root@kuangshen home]# ln f1 f2     # 创建f1的一个硬连接文件f2[root@kuangshen home]# ln -s f1 f3   # 创建f1的一个符号连接文件f3[root@kuangshen home]# ls -li       # -i参数显示文件的inode节点信息397247 -rw-r--r-- 2 root root     0 Mar 13 00:50 f1397247 -rw-r--r-- 2 root root     0 Mar 13 00:50 f2397248 lrwxrwxrwx 1 root root     2 Mar 13 00:50 f3 -&gt; f1</code></pre><p>从上面的结果中可以看出，硬连接文件 f2 与原文件 f1 的 inode 节点相同，均为 397247，然而符号连接文件的 inode 节点不同。</p><pre><code># echo 字符串输出 &gt;&gt; f1 输出到 f1文件[root@kuangshen home]# echo "I am f1 file" &gt;&gt;f1[root@kuangshen home]# cat f1I am f1 file[root@kuangshen home]# cat f2I am f1 file[root@kuangshen home]# cat f3I am f1 file[root@kuangshen home]# rm -f f1[root@kuangshen home]# cat f2I am f1 file[root@kuangshen home]# cat f3cat: f3: No such file or directory</code></pre><p>通过上面的测试可以看出：当删除原始文件 f1 后，硬连接 f2 不受影响，但是符号连接 f1 文件无效；</p><p>依此您可以做一些相关的测试，可以得到以下全部结论：</p><ul><li>删除符号连接f3,对f1,f2无影响；</li><li>删除硬连接f2，对f1,f3也无影响；</li><li>删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；</li><li>同时删除原文件f1,硬连接f2，整个文件会真正的被删除。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux01：概述及环境搭建</title>
      <link href="2021/02/21/linux01-gai-shu-ji-huan-jing-da-jian/"/>
      <url>2021/02/21/linux01-gai-shu-ji-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="入门概述"><a href="#入门概述" class="headerlink" title="入门概述"></a>入门概述</h2><blockquote><p>我们为什么要学习Linux</p></blockquote><p>Linux诞生了这么多年，以前还喊着如何能取代windows系统，现在这个口号已经小多了，任何事物发展都有其局限性都有其天花板。就如同在国内再搞一个社交软件取代腾讯一样，想想而已基本不可能，因为用户已经习惯于使用微信交流，不是说技术上实现不了解而是老百姓已经习惯了，想让他们不用，即使他们自己不用亲戚朋友还是要用，没有办法的事情。</p><p>用习惯了windows操作系统，再让大家切换到别的操作系统基本上是不可能的事情，改变一个人已经养成的习惯太难。没有办法深入到普通老百姓的生活中，并不意味着Linux就没有用武之地了。在服务器端，在开发领域Linux倒是越来越受欢迎，很多程序员都觉得不懂点Linux都觉得不好意思，Linux在开源社区的地位依然岿然不动。</p><p>尤其是作为一个后端程序员，是必须要掌握Linux的，因为这都成为了你找工作的基础门槛了，所以不得不学习！</p><blockquote><p>Linux 简介</p></blockquote><p>Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。</p><p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX（可移植操作系统接口） 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p><p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><blockquote><p>Linux 发行版</p></blockquote><p>Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaNIyC5tbowflHyRITPKvgAySf3AZJibEUTrSo3fzRm85VDfInZ2olkIgg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaN7ZnOBfl3V10ButFaRVtnBasIl9rr8qiaibvaQb7iaClPpuxeDFpHyeibHQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><blockquote><p>Linux 应用领域</p></blockquote><p>今天各种场合都有使用各种 Linux 发行版，从嵌入式设备到超级计算机，并且在服务器领域确定了地位，通常服务器使用 LAMP（Linux + Apache + MySQL + PHP）或 LNMP（Linux + Nginx+ MySQL + PHP）组合。</p><p>目前 Linux 不仅在家庭与企业中使用，并且在政府中也很受欢迎。</p><ul><li>巴西联邦政府由于支持 Linux 而世界闻名。</li><li>有新闻报道俄罗斯军队自己制造的 Linux 发布版的，做为 G.H.ost 项目已经取得成果。</li><li>印度的 Kerala 联邦计划在向全联邦的高中推广使用 Linux。</li><li>中华人民共和国为取得技术独立，在龙芯处理器中排他性地使用 Linux。</li><li>在西班牙的一些地区开发了自己的 Linux 发布版，并且在政府与教育领域广泛使用，如 Extremadura 地区的 gnuLinEx 和 Andalusia 地区的 Guadalinex。</li><li>葡萄牙同样使用自己的 Linux 发布版 Caixa Mágica，用于 Magalh?es 笔记本电脑和 e-escola 政府软件。</li><li>法国和德国同样开始逐步采用 Linux。</li></ul><blockquote><p>Linux vs Windows</p></blockquote><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaN2skuyLAeialtTQFEDQ5Fd6bPWx2gWVdW6SlHpjV53uTysVOLnk96deQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>Linux 的安装，安装步骤比较繁琐，现在其实云服务器挺普遍的，价格也便宜，如果直接不想搭建，也可以直接买一台学习用用！</p><blockquote><p>安装CentOS（虚拟机安装，耗资源）</p></blockquote><p>1、可以通过镜像进行安装！</p><p>2、可以使用我已经制作好的镜像！视频中讲解了该种方式！</p><p>3、安装 VMware 虚拟机软件，然后打开我们的镜像即可使用！</p><blockquote><p>购买云服务器（推荐）</p></blockquote><p>虚拟机安装后占用空间，也会有些卡顿，我们作为程序员其实可以选择购买一台自己的服务器，这样的话更加接近真实线上工作；</p><p>1、阿里云购买服务器：<a href="https://www.aliyun.com/minisite/goods?userCode=0phtycgr">https://www.aliyun.com/minisite/goods?userCode=0phtycgr</a></p><p>2、购买完毕后，获取服务器的IP地址，重置服务器密码，就可以远程登录了</p><p>3、下载 Xshell 工具，进行远程连接使用！连接成功效果如下：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaNBvcond6ZtueD4qoY5dzGpdogSd9AgcibvN9Hqicx0PLIuCyCeDIrr3FA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><strong>注意事项：</strong></p><p>如果要打开端口，需要在阿里云的安全组面板中开启对应的出入规则，不然的话会被阿里拦截！</p><blockquote><p>如果前期不好操作，可以推荐安装宝塔面板，傻瓜式管理服务器</p></blockquote><p>安装教程：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>1、开启对应的端口</p><p>2、一键安装</p><p>3、安装完毕后会得到远程面板的地址，账号，密码，就可以登录了</p><p>4、登录之后就可以可视化的安装环境和部署网站！</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaN2Z7icsXTBvbiaU4uTv0y0SUhfibscT3fZHd8Lib1ic54gjLiaLTru2ru64cA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><blockquote><p>关于域名</p></blockquote><p>如果自己的网站想要上线，就一定要购买一个域名然后进行备案；</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaNzgvAZ87ostL7etOEus0vHU1nw9ua07yDIVLGMH4BSzumn9kvX0DkoA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>备案的话需要一些认证和时间，备完完毕后，就可以解析到自己的网站了，这个时候就可以使用域名来进行服务器的访问！</p><h2 id="走近Linux系统"><a href="#走近Linux系统" class="headerlink" title="走近Linux系统"></a>走近Linux系统</h2><blockquote><p>开机登录</p></blockquote><p>开机会启动许多程序。它们在Windows叫做”服务”（service），在Linux就叫做”守护进程”（daemon）。</p><p>开机成功后，它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验证用户的身份，密码是不显示的，输完回车即可！</p><p>一般来说，用户的登录方式有三种：</p><ul><li>命令行登录</li><li>ssh登录</li><li>图形界面登录</li></ul><p>最高权限账户为 root，可以操作一切！</p><blockquote><p>关机</p></blockquote><p>在Linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p><p>关机指令为：shutdown ；</p><pre><code>sync # 将数据由内存同步到硬盘中。shutdown # 关机指令，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：shutdown –h 10 # 这个命令告诉大家，计算机将在10分钟后关机shutdown –h now # 立马关机shutdown –h 20:25 # 系统会在今天20:25关机shutdown –h +10 # 十分钟后关机shutdown –r now # 系统立马重启shutdown –r +10 # 系统十分钟后重启reboot # 就是重启，等同于 shutdown –r nowhalt # 关闭系统，等同于shutdown –h now 和 poweroff</code></pre><p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 <strong>sync</strong> 命令，把内存中的数据写到磁盘中。</p><blockquote><p>系统目录结构</p></blockquote><p>登录系统后，在当前命令窗口下输入命令：</p><pre><code>ls /</code></pre><p>你会看到如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaNSvqpApZkrQNCQFhVhyPoPdtFTibRBEssIj6EmiapgETvK2brVhfliaRRg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>树状目录结构：（Linux的一切资源都挂载在这个 / 根节点下）</p><p><img src= "/img/loading.gif" data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7LDkhrDl4H9TqZhwyeNSeaNibQYW2xbQIL38lrCCSPEzFKJhCiau0FvQMFSa37NQxTTbbo3PrpjJic5g/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><strong>以下是对这些目录的解释：</strong></p><ul><li><strong>/bin</strong>：bin是Binary的缩写, 这个目录存放着最经常使用的命令。</li><li><strong>/boot：</strong> 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</li><li><strong>/dev ：</strong> dev是Device(设备)的缩写, 存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</li><li><strong>/etc：</strong> 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li><li><strong>/home</strong>：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li><li><strong>/lib</strong>：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。</li><li><strong>/lost+found</strong>：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</li><li><strong>/media</strong>：Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。</li><li><strong>/mnt</strong>：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。</li><li><strong>/opt</strong>：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</li><li><strong>/proc</strong>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</li><li><strong>/root</strong>：该目录为系统管理员，也称作超级权限者的用户主目录。</li><li><strong>/sbin</strong>：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li><li><strong>/srv</strong>：该目录存放一些服务启动之后需要提取的数据。</li><li><strong>/sys</strong>：这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。</li><li><strong>/tmp</strong>：这个目录是用来存放一些临时文件的。</li><li><strong>/usr</strong>：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</li><li><strong>/usr/bin：</strong> 系统用户使用的应用程序。</li><li><strong>/usr/sbin：</strong> 超级用户使用的比较高级的管理程序和系统守护程序。</li><li><strong>/usr/src：</strong> 内核源代码默认的放置目录。</li><li><strong>/var</strong>：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</li><li><strong>/run</strong>：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IPOD-Dev-Doc</title>
      <link href="2020/12/06/ipod-dev-doc/"/>
      <url>2020/12/06/ipod-dev-doc/</url>
      
        <content type="html"><![CDATA[<h1 id="IPOD-Development-Doc"><a href="#IPOD-Development-Doc" class="headerlink" title="IPOD Development Doc"></a><strong>IPOD Development Doc</strong></h1><blockquote><p>💫 <a href="https://github.com/Wriprin/IPOD">Github</a></p></blockquote><h1 id="gt-Read-Songs-From-Phone-Part-1"><a href="#gt-Read-Songs-From-Phone-Part-1" class="headerlink" title="> Read Songs From Phone Part - 1"></a>&gt; Read Songs From Phone Part - 1</h1><ul><li><h5 id="commit-the-viewpagers-and-the-style-of-tabindicator"><a href="#commit-the-viewpagers-and-the-style-of-tabindicator" class="headerlink" title="commit the viewpagers and the style of tabindicator."></a>commit the viewpagers and the style of tabindicator.</h5></li></ul><h4 id="1-Download-the-TabLayout-Tip1-Tip2"><a href="#1-Download-the-TabLayout-Tip1-Tip2" class="headerlink" title="1. Download  the TabLayout.    Tip1, Tip2"></a>1. Download  the TabLayout.    <a href="https://www.jianshu.com/p/fde38f367019">Tip1</a>, <a href="https://www.cnblogs.com/duan-xue-bin/p/10059516.html">Tip2</a></h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.tabs.TabLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tab_layout<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorFullWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorAccent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#009688<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_indicator<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-ViewPager"><a href="#2-ViewPager" class="headerlink" title="2. ViewPager"></a>2. <a href="https://blog.csdn.net/qq_20785431/article/details/80865500">ViewPager</a></h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.tabs.TabLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tab_layout<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorFullWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorAccent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#009688<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_indicator<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-Viewpageradapter"><a href="#3-Viewpageradapter" class="headerlink" title="3. Viewpageradapter"></a>3. Viewpageradapter</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewPagerAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">FragmentPagerAdapter</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> ArrayList<span class="token operator">&lt;</span>Fragment<span class="token operator">></span> fragments<span class="token punctuation">;</span>    <span class="token keyword">private</span> ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> titles<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ViewPagerAdapter</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> FragmentManager fm<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fragments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>titles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">addFragments</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">,</span> String title<span class="token punctuation">)</span><span class="token punctuation">{</span>        fragments<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>        titles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Fragment <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fragments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fragments<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> CharSequence <span class="token function">getPageTitle</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> titles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-New-songsFragment-xml-and-albumFragment-xml"><a href="#4-New-songsFragment-xml-and-albumFragment-xml" class="headerlink" title="4.  New songsFragment.xml and albumFragment.xml"></a>4.  New songsFragment.xml and albumFragment.xml</h4><ul><li><h5 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a><a href="https://blog.csdn.net/weixin_43468667/article/details/89435098?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715478319195283043122%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715478319195283043122&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-6-89435098.nonecase&amp;utm_term=recyclerview&amp;spm=1018.2118.3001.4449">RecyclerView</a></h5></li></ul><h4 id="5-New-tabindicator-xml-to-initialize-its-style"><a href="#5-New-tabindicator-xml-to-initialize-its-style" class="headerlink" title="5.  New tabindicator.xml to initialize its style"></a>5.  New tabindicator.xml to initialize its style</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gradient</span> <span class="token attr-name"><span class="token namespace">android:</span>centerColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>angle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="gt-Read-Songs-From-Phone-Part-2"><a href="#gt-Read-Songs-From-Phone-Part-2" class="headerlink" title="> Read Songs From Phone Part - 2"></a><strong>&gt; Read Songs From Phone Part - 2</strong></h1><ul><li><h3 id="Add-the-permission-of-usage-fetch-all-the-songs-where-from-the-storage-to-app"><a href="#Add-the-permission-of-usage-fetch-all-the-songs-where-from-the-storage-to-app" class="headerlink" title="Add the permission of usage, fetch all the songs where from the storage to app."></a>Add the permission of usage, fetch all the songs where from the storage to app.</h3></li></ul><h4 id="1-Add-permission-in-MainActivity-java"><a href="#1-Add-permission-in-MainActivity-java" class="headerlink" title="1. Add permission in MainActivity.java"></a>1. Add permission in MainActivity.java</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ContextCompat<span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">)</span>        <span class="token operator">!=</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">}</span><span class="token punctuation">,</span>REQUEST_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        musicFiles <span class="token operator">=</span> <span class="token function">getAllAudio</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initViewPager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-Add-permission-in-AndroidMainfest-xml"><a href="#2-Add-permission-in-AndroidMainfest-xml" class="headerlink" title="2. Add permission in AndroidMainfest.xml"></a>2. Add permission in AndroidMainfest.xml</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-Add-onRequestPermissionsResult-in-MainActivity-java"><a href="#3-Add-onRequestPermissionsResult-in-MainActivity-java" class="headerlink" title="3. Add onRequestPermissionsResult() in MainActivity.java"></a>3. Add onRequestPermissionsResult() in MainActivity.java</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> REQUEST_CODE<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//Do whatever you want permission related;</span>            musicFiles <span class="token operator">=</span> <span class="token function">getAllAudio</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">initViewPager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">}</span><span class="token punctuation">,</span>REQUEST_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-New-io-wriprin-android-ipod-MusicFiles-java-to-pack-attributes-of-songs"><a href="#4-New-io-wriprin-android-ipod-MusicFiles-java-to-pack-attributes-of-songs" class="headerlink" title="4. New io.wriprin.android.ipod.MusicFiles.java to pack attributes of songs"></a>4. New io.wriprin.android.ipod.MusicFiles.java to pack attributes of songs</h4><ul><li><h4 id="notice-about-the-short-key-Alt-Insert-to-generate-the-constructor-and-the-Getter-Setter"><a href="#notice-about-the-short-key-Alt-Insert-to-generate-the-constructor-and-the-Getter-Setter" class="headerlink" title="notice about the short key, Alt + Insert to generate the constructor and the Getter, Setter;"></a>notice about the short key, Alt + Insert to generate the constructor and the Getter, Setter;</h4></li></ul><h4 id="5-Add-ArrayList-getAllAudio"><a href="#5-Add-ArrayList-getAllAudio" class="headerlink" title="5. Add ArrayList  getAllAudio"></a>5. Add ArrayList<musicfiles>  getAllAudio</musicfiles></h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> ArrayList<span class="token operator">&lt;</span>MusicFiles<span class="token operator">></span> <span class="token function">getAllAudio</span> <span class="token punctuation">(</span>Context context<span class="token punctuation">)</span>    <span class="token punctuation">{</span>            ArrayList<span class="token operator">&lt;</span>MusicFiles<span class="token operator">></span> tempAudioList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Uri uri <span class="token operator">=</span> MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>EXTERNAL_CONTENT_URI<span class="token punctuation">;</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> projection <span class="token operator">=</span>            <span class="token punctuation">{</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>TITLE<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>DURATION<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>DATA<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//for path</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>ARTIST<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>_ID            <span class="token punctuation">}</span><span class="token punctuation">;</span>            Cursor cursor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> null<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    String album <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String title <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String duration <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String path <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String artist <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String id <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    MusicFiles musicFiles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicFiles</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> title<span class="token punctuation">,</span> artist<span class="token punctuation">,</span> album<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//take log.e for check</span>                    Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"Path:"</span> <span class="token operator">+</span> path<span class="token punctuation">,</span> <span class="token string">"Album"</span> <span class="token operator">+</span> album<span class="token punctuation">)</span><span class="token punctuation">;</span>                    tempAudioList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>musicFiles<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>duplicate<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>album<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        albums<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>musicFiles<span class="token punctuation">)</span><span class="token punctuation">;</span>                        duplicate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>album<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> tempAudioList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><a href="https://blog.csdn.net/qqq3670279/article/details/51475899?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715919119726885832985%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715919119726885832985&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-51475899.nonecase&amp;utm_term=getcontentresolver&amp;spm=1018.2118.3001.4449">context.getContentResolver().query</a></li></ul><h4 id="6-Global-Declaration-the-MusicFiles-to-use-it-when-user-choose-allow-permission"><a href="#6-Global-Declaration-the-MusicFiles-to-use-it-when-user-choose-allow-permission" class="headerlink" title="6. Global Declaration the MusicFiles to use it when user choose allow permission"></a>6. Global Declaration the MusicFiles to use it when user choose allow permission</h4><h1 id="gt-Read-Songs-From-Phone-Part-3"><a href="#gt-Read-Songs-From-Phone-Part-3" class="headerlink" title="> Read Songs From Phone Part - 3"></a><strong>&gt; Read Songs From Phone Part - 3</strong></h1><ul><li><h5 id="Display-SongList"><a href="#Display-SongList" class="headerlink" title="Display SongList"></a>Display SongList</h5></li></ul><h4 id="1-New-layout-resource-files-music-items-xml-to-display-the-SongList"><a href="#1-New-layout-resource-files-music-items-xml-to-display-the-SongList" class="headerlink" title="1. New layout resource files - music_items.xml to display the SongList"></a>1. New layout resource files - music_items.xml to display the SongList</h4><h4 id="2-New-io-wriprin-android-ipod-MusicAdapter-java-collect-the-info"><a href="#2-New-io-wriprin-android-ipod-MusicAdapter-java-collect-the-info" class="headerlink" title="2. New io.wriprin.android.ipod.MusicAdapter.java  collect the info"></a>2. New io.wriprin.android.ipod.MusicAdapter.java  collect the info</h4><ul><li><h5 id="ViewHolder"><a href="#ViewHolder" class="headerlink" title="ViewHolder()"></a><a href="https://www.cnblogs.com/wugu-ren/p/6106379.html">ViewHolder()</a></h5></li><li><h5 id="Context"><a href="#Context" class="headerlink" title="Context()"></a><a href="https://blog.csdn.net/u013196348/article/details/94395205?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160716874619724839511869%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160716874619724839511869&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-3-94395205.nonecase&amp;utm_term=context&amp;spm=1018.2118.3001.4449">Context()</a></h5></li><li><h5 id="Adapter"><a href="#Adapter" class="headerlink" title="Adapter()"></a><a href="https://blog.csdn.net/fznpcy/article/details/8658155?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160716922219724818061062%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160716922219724818061062&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-8658155.nonecase&amp;utm_term=adapter&amp;spm=1018.2118.3001.4449">Adapter()</a></h5></li><li><h5 id="Inflater"><a href="#Inflater" class="headerlink" title="Inflater()"></a><a href="https://blog.csdn.net/qq_42376054/article/details/102509594?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715644219721940212443%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715644219721940212443&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-102509594.nonecase&amp;utm_term=inflater&amp;spm=1018.2118.3001.4449">Inflater()</a></h5></li><li><h5 id="byte"><a href="#byte" class="headerlink" title="byte[]"></a><a href="https://blog.csdn.net/bzlj2912009596/article/details/79146622?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160717113419724813259611%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160717113419724813259611&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-79146622.nonecase&amp;utm_term=android%20byte&amp;spm=1018.2118.3001.4449">byte[]</a></h5></li></ul><h4 id="3-Import-Glide-dependency-to-build-gradle-Module-app"><a href="#3-Import-Glide-dependency-to-build-gradle-Module-app" class="headerlink" title="3. Import Glide dependency to build.gradle (Module: app)"></a>3. Import <a href="https://blog.csdn.net/xxdw1992/article/details/93624487?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160717011019724813279848%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160717011019724813279848&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-93624487.nonecase&amp;utm_term=glide&amp;spm=1018.2118.3001.4449">Glide</a> dependency to build.gradle (Module: app)</h4><pre class="line-numbers language-gradle"><code class="language-gradle">//Glideimplementation 'com.github.bumptech.glide:glide:4.11.0'annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-songsFragment-java-recyclerview-match-Adapter"><a href="#4-songsFragment-java-recyclerview-match-Adapter" class="headerlink" title="4. songsFragment.java - recyclerview match Adapter"></a>4. songsFragment.java - recyclerview match Adapter</h4><h1 id="gt-Read-Songs-From-Phone-Part-4"><a href="#gt-Read-Songs-From-Phone-Part-4" class="headerlink" title="> Read Songs From Phone Part - 4"></a><strong>&gt; Read Songs From Phone Part - 4</strong></h1><ul><li><h5 id="Commit-the-layout-of-PlayerActivity"><a href="#Commit-the-layout-of-PlayerActivity" class="headerlink" title="Commit the layout of PlayerActivity"></a>Commit the layout of PlayerActivity</h5></li></ul><h4 id="1-Add-the-Vector-Assest-which-under-drawable-and-change-to-a-suitable-color"><a href="#1-Add-the-Vector-Assest-which-under-drawable-and-change-to-a-suitable-color" class="headerlink" title="1. Add the Vector Assest which under drawable and change to a suitable color."></a>1. Add the Vector Assest which under drawable and change to a suitable color.</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/VectorAssest.png" alt=""></p><h4 id="2-New-io-wriprin-android-ipod-PlayerActivity-EmptyActivity"><a href="#2-New-io-wriprin-android-ipod-PlayerActivity-EmptyActivity" class="headerlink" title="2. New io.wriprin.android.ipod.PlayerActivity(EmptyActivity)"></a>2. New io.wriprin.android.ipod.PlayerActivity(EmptyActivity)</h4><h4 id="3-New-Drawable-Resource-File-main-bg-xml"><a href="#3-New-Drawable-Resource-File-main-bg-xml" class="headerlink" title="3. New (Drawable Resource File ) - main_bg.xml"></a>3. New (Drawable Resource File ) - main_bg.xml</h4><ul><li><h5 id="RootElement-is-shape"><a href="#RootElement-is-shape" class="headerlink" title="RootElement is shape"></a>RootElement is shape</h5></li></ul><h4 id="4-New-Drawable-Resource-File-gradient-xml"><a href="#4-New-Drawable-Resource-File-gradient-xml" class="headerlink" title="4. New (Drawable Resource File ) - gradient.xml"></a>4. New (Drawable Resource File ) - gradient.xml</h4><ul><li><h5 id="ImageView’s-scaleType"><a href="#ImageView’s-scaleType" class="headerlink" title="ImageView’s scaleType"></a>ImageView’s <a href="https://blog.csdn.net/laoziyueguo3/article/details/48312347?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721888519725271058745%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721888519725271058745&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-48312347.pc_search_result_no_baidu_js&amp;utm_term=scaletype&amp;spm=1018.2118.3001.4449">scaleType</a></h5></li><li><h5 id="ellipsize"><a href="#ellipsize" class="headerlink" title="ellipsize"></a><a href="https://blog.csdn.net/imdxt1986/article/details/6942743?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721921819724838541780%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721921819724838541780&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-6942743.pc_search_result_no_baidu_js&amp;utm_term=ellipsize&amp;spm=1018.2118.3001.4449">ellipsize</a></h5></li></ul><h4 id="5-Add-FloatingActionButton-in-activity-player-xml"><a href="#5-Add-FloatingActionButton-in-activity-player-xml" class="headerlink" title="5. Add FloatingActionButton in activity_player.xml"></a>5. Add <a href="https://blog.csdn.net/gaolh89/article/details/79759404?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721938819195271620070%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721938819195271620070&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-79759404.pc_search_result_no_baidu_js&amp;utm_term=FloatingActionButton&amp;spm=1018.2118.3001.4449">FloatingActionButton</a> in activity_player.xml</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.floatingactionbutton.FloatingActionButton</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/play_pause<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/ic_play<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_centerHorizontal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_centerVertical</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>focusable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h5 id="why-use-focusable"><a href="#why-use-focusable" class="headerlink" title="why use focusable"></a><a href="https://blog.csdn.net/ckf1122/article/details/6269221?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">why use focusable</a></h5></li></ul><h1 id="gt-Read-Songs-From-Phone-Part-5-PlayAudio"><a href="#gt-Read-Songs-From-Phone-Part-5-PlayAudio" class="headerlink" title="> Read Songs From Phone Part - 5 | PlayAudio"></a><strong>&gt; Read Songs From Phone Part - 5 | PlayAudio</strong></h1><ul><li><h5 id="Commit-the-FUNC-of-itemview-click"><a href="#Commit-the-FUNC-of-itemview-click" class="headerlink" title="Commit the FUNC of itemview.click"></a>Commit the FUNC of <a href="https://blog.csdn.net/kent_todo/article/details/41943935?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722044019725271027060%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722044019725271027060&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-41943935.pc_search_result_no_baidu_js&amp;utm_term=itemview&amp;spm=1018.2118.3001.4449">itemview</a>.click</h5></li></ul><h4 id="1-Add-itemview-click-in-MusicAdapter-java"><a href="#1-Add-itemview-click-in-MusicAdapter-java" class="headerlink" title="1. Add itemview.click in MusicAdapter.java"></a>1. Add itemview.click in MusicAdapter.java</h4><pre class="line-numbers language-java"><code class="language-java">holder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> PlayerActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        mContext<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-Add-TimeLine’s-layout-in-activity-player-xml"><a href="#2-Add-TimeLine’s-layout-in-activity-player-xml" class="headerlink" title="2. Add TimeLine’s layout in activity_player.xml"></a>2. Add TimeLine’s layout in activity_player.xml</h4><ul><li><h5 id="SeekBar"><a href="#SeekBar" class="headerlink" title="SeekBar"></a><a href="https://blog.csdn.net/wu_kangjie/article/details/80145731?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722074419195271695819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722074419195271695819&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-80145731.pc_search_result_no_baidu_js&amp;utm_term=seekbar&amp;spm=1018.2118.3001.4449">SeekBar</a></h5></li></ul><h4 id="3-Implement-the-Init-FUNC-of-PlayerActivity-java"><a href="#3-Implement-the-Init-FUNC-of-PlayerActivity-java" class="headerlink" title="3. Implement the Init FUNC of PlayerActivity.java"></a>3. Implement the Init FUNC of PlayerActivity.java</h4><ul><li><h5 id="Declare-and-assign"><a href="#Declare-and-assign" class="headerlink" title="Declare and assign"></a>Declare and assign</h5></li></ul><h4 id="4-MusicAdapter-java-to-add-intent-putExtra"><a href="#4-MusicAdapter-java-to-add-intent-putExtra" class="headerlink" title="4. MusicAdapter.java to add intent.putExtra()"></a>4. MusicAdapter.java to add <a href="https://blog.csdn.net/ching_zhi/article/details/53842302?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722165919195265193358%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722165919195265193358&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-53842302.pc_search_result_no_baidu_js&amp;utm_term=putextra&amp;spm=1018.2118.3001.4449">intent.putExtra()</a></h4><pre class="line-numbers language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><h5 id="position"><a href="#position" class="headerlink" title="position"></a><a href="https://www.cnblogs.com/vus520/archive/2011/08/30/2561932.html">position</a></h5></li></ul><h4 id="5-PlayerActivity-java-get-the-position-from-MusicAdapter-java"><a href="#5-PlayerActivity-java-get-the-position-from-MusicAdapter-java" class="headerlink" title="5. PlayerActivity.java get the position from MusicAdapter.java"></a>5. PlayerActivity.java get the position from MusicAdapter.java</h4><pre class="line-numbers language-java"><code class="language-java">position <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><h5 id="static"><a href="#static" class="headerlink" title="static"></a><a href="https://blog.csdn.net/guotianqing/article/details/79828100?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722214719724838563346%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722214719724838563346&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-1-79828100.pc_search_result_no_baidu_js&amp;utm_term=static%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8&amp;spm=1018.2118.3001.4449">static</a></h5></li></ul><h4 id="6-Implement-the-method-of-playing"><a href="#6-Implement-the-method-of-playing" class="headerlink" title="6. Implement the method of playing"></a>6. Implement the method of playing</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">getIntentMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    position <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String sender <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"sender"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>sender <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> sender<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"albumDetails"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        listSongs <span class="token operator">=</span> albumFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        listSongs <span class="token operator">=</span> mFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>listSongs <span class="token operator">!=</span> null<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        playPauseBtn<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_pause<span class="token punctuation">)</span><span class="token punctuation">;</span>        uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>listSongs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaPlayer <span class="token operator">!=</span> null<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer <span class="token operator">=</span> MediaPlayer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        mediaPlayer <span class="token operator">=</span> MediaPlayer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    seekBar<span class="token punctuation">.</span><span class="token function">setMax</span><span class="token punctuation">(</span>mediaPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">metaData</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h5 id="MediaPlayer"><a href="#MediaPlayer" class="headerlink" title="MediaPlayer"></a><a href="https://blog.csdn.net/zhaokx3/article/details/53432718?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722327319724848150921%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722327319724848150921&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-7-53432718.pc_search_result_no_baidu_js&amp;utm_term=mediaplayer&amp;spm=1018.2118.3001.4449">MediaPlayer</a></h5></li></ul><h4 id="7-Implement-the-timeline-Durationbar-and-FortmattedTime"><a href="#7-Implement-the-timeline-Durationbar-and-FortmattedTime" class="headerlink" title="7. Implement the timeline_Durationbar  and FortmattedTime"></a>7. Implement the timeline_Durationbar  and FortmattedTime</h4><ul><li><h5 id="runOnUiThread-Thread-collocate-with-Handler"><a href="#runOnUiThread-Thread-collocate-with-Handler" class="headerlink" title="runOnUiThread Thread collocate with Handler"></a><a href="https://blog.csdn.net/cf8833/article/details/90297775?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722366319724813238138%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722366319724813238138&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-4-90297775.pc_search_result_no_baidu_js&amp;utm_term=runonuithread&amp;spm=1018.2118.3001.4449">runOnUiThread</a> Thread collocate with <a href="https://blog.csdn.net/wsq_tomato/article/details/80301851?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722545519724847137907%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722545519724847137907&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-1-80301851.pc_search_result_no_baidu_js&amp;utm_term=handler&amp;spm=1018.2118.3001.4449">Handler</a></h5></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> devDoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="2020/11/22/git/"/>
      <url>2020/11/22/git/</url>
      
        <content type="html"><![CDATA[<h2 id="Git分布式版本控制工具"><a href="#Git分布式版本控制工具" class="headerlink" title="Git分布式版本控制工具"></a>Git分布式版本控制工具</h2><h2 id="1-Git概述"><a href="#1-Git概述" class="headerlink" title="1. Git概述"></a>1. Git概述</h2><h3 id="1-1-Git历史"><a href="#1-1-Git历史" class="headerlink" title="1.1 Git历史"></a>1.1 Git历史</h3><p>Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 </p><p>他们对新的系统制订了若干目标：</p><ul><li><p>速度</p></li><li><p>简单的设计</p></li><li><p>对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</p></li><li><p>完全分布式</p></li><li><p>有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</p></li></ul><h3 id="1-2-Git与SVN对比"><a href="#1-2-Git与SVN对比" class="headerlink" title="1.2 Git与SVN对比"></a>1.2 Git与SVN对比</h3><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而开发人员工作的时候，用的都是自己的电脑，所以首先要从中央服务器下载最新的版本，然后开发，开发完后，需要把自己开发的代码提交到中央服务器。</p><p>集中式版本控制工具缺点：</p><p>  服务器单点故障</p><p>  容错性差</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-1.png" alt=""></p><p>Git是分布式版本控制系统（Distributed Version Control System，简称 DVCS） ，分为两种类型的仓库：</p><p>本地仓库和远程仓库</p><p>本地仓库：是在开发人员自己电脑上的Git仓库        </p><p>远程仓库：是在远程服务器上的Git仓库</p><p>Clone：克隆，就是将远程仓库复制到本地</p><p>Push：推送，就是将本地仓库代码上传到远程仓库</p><p>Pull：拉取，就是将远程仓库代码下载到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-2.png" alt=""></p><h3 id="1-3-Git工作流程"><a href="#1-3-Git工作流程" class="headerlink" title="1.3 Git工作流程"></a>1.3 Git工作流程</h3><p>工作流程如下：</p><p>1．从远程仓库中克隆代码到本地仓库</p><p>2．从本地仓库中checkout代码然后进行代码修改</p><p>3．在提交前先将代码提交到暂存区</p><p>4．提交到本地仓库。本地仓库中保存修改的各个历史版本</p><p>5．修改完成后，需要和团队成员共享代码时，将代码push到远程仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-3.png" alt=""></p><h3 id="1-4-Git下载与安装"><a href="#1-4-Git下载与安装" class="headerlink" title="1.4 Git下载与安装"></a>1.4 Git下载与安装</h3><p>下载地址： <a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-4.png" alt="">  </p><p>下载完成后可以得到如下安装文件：</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-5.png" alt="">  </p><h2 id="2-Git代码托管服务"><a href="#2-Git代码托管服务" class="headerlink" title="2. Git代码托管服务"></a>2. Git代码托管服务</h2><h3 id="2-1-常用的Git代码托管服务"><a href="#2-1-常用的Git代码托管服务" class="headerlink" title="2.1 常用的Git代码托管服务"></a>2.1 常用的Git代码托管服务</h3><p>前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。</p><p>gitHub（ 地址：<a href="https://github.com/">https://github.com/</a> ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub</p><p>码云（地址： <a href="https://gitee.com/">https://gitee.com/</a> ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快</p><p>GitLab （地址： <a href="https://about.gitlab.com/">https://about.gitlab.com/</a> ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务</p><h3 id="2-2-在码云注册账号"><a href="#2-2-在码云注册账号" class="headerlink" title="2.2 在码云注册账号"></a>2.2 在码云注册账号</h3><p>要想使用码云的相关服务，需要注册账号（地址： <a href="https://gitee.com/signup">https://gitee.com/signup</a> ）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-6.png" alt=""></p><h3 id="2-3-登录码云并创建Git远程仓库"><a href="#2-3-登录码云并创建Git远程仓库" class="headerlink" title="2.3 登录码云并创建Git远程仓库"></a>2.3 登录码云并创建Git远程仓库</h3><p>注册完成后就可以使用刚刚注册的邮箱进行登录（地址： <a href="https://gitee.com/login">https://gitee.com/login</a> ）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-7.png" alt=""></p><p>登录成功后就可以创建Git远程仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-8.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-9.png" alt=""></p><p>创建完成后可以查看仓库信息</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-10.png" alt=""></p><p>每个Git远程仓库都会对应一个网络地址，可以点击克隆/下载按钮弹出窗口并点击复制按钮获得这个网络地址</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-11.png" alt=""></p><p>我们当前创建的Git远程仓库对应的地址为：<a href="https://gitee.com/ChuanZhiBoKe/myGitRepo.git">https://gitee.com/ChuanZhiBoKe/myGitRepo.git</a></p><h3 id="2-4-邀请其他用户成为仓库成员"><a href="#2-4-邀请其他用户成为仓库成员" class="headerlink" title="2.4 邀请其他用户成为仓库成员"></a>2.4 邀请其他用户成为仓库成员</h3><p>前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人（身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-12.png" alt=""></p><h2 id="3-Git常用命令"><a href="#3-Git常用命令" class="headerlink" title="3. Git常用命令"></a>3. Git常用命令</h2><h3 id="3-1-环境配置"><a href="#3-1-环境配置" class="headerlink" title="3.1 环境配置"></a>3.1 环境配置</h3><p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息</p><p>设置用户信息 </p><p>   git config –global user.name “itcast”</p><p>   git config –global user.email “<a href="mailto:hello@itcast.cn">hello@itcast.cn</a>”</p><p>查看配置信息</p><p>   git config –list</p><p>   git config user.name</p><p>通过上面的命令设置的信息会保存在~/.gitconfig文件中</p><h3 id="3-2-获取Git仓库"><a href="#3-2-获取Git仓库" class="headerlink" title="3.2 获取Git仓库"></a>3.2 获取Git仓库</h3><p>要使用Git对我们的代码进行版本控制，首先需要获得Git仓库</p><p>获取Git仓库通常有两种方式：</p><p>  在本地初始化一个Git仓库</p><p>  从远程仓库克隆</p><h4 id="3-2-1在本地初始化一个Git仓库"><a href="#3-2-1在本地初始化一个Git仓库" class="headerlink" title="3.2.1在本地初始化一个Git仓库"></a>3.2.1在本地初始化一个Git仓库</h4><p>执行步骤如下：</p><ol><li><p>在电脑的任意位置创建一个空目录（例如repo1）作为我们的本地Git仓库</p></li><li><p>进入这个目录中，点击右键打开Git bash窗口</p></li><li><p>执行命令git init</p></li></ol><p>如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-13.png" alt=""></p><h4 id="3-2-2从远程仓库克隆"><a href="#3-2-2从远程仓库克隆" class="headerlink" title="3.2.2从远程仓库克隆"></a>3.2.2从远程仓库克隆</h4><p>可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地</p><p>命令形式为：git clone 远程Git仓库地址 </p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-14.png" alt=""></p><h3 id="3-3工作目录、暂存区以及版本库概念"><a href="#3-3工作目录、暂存区以及版本库概念" class="headerlink" title="3.3工作目录、暂存区以及版本库概念"></a>3.3工作目录、暂存区以及版本库概念</h3><p>为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到</p><p>版本库：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等</p><p>工作目录（工作区）：包含.git文件夹的目录就是工作目录，主要用于存放开发的代码</p><p>暂存区：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-15.png" alt=""></p><h3 id="3-4-Git工作目录下文件的两种状态"><a href="#3-4-Git工作目录下文件的两种状态" class="headerlink" title="3.4 Git工作目录下文件的两种状态"></a>3.4 Git工作目录下文件的两种状态</h3><p>Git工作目录下的文件存在两种状态：</p><p>  untracked 未跟踪（未被纳入版本控制）</p><p>  tracked 已跟踪（被纳入版本控制）</p><p>​        Unmodified 未修改状态</p><p>​        Modified 已修改状态</p><p>​        Staged 已暂存状态</p><p>这些文件的状态会随着我们执行Git的命令发生变化</p><h3 id="3-5-本地仓库操作"><a href="#3-5-本地仓库操作" class="headerlink" title="3.5 本地仓库操作"></a>3.5 本地仓库操作</h3><p>git status 查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-16.png" alt=""></p><p>也可以使用git status –s 使输出信息更加简洁</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-17.png" alt=""></p><p>git add 将未跟踪的文件加入暂存区</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-18.png" alt=""></p><p>将新创建的文件加入暂存区后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-19.png" alt=""></p><p>git reset 将暂存区的文件取消暂存</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-20.png" alt="">  </p><p>将文件取消暂存后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-21.png" alt=""></p><p>git commit 将暂存区的文件修改提交到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-22.png" alt=""></p><p>git rm 删除文件</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-23.png" alt=""></p><p>删除文件后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-24.png" alt=""></p><p>上面删除的只是工作区的文件，需要提交到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-25.png" alt=""></p><p>将文件添加至忽略列表</p><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p><pre><code># no .a files*.a# but do track lib.a, even though you're ignoring .a files above!lib.a# only ignore the TODO file in the current directory, not subdir/TODO/TODO# ignore all files in the build/ directorybuild/# ignore doc/notes.txt, but not doc/server/arch.txtdoc/*.txt# ignore all .pdf files in the doc/ directorydoc/**/*.pdf</code></pre><p>git log 查看日志记录</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-26.png" alt=""></p><h3 id="3-6-远程仓库操作"><a href="#3-6-远程仓库操作" class="headerlink" title="3.6 远程仓库操作"></a>3.6 远程仓库操作</h3><p>前面执行的命令操作都是针对的本地仓库，本章节我们会学习关于远程仓库的一些操作，具体包括：</p><h4 id="3-6-1查看远程仓库"><a href="#3-6-1查看远程仓库" class="headerlink" title="3.6.1查看远程仓库"></a>3.6.1查看远程仓库</h4><p>如果想查看已经配置的远程仓库服务器，可以运行 git remote 命令。 它会列出指定的每一个远程服务器的简写。 如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-27.png" alt=""></p><h4 id="3-6-2-添加远程仓库"><a href="#3-6-2-添加远程仓库" class="headerlink" title="3.6.2 添加远程仓库"></a>3.6.2 添加远程仓库</h4><p>运行 git remote add <shortname> <url> 添加一个新的远程 Git 仓库，同时指定一个可以引用的简写</url></shortname></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-28.png" alt=""></p><h4 id="3-6-3-从远程仓库克隆"><a href="#3-6-3-从远程仓库克隆" class="headerlink" title="3.6.3 从远程仓库克隆"></a>3.6.3 从远程仓库克隆</h4><p>如果你想获得一份已经存在了的 Git 仓库的拷贝，这时就要用到 git clone 命令。 Git 克隆的是该 Git 仓库服务器上的几乎所有数据（包括日志信息、历史记录等），而不仅仅是复制工作所需要的文件。 当你执行 git clone 命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。</p><p>克隆仓库的命令格式是 git clone [url] </p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-29.png" alt=""></p><h4 id="3-6-4-移除无效的远程仓库"><a href="#3-6-4-移除无效的远程仓库" class="headerlink" title="3.6.4 移除无效的远程仓库"></a>3.6.4 移除无效的远程仓库</h4><p>如果因为一些原因想要移除一个远程仓库 ，可以使用 git remote rm</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-30.png" alt=""></p><p>注意：此命令只是从本地移除远程仓库的记录，并不会真正影响到远程仓库</p><h4 id="3-6-5-从远程仓库中抓取与拉取"><a href="#3-6-5-从远程仓库中抓取与拉取" class="headerlink" title="3.6.5 从远程仓库中抓取与拉取"></a>3.6.5 从远程仓库中抓取与拉取</h4><p>git fetch 是从远程仓库获取最新版本到本地仓库，不会自动merge</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-31.png" alt=""></p><p>git pull 是从远程仓库获取最新版本并merge到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-32.png" alt=""></p><p>注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ），解决此问题可以在git pull命令后加入参数–allow-unrelated-histories</p><h4 id="3-6-6-推送到远程仓库"><a href="#3-6-6-推送到远程仓库" class="headerlink" title="3.6.6 推送到远程仓库"></a>3.6.6 推送到远程仓库</h4><p>当你想分享你的代码时，可以将其推送到远程仓库。 命令形式：git push [remote-name][branch-name]</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-54.png" alt=""></p><h3 id="3-7-Git分支"><a href="#3-7-Git分支" class="headerlink" title="3.7 Git分支"></a>3.7 Git分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。Git 的master分支并不是一个特殊分支。 它跟其它分支没有区别。 之所以几乎每一个仓库都有 master 分支，是因为git init 命令默认创建它，并且大多数人都懒得去改动它。</p><p>在本章节我们会学习到关于分支的相关命令，具体如下：</p><h4 id="3-7-1-查看分支"><a href="#3-7-1-查看分支" class="headerlink" title="3.7.1 查看分支"></a>3.7.1 查看分支</h4><p># 列出所有本地分支</p><p>$ git branch</p><p># 列出所有远程分支</p><p>$ git branch -r</p><p># 列出所有本地分支和远程分支</p><p>$ git branch -a</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-33.png" alt=""></p><h4 id="3-7-2-创建分支"><a href="#3-7-2-创建分支" class="headerlink" title="3.7.2 创建分支"></a>3.7.2 创建分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-34.png" alt=""></p><h4 id="3-7-3-切换分支"><a href="#3-7-3-切换分支" class="headerlink" title="3.7.3 切换分支"></a>3.7.3 切换分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-35.png" alt=""></p><h4 id="3-7-4-推送至远程仓库分支"><a href="#3-7-4-推送至远程仓库分支" class="headerlink" title="3.7.4 推送至远程仓库分支"></a>3.7.4 推送至远程仓库分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-36.png" alt=""></p><h4 id="3-7-5-合并分支"><a href="#3-7-5-合并分支" class="headerlink" title="3.7.5 合并分支"></a>3.7.5 合并分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-37.png" alt=""></p><p>有时候合并操作不会如此顺利。 如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没办法合并它们，同时会提示文件冲突。此时需要我们打开冲突的文件并修复冲突内容，最后执行git add命令来标识冲突已解决</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-38.png" alt=""></p><h4 id="3-7-5-删除分支"><a href="#3-7-5-删除分支" class="headerlink" title="3.7.5 删除分支"></a>3.7.5 删除分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-39.png" alt=""></p><p>如果要删除的分支中进行了一些开发动作，此时执行上面的删除命令并不会删除分支，如果坚持要删除此分支，可以将命令中的-d参数改为-D</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-40.png" alt=""></p><p>注：如果要删除远程仓库中的分支，可以使用命令git push<br>origin –d branchName</p><h2 id="4-在IDEA中使用Git"><a href="#4-在IDEA中使用Git" class="headerlink" title="4. 在IDEA中使用Git"></a>4. 在IDEA中使用Git</h2><h3 id="4-1-在IDEA中配置Git"><a href="#4-1-在IDEA中配置Git" class="headerlink" title="4.1 在IDEA中配置Git"></a>4.1 在IDEA中配置Git</h3><p>安装好IntelliJ IDEA后，如果Git安装在默认路径下，那么idea会自动找到git的位置，如果更改了Git的安装位置则需要手动配置下Git的路径。</p><p>选择File→Settings打开设置窗口，找到Version Control下的git选项：</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-41.png" alt=""></p><p>选择git的安装目录后可以点击“Test”按钮测试是否正确配置</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-42.png" alt=""></p><h3 id="4-2-在IDEA中使用Git"><a href="#4-2-在IDEA中使用Git" class="headerlink" title="4.2 在IDEA中使用Git"></a>4.2 在IDEA中使用Git</h3><h4 id="4-2-1在IDEA中创建工程并将工程添加至Git"><a href="#4-2-1在IDEA中创建工程并将工程添加至Git" class="headerlink" title="4.2.1在IDEA中创建工程并将工程添加至Git"></a>4.2.1在IDEA中创建工程并将工程添加至Git</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-43.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-44.png" alt=""></p><p>将项目添加至Git管理后，可以从IDEA的工具栏上看到Git操作的按钮</p><h4 id="4-2-2-将文件添加到暂存区"><a href="#4-2-2-将文件添加到暂存区" class="headerlink" title="4.2.2 将文件添加到暂存区"></a>4.2.2 将文件添加到暂存区</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-45.png" alt=""></p><h4 id="4-2-3-提交文件"><a href="#4-2-3-提交文件" class="headerlink" title="4.2.3 提交文件"></a>4.2.3 提交文件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-46.png" alt=""></p><h4 id="4-2-4-将代码推送到远程仓库"><a href="#4-2-4-将代码推送到远程仓库" class="headerlink" title="4.2.4 将代码推送到远程仓库"></a>4.2.4 将代码推送到远程仓库</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-47.png" alt=""></p><h4 id="4-2-5-从远程仓库克隆工程到本地"><a href="#4-2-5-从远程仓库克隆工程到本地" class="headerlink" title="4.2.5 从远程仓库克隆工程到本地"></a>4.2.5 从远程仓库克隆工程到本地</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-48.png" alt=""></p><h4 id="4-2-6-从远程拉取代码"><a href="#4-2-6-从远程拉取代码" class="headerlink" title="4.2.6 从远程拉取代码"></a>4.2.6 从远程拉取代码</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-49.png" alt=""></p><h4 id="4-2-7-版本对比"><a href="#4-2-7-版本对比" class="headerlink" title="4.2.7 版本对比"></a>4.2.7 版本对比</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-50.png" alt=""></p><h4 id="4-2-8-创建分支"><a href="#4-2-8-创建分支" class="headerlink" title="4.2.8 创建分支"></a>4.2.8 创建分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-51.png" alt=""></p><h4 id="4-2-9-切换分支"><a href="#4-2-9-切换分支" class="headerlink" title="4.2.9 切换分支"></a>4.2.9 切换分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-52.png" alt=""></p><h4 id="4-2-10-分支合并"><a href="#4-2-10-分支合并" class="headerlink" title="4.2.10 分支合并"></a>4.2.10 分支合并</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-53.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaMemo</title>
      <link href="2020/11/15/java-day-01/"/>
      <url>2020/11/15/java-day-01/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Java概述"><a href="#1-Java概述" class="headerlink" title="1. Java概述"></a>1. Java概述</h2><h3 id="1-1-Java语言发展史（了解）"><a href="#1-1-Java语言发展史（了解）" class="headerlink" title="1.1 Java语言发展史（了解）"></a>1.1 Java语言发展史（了解）</h3><p>语言：人与人交流沟通的表达方式</p><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p><p>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言</p><p>Java之父：詹姆斯·高斯林（James Gosling）</p><p>2009年，Sun公司被甲骨文公司收购，所以我们现在访问oracle官网即可：<a href="https://www.oracle.com/">https://www.oracle.com</a> </p><p>当前，我们课程使用的JDK版本：11.0</p><h3 id="1-2-Java语言跨平台原理（理解）"><a href="#1-2-Java语言跨平台原理（理解）" class="headerlink" title="1.2 Java语言跨平台原理（理解）"></a>1.2 Java语言跨平台原理（理解）</h3><p>Java程序并非是直接运行的，Java编译器将Java源程序编译成与平台无关的字节码文件(class文件)，然后由Java虚拟机（JVM）对字节码文件解释执行。所以在不同的操作系统下，只需安装不同的Java虚拟机即可实现java程序的跨平台。</p><h3 id="1-3-JRE和JDK（记忆）"><a href="#1-3-JRE和JDK（记忆）" class="headerlink" title="1.3 JRE和JDK（记忆）"></a>1.3 JRE和JDK（记忆）</h3><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p><h3 id="1-4-JDK的下载和安装（应用）"><a href="#1-4-JDK的下载和安装（应用）" class="headerlink" title="1.4 JDK的下载和安装（应用）"></a>1.4 JDK的下载和安装（应用）</h3><h4 id="1-4-1-下载"><a href="#1-4-1-下载" class="headerlink" title="1.4.1 下载"></a>1.4.1 下载</h4><p>通过官方网站获取JDK</p><p><a href="http://www.oracle.com/">http://www.oracle.com</a></p><p><strong>注意</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p>具体下载步骤请参见《JDK下载及安装说明文档》</p><h4 id="1-4-2-安装"><a href="#1-4-2-安装" class="headerlink" title="1.4.2 安装"></a>1.4.2 安装</h4><p>傻瓜式安装，下一步即可。但默认的安装路径是在C:\Program Files下，为方便统一管理建议修改安装路径，将与开发相关的软件都安装到一个目录下，例如：E:\develop。</p><p><strong>注意</strong>：安装路径不要包含中文或者空格等特殊字符（使用纯英文目录）。</p><p>具体安装步骤请参见《JDK下载及安装说明文档》</p><h4 id="1-4-3-JDK的安装目录介绍"><a href="#1-4-3-JDK的安装目录介绍" class="headerlink" title="1.4.3 JDK的安装目录介绍"></a>1.4.3 JDK的安装目录介绍</h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h2 id="2-第一个演示程序"><a href="#2-第一个演示程序" class="headerlink" title="2. 第一个演示程序"></a>2. 第一个演示程序</h2><h3 id="2-1-常用DOS命令（应用）"><a href="#2-1-常用DOS命令（应用）" class="headerlink" title="2.1 常用DOS命令（应用）"></a>2.1 常用DOS命令（应用）</h3><p>在接触集成开发环境之前，我们需要使用命令行窗口对java程序进行编译和运行，所以需要知道一些常用DOS命令。</p><p>1、打开命令行窗口的方式：win + r打开运行窗口，输入cmd，回车。</p><p>2、常用命令及其作用</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称:</td><td>盘符切换。E:回车，表示切换到E盘。</td></tr><tr><td>dir</td><td>查看当前路径下的内容。</td></tr><tr><td>cd 目录</td><td>进入单级目录。cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录。</td></tr><tr><td>cd 目录1\目录2...</td><td>进入多级目录。cd itheima\JavaSE</td></tr><tr><td>cd \</td><td>回退到盘符目录。</td></tr><tr><td>cls</td><td>清屏。</td></tr><tr><td>exit</td><td>退出命令提示符窗口。</td></tr></tbody></table><h3 id="2-2-Path环境变量的配置（应用）"><a href="#2-2-Path环境变量的配置（应用）" class="headerlink" title="2.2 Path环境变量的配置（应用）"></a>2.2 Path环境变量的配置（应用）</h3><h4 id="2-2-1-为什么配置环境变量"><a href="#2-2-1-为什么配置环境变量" class="headerlink" title="2.2.1 为什么配置环境变量"></a>2.2.1 为什么配置环境变量</h4><p>开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在该目录下执行。我们不可能把所有的java文件都放到JDK的bin目录下，所以配置环境变量的作用就是可以使bin目录下的java相关命令可以在任意目录下使用。</p><h4 id="2-2-2-配置环境变量步骤"><a href="#2-2-2-配置环境变量步骤" class="headerlink" title="2.2.2 配置环境变量步骤"></a>2.2.2 配置环境变量步骤</h4><p>具体配置步骤请参见《Java环境变量配置说明》文档。    </p><h3 id="2-3-HelloWorld案例（应用）"><a href="#2-3-HelloWorld案例（应用）" class="headerlink" title="2.3 HelloWorld案例（应用）"></a>2.3 HelloWorld案例（应用）</h3><p>HelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p><h4 id="2-3-1-Java程序开发运行流程"><a href="#2-3-1-Java程序开发运行流程" class="headerlink" title="2.3.1 Java程序开发运行流程"></a>2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><h4 id="2-3-2-HelloWorld案例的编写"><a href="#2-3-2-HelloWorld案例的编写" class="headerlink" title="2.3.2 HelloWorld案例的编写"></a>2.3.2 HelloWorld案例的编写</h4><p>1、新建文本文档文件，修改名称为HelloWorld.java。</p><p>2、用记事本打开HelloWorld.java文件，输写程序内容。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-HelloWorld案例的编译和运行"><a href="#2-3-3-HelloWorld案例的编译和运行" class="headerlink" title="2.3.3 HelloWorld案例的编译和运行"></a>2.3.3 HelloWorld案例的编译和运行</h4><p>存文件，打开命令行窗口，将目录切换至java文件所在目录，编译java文件生成class文件，运行class文件。</p><blockquote><p>编译：javac 文件名.java</p><p>范例：javac HelloWorld.java</p><p>执行：java 类名</p><p>范例：java HelloWorld</p></blockquote><h3 id="2-4-HelloWorld案例常见问题（理解）"><a href="#2-4-HelloWorld案例常见问题（理解）" class="headerlink" title="2.4 HelloWorld案例常见问题（理解）"></a>2.4 HelloWorld案例常见问题（理解）</h3><h4 id="2-4-1-BUG"><a href="#2-4-1-BUG" class="headerlink" title="2.4.1 BUG"></a>2.4.1 BUG</h4><p>在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p><h4 id="2-4-2-BUG的解决"><a href="#2-4-2-BUG的解决" class="headerlink" title="2.4.2 BUG的解决"></a>2.4.2 BUG的解决</h4><p>1、具备识别BUG的能力：多看</p><p>2、具备分析BUG的能力：多思考，多查资料</p><p>3、具备解决BUG的能力：多尝试，多总结</p><h4 id="2-4-3-HelloWorld案例常见问题"><a href="#2-4-3-HelloWorld案例常见问题" class="headerlink" title="2.4.3 HelloWorld案例常见问题"></a>2.4.3 HelloWorld案例常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p><p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>4、编译命令后的java文件名需要带文件后缀.java</p><p>5、运行命令后的class文件名（类名）不带文件后缀.class</p><p>…</p><h3 id="2-5-Notepad-软件的安装和使用（应用）"><a href="#2-5-Notepad-软件的安装和使用（应用）" class="headerlink" title="2.5 Notepad++软件的安装和使用（应用）"></a>2.5 Notepad++软件的安装和使用（应用）</h3><h4 id="2-5-1-什么要使用Notepad-软件"><a href="#2-5-1-什么要使用Notepad-软件" class="headerlink" title="2.5.1 什么要使用Notepad++软件"></a>2.5.1 什么要使用Notepad++软件</h4><p>Notepad++功能比windows中的自带记事本功能强大，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。Notepad++有行号，能够快速定位问题位置，还有语法高亮度显示、代码折叠等功能。而且它是免费的。</p><h4 id="2-5-2-Notepad-软件安装"><a href="#2-5-2-Notepad-软件安装" class="headerlink" title="2.5.2 Notepad++软件安装"></a>2.5.2 Notepad++软件安装</h4><p>安装：傻瓜式安装，一直下一步即可。建议也安装到统一的开发软件目录下，比如E:\develop。</p><p>具体安装步骤请参见《Nodepad++软件安装及配置说明》文档。</p><h4 id="2-5-3Notepad-软件配置"><a href="#2-5-3Notepad-软件配置" class="headerlink" title="2.5.3Notepad++软件配置"></a>2.5.3Notepad++软件配置</h4><p>安装完毕之后，为了使用方便，做一个简单的配置：修改默认语言和编码。</p><p>具体配置的说明请参见《Nodepad++软件安装及配置说明》文档。</p><h2 id="3-java基础语法"><a href="#3-java基础语法" class="headerlink" title="3. java基础语法"></a>3. java基础语法</h2><h4 id="3-1-注释（理解）"><a href="#3-1-注释（理解）" class="headerlink" title="3.1 注释（理解）"></a>3.1 注释（理解）</h4><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p><p>单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 这是单行注释文字</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*这是多行注释文字这是多行注释文字这是多行注释文字*/</span>注意：多行注释不能嵌套使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p><h4 id="3-2-关键字（理解）"><a href="#3-2-关键字（理解）" class="headerlink" title="3.2 关键字（理解）"></a>3.2 关键字（理解）</h4><p>关键字是指被java语言赋予了特殊含义的单词。</p><p>关键字的特点：</p><p>​    关键字的字母全部小写。</p><p>​    常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p><h4 id="3-3-常量（应用）"><a href="#3-3-常量（应用）" class="headerlink" title="3.3 常量（应用）"></a>3.3 常量（应用）</h4><p>常量：在程序运行过程中，其值不可以发生改变的量。</p><p>Java中的常量分类：</p><p>​    字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p><p>​    整数常量  整数，例如：-10、0、88等</p><p>​    小数常量  小数，例如：-5.5、1.0、88.88等</p><p>​    字符常量  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p><p>​    布尔常量  布尔值，表示真假，只有两个值true和false</p><p>​    空常量  一个特殊的值，空值，值为null</p><p>除空常量外，其他常量均可使用输出语句直接输出。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个整数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个小数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个字符</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出boolean值true</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎来到黑马程序员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出字符串</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-数据类型（记忆、应用）"><a href="#3-4-数据类型（记忆、应用）" class="headerlink" title="3.4 数据类型（记忆、应用）"></a>3.4 数据类型（记忆、应用）</h4><h5 id="3-4-1-计算机存储单元"><a href="#3-4-1-计算机存储单元" class="headerlink" title="3.4.1 计算机存储单元"></a>3.4.1 计算机存储单元</h5><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h5 id="3-4-2-Java中的数据类型"><a href="#3-4-2-Java中的数据类型" class="headerlink" title="3.4.2 Java中的数据类型"></a>3.4.2 Java中的数据类型</h5><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p><p>Java中的基本数据类型：</p><table><thead><tr><th align="left">数据类型</th><th>关键字</th><th>内存占用</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">整数类型</td><td>byte</td><td>1</td><td align="left">-128~127</td></tr><tr><td align="left"></td><td>short</td><td>2</td><td align="left">-32768~32767</td></tr><tr><td align="left"></td><td>int(默认)</td><td>4</td><td align="left">-2的31次方到2的31次方-1</td></tr><tr><td align="left"></td><td>long</td><td>8</td><td align="left">-2的63次方到2的63次方-1</td></tr><tr><td align="left">浮点类型</td><td>float</td><td>4</td><td align="left">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td></tr><tr><td align="left"></td><td>double(默认)</td><td>8</td><td align="left">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td></tr><tr><td align="left">字符类型</td><td>char</td><td>2</td><td align="left">0-65535</td></tr><tr><td align="left">布尔类型</td><td>boolean</td><td>1</td><td align="left">true，false</td></tr></tbody></table><p>说明：</p><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="3-5-变量（应用）"><a href="#3-5-变量（应用）" class="headerlink" title="3.5 变量（应用）"></a>3.5 变量（应用）</h4><h5 id="3-5-1-变量的定义"><a href="#3-5-1-变量的定义" class="headerlink" title="3.5.1 变量的定义"></a>3.5.1 变量的定义</h5><p>变量：在程序运行过程中，其值可以发生改变的量。</p><p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p><p>变量的定义格式：</p><pre class="line-numbers language-java"><code class="language-java">数据类型 变量名 <span class="token operator">=</span> 初始化值<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明变量并赋值</span><span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 先声明，后赋值（使用前赋值即可）</span>数据类型 变量名<span class="token punctuation">;</span>变量名 <span class="token operator">=</span> 初始化值<span class="token punctuation">;</span><span class="token keyword">double</span> money<span class="token punctuation">;</span>money <span class="token operator">=</span> <span class="token number">55.5</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 定义int类型的变量a和b，中间使用逗号隔开</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> c<span class="token punctuation">,</span>d<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明int类型的变量c和d，中间使用逗号隔开</span>c <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>变量的使用：通过变量名访问即可。</p><h5 id="3-5-2-使用变量时的注意事项"><a href="#3-5-2-使用变量时的注意事项" class="headerlink" title="3.5.2 使用变量时的注意事项"></a>3.5.2 使用变量时的注意事项</h5><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li><li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li></ol><h4 id="3-6-标识符（记忆、理解）"><a href="#3-6-标识符（记忆、理解）" class="headerlink" title="3.6 标识符（记忆、理解）"></a>3.6 标识符（记忆、理解）</h4><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p><p>Java中标识符的组成规则：</p><p>​    由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p><p>​    不能使用java中的关键字作为标识符。    </p><p>​    标识符对大小写敏感（区分大小写）。</p><p>Java中标识符的命名约定：</p><p>​    小驼峰式命名：变量名、方法名</p><p>​        首字母小写，从第二个单词开始每个单词的首字母大写。</p><p>​    大驼峰式命名：类名</p><p>​        每个单词的首字母都大写。</p><p>​    另外，标识符的命名最好可以做到见名知意</p><p>​        例如：username、studentNumber等。</p><h4 id="3-7-类型转换（理解）"><a href="#3-7-类型转换（理解）" class="headerlink" title="3.7 类型转换（理解）"></a>3.7 类型转换（理解）</h4><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p><p>自动类型转换：</p><p>​    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">double</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将int类型的10直接赋值给double类型</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出10.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>强制类型转换：</p><p>​    把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p><p>​    强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</p><p>​    例如：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">double</span> num1 <span class="token operator">=</span> <span class="token number">5.5</span><span class="token punctuation">;</span><span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> num1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将double类型的num1强制转换为int类型</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出5（小数位直接舍弃）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Java-Day01-01.png" alt=""></p><p>说明：</p><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将输出97</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">byte</span> b3 <span class="token operator">=</span> b1 <span class="token operator">+</span> b2<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span><span class="token comment" spellcheck="true">// 修改为:</span><span class="token keyword">int</span> num <span class="token operator">=</span> b1 <span class="token operator">+</span> b2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 或者：</span><span class="token keyword">byte</span> b3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b1 <span class="token operator">+</span> b2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>boolean类型不能与其他基本数据类型相互转换。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaMemo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown Memo</title>
      <link href="2020/07/19/markdown/"/>
      <url>2020/07/19/markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a><a href="https://github.com/younghz/Markdown">Markdown基本语法</a></h3><blockquote><p><strong>PS</strong>：指令后空格才可有效。  </p></blockquote><h3 id="Markdown-all-in-one-Plug"><a href="#Markdown-all-in-one-Plug" class="headerlink" title="Markdown all in one(Plug)"></a>Markdown all in one(Plug)</h3><ul><li><p>强调：</p><ul><li><code>Ctrl+B</code>–&gt;<strong>粗体</strong>。  </li><li><code>Ctrl+I</code>–&gt;<em>斜体</em>。</li></ul></li><li><p>列表：</p><ul><li>1.+Enter直接换为2.；</li><li>Enter+Tab切为子标题。</li></ul></li><li><p>超链接：<code>选中文字+ctrl+v</code>。</p></li><li><p>插入图片：<code>复制图片+ctrl+alt+v</code></p></li><li><p>标记：`文字`</p><ul><li><code>eg</code></li></ul></li><li><p>区块引用：一级嵌套：&gt; /二级嵌套：&gt;&gt;</p><blockquote><p>Outside</p><blockquote><p>Inside</p></blockquote></blockquote></li><li><p>代码区块：  ```+代码高亮标签+Enter+```</p></li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token string">"Hello World"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>反斜杠：<code>\</code><br>  相当于反转义作用。使符号成为普通符号。</li></ul><h3 id="Markdown代码高亮标记大全👉Author"><a href="#Markdown代码高亮标记大全👉Author" class="headerlink" title="Markdown代码高亮标记大全👉Author"></a>Markdown代码高亮标记大全👉<a href="http://lujianan.com/2018/10/30/markdown-syntax-highlight/">Author</a></h3><p>用  Markdown 写文档的话经常会用到代码的语法高亮，这里列出了常用的语法高亮标签，<span style="color: red;">前面是标签，括号里是对应的文件扩展名。</span></p><p>Syntax Highlight  </p><ul><li>Cucumber (‘*.feature’)</li><li>abap (‘*.abap’)</li><li>ada (‘.adb’, ‘.ads’, ‘*.ada’)</li><li>ahk (‘.ahk’, ‘.ahkl’)</li><li>apacheconf (‘.htaccess’, ‘apache.conf’, ‘apache2.conf’)</li><li>applescript (‘*.applescript’)</li><li>as (‘*.as’)</li><li>as3 (‘*.as’)</li><li>asy (‘*.asy’)</li><li>bash (‘.sh’, ‘.ksh’, ‘.bash’, ‘.ebuild’, ‘*.eclass’)</li><li>bat (‘.bat’, ‘.cmd’)</li><li>befunge (‘*.befunge’)</li><li>blitzmax (‘*.bmx’)</li><li>boo (‘*.boo’)</li><li>brainfuck (‘.bf’, ‘.b’)</li><li>c (‘.c’, ‘.h’)</li><li>cfm (‘.cfm’, ‘.cfml’, ‘*.cfc’)</li><li>cheetah (‘.tmpl’, ‘.spt’)</li><li>cl (‘.cl’, ‘.lisp’, ‘*.el’)</li><li>clojure (‘.clj’, ‘.cljs’)</li><li>cmake (‘*.cmake’, ‘CMakeLists.txt’)</li><li>coffeescript (‘*.coffee’)</li><li>console (‘*.sh-session’)</li><li>control (‘control’)</li><li>cpp (‘.cpp’, ‘.hpp’, ‘.c++’, ‘.h++’, ‘.cc’, ‘.hh’, ‘.cxx’, ‘.hxx’, ‘*.- pde’)</li><li>csharp (‘*.cs’)</li><li>css (‘*.css’)</li><li>cython (‘.pyx’, ‘.pxd’, ‘*.pxi’)</li><li>d (‘.d’, ‘.di’)</li><li>delphi (‘*.pas’)</li><li>diff (‘.diff’, ‘.patch’)</li><li>dpatch (‘.dpatch’, ‘.darcspatch’)</li><li>duel (‘.duel’, ‘.jbst’)</li><li>dylan (‘.dylan’, ‘.dyl’)</li><li>erb (‘*.erb’)</li><li>erl (‘*.erl-sh’)</li><li>erlang (‘.erl’, ‘.hrl’)</li><li>evoque (‘*.evoque’)</li><li>factor (‘*.factor’)</li><li>felix (‘.flx’, ‘.flxh’)</li><li>fortran (‘.f’, ‘.f90’)</li><li>gas (‘.s’, ‘.S’)</li><li>genshi (‘*.kid’)</li><li>glsl (‘.vert’, ‘.frag’, ‘*.geo’)</li><li>gnuplot (‘.plot’, ‘.plt’)</li><li>go (‘*.go’)</li><li>groff (‘.(1234567)’, ‘.man’)</li><li>haml (‘*.haml’)</li><li>haskell (‘*.hs’)</li><li>html (‘.html’, ‘.htm’, ‘.xhtml’, ‘.xslt’)</li><li>hx (‘*.hx’)</li><li>hybris (‘.hy’, ‘.hyb’)</li><li>ini (‘.ini’, ‘.cfg’)</li><li>io (‘*.io’)</li><li>ioke (‘*.ik’)</li><li>irc (‘*.weechatlog’)</li><li>jade (‘*.jade’)</li><li>java (‘*.java’)</li><li>js (‘*.js’)</li><li>jsp (‘*.jsp’)</li><li>lhs (‘*.lhs’)</li><li>llvm (‘*.ll’)</li><li>logtalk (‘*.lgt’)</li><li>lua (‘.lua’, ‘.wlua’)</li><li>make (‘.mak’, ‘Makefile’, ‘makefile’, ‘Makefile.‘, ‘GNUmakefile’)</li><li>mako (‘*.mao’)</li><li>maql (‘*.maql’)</li><li>mason (‘.mhtml’, ‘.mc’, ‘*.mi’, ‘autohandler’, ‘dhandler’)</li><li>markdown (‘*.md’)</li><li>modelica (‘*.mo’)</li><li>modula2 (‘.def’, ‘.mod’)</li><li>moocode (‘*.moo’)</li><li>mupad (‘*.mu’)</li><li>mxml (‘*.mxml’)</li><li>myghty (‘*.myt’, ‘autodelegate’)</li><li>nasm (‘.asm’, ‘.ASM’)</li><li>newspeak (‘*.ns2’)</li><li>objdump (‘*.objdump’)</li><li>objectivec (‘*.m’)</li><li>objectivej (‘*.j’)</li><li>ocaml (‘.ml’, ‘.mli’, ‘.mll’, ‘.mly’)</li><li>ooc (‘*.ooc’)</li><li>perl (‘.pl’, ‘.pm’)</li><li>php (‘.php’, ‘.php(345)’)</li><li>postscript (‘.ps’, ‘.eps’)</li><li>pot (‘.pot’, ‘.po’)</li><li>pov (‘.pov’, ‘.inc’)</li><li>prolog (‘.prolog’, ‘.pro’, ‘*.pl’)</li><li>properties (‘*.properties’)</li><li>protobuf (‘*.proto’)</li><li>py3tb (‘*.py3tb’)</li><li>pytb (‘*.pytb’)</li><li>python (‘.py’, ‘.pyw’, ‘.sc’, ‘SConstruct’, ‘SConscript’, ‘.tac’)</li><li>rb (‘.rb’, ‘.rbw’, ‘Rakefile’, ‘.rake’, ‘.gemspec’, ‘.rbx’, ‘.duby’)</li><li>rconsole (‘*.Rout’)</li><li>rebol (‘.r’, ‘.r3’)</li><li>redcode (‘*.cw’)</li><li>rhtml (‘*.rhtml’)</li><li>rst (‘.rst’, ‘.rest’)</li><li>sass (‘*.sass’)</li><li>scala (‘*.scala’)</li><li>scaml (‘*.scaml’)</li><li>scheme (‘*.scm’)</li><li>scss (‘*.scss’)</li><li>smalltalk (‘*.st’)</li><li>smarty (‘*.tpl’)</li><li>sourceslist (‘sources.list’)</li><li>splus (‘.S’, ‘.R’)</li><li>sql (‘*.sql’)</li><li>sqlite3 (‘*.sqlite3-console’)</li><li>squidconf (‘squid.conf’)</li><li>ssp (‘*.ssp’)</li><li>tcl (‘*.tcl’)</li><li>tcsh (‘.tcsh’, ‘.csh’)</li><li>tex (‘.tex’, ‘.aux’, ‘*.toc’)</li><li>text (‘*.txt’)</li><li>v (‘.v’, ‘.sv’)</li><li>vala (‘.vala’, ‘.vapi’)</li><li>vbnet (‘.vb’, ‘.bas’)</li><li>velocity (‘.vm’, ‘.fhtml’)</li><li>vim (‘*.vim’, ‘.vimrc’)</li><li>xml (‘.xml’, ‘.xsl’, ‘.rss’, ‘.xslt’, ‘.xsd’, ‘.wsdl’)</li><li>xquery (‘.xqy’, ‘.xquery’)</li><li>xslt (‘.xsl’, ‘.xslt’)</li><li>yaml (‘.yaml’, ‘.yml’)</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮件服务器的架设与使用</title>
      <link href="2020/06/08/you-jian-fu-wu-qi-de-jia-she-yu-shi-yong/"/>
      <url>2020/06/08/you-jian-fu-wu-qi-de-jia-she-yu-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><blockquote><p>学习并掌握邮件服务器的安装和配置方法。</p></blockquote><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>VmWare pro(Win10 x 64)</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="Winmail-安装"><a href="#Winmail-安装" class="headerlink" title="Winmail 安装"></a><a href="https://www.magicwinmail.com/"><strong><em><code>Winmail</code></em></strong></a> 安装</h3><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-1.png" alt=""></p><h3 id="Winmail-配置"><a href="#Winmail-配置" class="headerlink" title="Winmail 配置"></a><strong><em><code>Winmail</code></em></strong> 配置</h3><h4 id="1-初始化邮箱"><a href="#1-初始化邮箱" class="headerlink" title="1.初始化邮箱"></a>1.初始化邮箱</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-2.png" alt=""></p><h4 id="2-登陆管理工具"><a href="#2-登陆管理工具" class="headerlink" title="2. 登陆管理工具"></a>2. 登陆管理工具</h4><blockquote><p><strong><code>密码为安装时设定的初始密码</code></strong><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-3.png" alt=""></p></blockquote><h4 id="3-添加域名绑定"><a href="#3-添加域名绑定" class="headerlink" title="3. 添加域名绑定"></a>3. 添加域名绑定</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-2-2.png" alt=""></p><h4 id="4-在新域名下添加用户"><a href="#4-在新域名下添加用户" class="headerlink" title="4. 在新域名下添加用户"></a>4. 在新域名下添加用户</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-2-2.png" alt=""></p><h3 id="Winmail测试"><a href="#Winmail测试" class="headerlink" title="Winmail测试"></a><strong><em><code>Winmail</code></em></strong>测试</h3><blockquote><p>收发信测试(<a href="https://localhost:6080">https://localhost:6080</a>) </p></blockquote><h4 id="1-登录初始化的邮箱账户Wriprin"><a href="#1-登录初始化的邮箱账户Wriprin" class="headerlink" title="1. 登录初始化的邮箱账户Wriprin"></a>1. 登录初始化的邮箱账户<code>Wriprin</code></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-1.jpg" alt="">  </p><h4 id="2-向新建用户Yolo发送测试邮件"><a href="#2-向新建用户Yolo发送测试邮件" class="headerlink" title="2. 向新建用户Yolo发送测试邮件"></a>2. 向新建用户<code>Yolo</code>发送测试邮件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-2.png" alt=""></p><h4 id="3-退出登录"><a href="#3-退出登录" class="headerlink" title="3. 退出登录"></a>3. 退出登录</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-3.png" alt=""></p><h4 id="4-登录新建用户Yolo"><a href="#4-登录新建用户Yolo" class="headerlink" title="4. 登录新建用户Yolo"></a>4. 登录新建用户<code>Yolo</code></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-4.png" alt=""></p><h4 id="5-接收邮件"><a href="#5-接收邮件" class="headerlink" title="5. 接收邮件"></a>5. 接收邮件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-5.png" alt=""></p><h3 id="实验思考"><a href="#实验思考" class="headerlink" title="实验思考"></a>实验思考</h3><h4 id="1-SMTP是什么协议？作用是什么？默认占用的端口号是？"><a href="#1-SMTP是什么协议？作用是什么？默认占用的端口号是？" class="headerlink" title="1. SMTP是什么协议？作用是什么？默认占用的端口号是？"></a>1. <a href="https://zh.wikipedia.org/wiki/%E7%AE%80%E5%8D%95%E9%82%AE%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE"><strong><em><code>SMTP</code></em></strong></a>是什么协议？作用是什么？默认占用的端口号是？</h4><blockquote><ul><li>SMTP是简单邮件传输协议，是一个相对简单的基于文本的协议。</li><li>相当于中转站，将邮件发送到客户端。  </li><li>25</li></ul></blockquote><h4 id="2-POP是什么协议？作用是什么？默认占用的端口号是？"><a href="#2-POP是什么协议？作用是什么？默认占用的端口号是？" class="headerlink" title="2. POP是什么协议？作用是什么？默认占用的端口号是？"></a>2. <a href="https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A"><strong><em><code>POP</code></em></strong></a>是什么协议？作用是什么？默认占用的端口号是？</h4><blockquote><ul><li>POP是邮局协议。</li><li>主要用于支持使用客户端远程管理在服务器上的电子邮件。</li><li>110</li></ul></blockquote><h4 id="3-邮件服务器域名是否可以随意设置"><a href="#3-邮件服务器域名是否可以随意设置" class="headerlink" title="3. 邮件服务器域名是否可以随意设置"></a>3. 邮件服务器域名是否可以随意设置</h4><blockquote><ul><li>如果是在内网中(比如做实验)，那怎么设置都可以。  </li><li>但如果是想在外网上正常使用，必须用绑定的对应域名。</li></ul></blockquote><h4 id="4-通过本邮件的服务器是否可以向Gmail等邮箱发送邮件"><a href="#4-通过本邮件的服务器是否可以向Gmail等邮箱发送邮件" class="headerlink" title="4. 通过本邮件的服务器是否可以向Gmail等邮箱发送邮件"></a>4. 通过本邮件的服务器是否可以向<a href="https://mail.google.com/"><strong><em><code>Gmail</code></em></strong></a>等邮箱发送邮件</h4><blockquote><p>可以。</p></blockquote><h4 id="5-邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？"><a href="#5-邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？" class="headerlink" title="5. 邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？"></a>5. 邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？</h4><blockquote><ul><li>IP 地址(<a href="https://www.magicwinmail.com/technic_spf.php"><strong><em><code>SPF</code></em></strong></a>)，域名，邮件来源，邮件头内容，邮件信体等方式的过滤。</li><li>作为超级管理员，可以设置规则来决定包含某些字词（如敏感词汇）的邮件应被拒绝、隔离还是修改后进行递送。</li><li>eg：<a href="https://support.google.com/a/answer/1346936?hl=zh-Hans"><strong><code>原文章出处</code></strong></a><ul><li>拒绝可能包含公司敏感信息（eg:出站过滤器检测到“机密”一词）的出站邮件。  </li><li>隔离包含敏感词汇的邮件。  </li><li>通过“敏感词汇”设置，可以创建字词列表来甄别敏感词汇，并指定对包含此类内容的邮件执行什么操作。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-4-1.png" alt=""></li></ul></li></ul></blockquote><h4 id="6-对用户可以进行哪些设置？"><a href="#6-对用户可以进行哪些设置？" class="headerlink" title="6. 对用户可以进行哪些设置？"></a>6. 对用户可以进行哪些设置？</h4><blockquote><ul><li>eg：<a href="https://support.google.com/a/answer/2537800?hl=zh-Hans"><strong><code>原文章出处</code></strong></a><ul><li>重置用户密码</li><li>查看、添加或移除安全密钥</li><li>检查两步验证设置</li><li>为用户获取备用验证码</li><li>强制更改密码</li><li>修改用户的恢复信息</li><li>暂时关闭登录验证</li><li>重置用户的登录 Cookie</li><li>查看和撤消应用专用密码</li><li>查看和移除第三方应用的访问权限<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-4-2.png" alt=""></li></ul></li></ul></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mail Sever </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1-YYF固件</title>
      <link href="2020/06/07/n1-yyf-gu-jian/"/>
      <url>2020/06/07/n1-yyf-gu-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="开封验货"><a href="#开封验货" class="headerlink" title="开封验货"></a>开封验货</h3><h4 id="Pre"><a href="#Pre" class="headerlink" title="Pre"></a><strong><em>Pre</em></strong></h4><blockquote><p>至于为什么要买N1，然后自己刷固件就不解释了，自行Google咯。  </p></blockquote><p> <del>玩什么盒子呢</del>，到了到了–&gt;真香，<strong><em><code>Pdd</code></em></strong>(Eternal god🐱‍🏍)<br>  <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-1.png" alt=""></p><h4 id="Open"><a href="#Open" class="headerlink" title="Open"></a><strong><em>Open</em></strong></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-3.png" alt=""></p><blockquote><p>虽说斐讯跑路了但路由和盒子真的是业界楷模。</p></blockquote><h3 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h3><ul><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2Feyun.baidu.com%2Fs%2F3pMOZd2N%23sharelink%2Fpath%3D%252F">Lilith固件</a></li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2Fpan.baidu.com%2Fs%2F1owwyD3_bLFv-pWcv4U18hw%C2%A0%C2%A0">Rush固件</a></li><li><a href="https://share.weiyun.com/5evQlaL">Webpad固件</a>(<code>pwd:ckj05e</code>)</li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=http%3A%2F%2Fwww.yyfrom.com%2Fcms%2Fyyfrom%2Fproduct%2F2018-10-8%2F163.html">YYF固件</a></li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2F72k.us%2Ffile%2F4089832-398549090">N1降级线刷工具、烧录工具、link2SD软件</a></li></ul><h3 id="N1-gt-YYF"><a href="#N1-gt-YYF" class="headerlink" title="N1->YYF"></a><strong><em>N1-&gt;YYF</em></strong></h3><h4 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h4><ul><li><p><code>双公线</code>：电脑🔗N1</p></li><li><p><code>HDMI线</code>：显示屏🔗N1</p></li><li><p><code>USB线</code>：鼠标🔗N1</p></li><li><p><code>网线</code>：Wan口🔗路由器LAN口</p><blockquote><p>最好让双公线的口和HDMI线的口紧挨着。</p></blockquote></li></ul><h4 id="进入root模式"><a href="#进入root模式" class="headerlink" title="进入root模式"></a>进入root模式</h4><p>鼠标点固件版本四次，打开adb模式，并把IP记下来。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-2.png" alt=""></p><h4 id="N1降级"><a href="#N1降级" class="headerlink" title="N1降级"></a>N1降级</h4><blockquote><p>因为该记录篇呢是在我都完成之后才准备写的，所以之后的步骤也不会有具体的操作演示，毕竟只是纪录片，有时间再补吧😎。  </p></blockquote><p>先输入数字2，会让你输入IP地址，等待降级成功。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-1.png" alt=""></p><h4 id="进入线刷模式"><a href="#进入线刷模式" class="headerlink" title="进入线刷模式"></a>进入线刷模式</h4><blockquote><p>千万别用刚刚的降级工具进行线刷操作（别问为什么，<del>我在这步耗了整整1h😩</del>）<br>接下来将展示我刷固件过程中的两道巨坎儿    </p></blockquote><p>1.在线刷前<code>一定</code>要手动添加过时驱动。    <del>都是泪😭</del><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-3.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-4.png" alt=""></p><p>2.要用另外一个专门线刷的工具，按步骤操作即可（此时呢，N1会重启，等一下就好）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-2.png" alt=""></p><h4 id="烧录固件"><a href="#烧录固件" class="headerlink" title="烧录固件"></a>烧录固件</h4><blockquote><p>打开烧录工具，导入烧录包后在下面会有导包成功的提示<br>PS:一定要把右边两个默认选项给<code>去掉</code><br>点击开始即可<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-5.png" alt=""></p></blockquote><h4 id="伪收工"><a href="#伪收工" class="headerlink" title="伪收工"></a>伪收工</h4><p>整个过程也就三五分钟，当烧录成功后，进度条变成绿色。</p><blockquote><p>然后需要拔掉USB两个口的线(<code>双共线和鼠标</code>)，拔掉<code>电源</code>，再<code>重新插上电源</code>。  </p></blockquote><blockquote><p>接着就是这样的画面，第一次启动会慢一些，等一会儿就好了。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/1591519760528_4AACDDDA-98C2-4880-97E3-331ABA0ECA32.png" alt=""></p></blockquote><h4 id="Show-Time"><a href="#Show-Time" class="headerlink" title="Show Time"></a><strong><em>Show Time</em></strong></h4><blockquote><p>✌<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-7.png" alt=""></p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a><strong><em>End</em></strong></h4><blockquote><p>N1盒子呢其实还有很多玩法  </p></blockquote><blockquote><p>eg:<code>旁路由</code>，<code>KODI</code>看奶飞，<code>Coreelec</code>-4K 等等。  </p></blockquote><blockquote><p>不管怎么说，生命在于折腾嘛😎。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>66&amp;壮壮</title>
      <link href="2020/06/07/66-zhuang-zhuang/"/>
      <url>2020/06/07/66-zhuang-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="壮王爷肾结石之旅"><a href="#壮王爷肾结石之旅" class="headerlink" title="壮王爷肾结石之旅"></a>壮王爷肾结石之旅</h2><blockquote><p>😳借此警戒自己，不久坐，多运动，少喝饮料<del>🍹</del>，多喝热水🥛。</p></blockquote><p> <a href="https://www.bilibili.com/video/av18686199/"><strong><em><code>Watch the video</code></em></strong></a></p><p> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/66.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Mlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web服务器配置</title>
      <link href="2020/06/03/web-fu-wu-qi-pei-zhi/"/>
      <url>2020/06/03/web-fu-wu-qi-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><h4 id="利用IIS配置一个网站"><a href="#利用IIS配置一个网站" class="headerlink" title="利用IIS配置一个网站."></a>利用IIS配置一个网站.</h4><ul><li><p><strong>IIS配置网站</strong>  </p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-1-IIS%E5%BB%BA%E7%AB%99.gif" alt=""></p></li></ul><h4 id="开启网站的目录浏览功能"><a href="#开启网站的目录浏览功能" class="headerlink" title="开启网站的目录浏览功能"></a>开启网站的<strong>目录浏览</strong>功能</h4><blockquote><p><span style="color:#ff0000">PS：报错很有可能是未开启目录浏览权限和文件夹共享 <em><code>Everyone</code></em> 。</span></p></blockquote><ul><li><strong>IIS访问</strong><br> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-2-IIS%E8%AE%BF%E9%97%AE.gif" alt=""></li></ul><h4 id="删除-exe的mime类型，看能否下载-exe文件"><a href="#删除-exe的mime类型，看能否下载-exe文件" class="headerlink" title="删除.exe的mime类型，看能否下载.exe文件"></a>删除.exe的mime类型，看能否下载.exe文件</h4><ul><li><strong>IIS删除mime-exe类型</strong><br> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-3-IIS%E5%88%A0%E9%99%A4mime-exe%E7%B1%BB%E5%9E%8B.gif" alt=""></li><li><strong>IIS删除mime-exe类型后访问</strong><br> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-4-IIS%E5%88%A0%E9%99%A4mime-exe%E7%B1%BB%E5%9E%8B%E5%90%8E%E8%AE%BF%E9%97%AE.gif" alt="">  <blockquote><p><strong>很显然，当我们删除了指定的mime类型后，是无法下载对应类型的文件的。</strong></p></blockquote></li></ul><h2 id="Wampsever"><a href="#Wampsever" class="headerlink" title="Wampsever"></a><a href="http://www.wampserver.com/">Wampsever</a></h2><blockquote><p>Tip:<strong><em><code>Wamp</code></em></strong> -&gt; <em>Windows, Apache, Mysql, PHP.</em><br>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-2.png" alt=""></p></blockquote><h3 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h3><h4 id="Apache目录下文件夹："><a href="#Apache目录下文件夹：" class="headerlink" title="Apache目录下文件夹："></a>Apache目录下文件夹：</h4><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-1.png" alt=""></p><ul><li><code>bin</code>-&gt;存放常用命令，如Httped等。</li><li><code>cgi-bin</code>-&gt;存放Linux下的常用命令。</li><li><code>conf</code>-&gt;存放配置文件，如conf等。</li><li><code>error</code>-&gt;存放错误记录。</li><li><code>htdocs</code>-&gt;存放站点文件，网站的根目录。</li></ul><h4 id="Apache配置"><a href="#Apache配置" class="headerlink" title="Apache配置"></a>Apache配置</h4><h5 id="1-1-主站点的基本配置-httped-conf"><a href="#1-1-主站点的基本配置-httped-conf" class="headerlink" title="1.1 主站点的基本配置  (./httped.conf)"></a>1.1 <strong>主站点的基本配置</strong>  <strong><em><code>(./httped.conf)</code></em></strong></h5><ul><li><p>Listen 80 -&gt; 服务器监听的端口号。 </p><blockquote><p>通过将此配置项设置为 localhost的 IP 地址，Apache 将只侦听来自本地主机的连接。 如果Web 服务器侦听来自远程主机的连接，则可以使用主机的外部 IP 地址。</p></blockquote><pre class="line-numbers language-apacheconf"><code class="language-apacheconf"> <span class="token directive-inline property">Listen</span> 0.0.0.0:80 <span class="token directive-inline property">Listen</span> [::0]:80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>ServerAdmin</code> qq1178962746@gmail.com -&gt; 管理员的邮件地址。(当服务器出现问题后的联系方式)</p></li><li><p><code>DocumentRoot</code> “/mnt/web/clusting” -&gt; 主站点的网页存储位置。</p><pre class="line-numbers language-apacheconf"><code class="language-apacheconf"> <span class="token directive-inline property">DocumentRoot</span> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>DocumentRoot</code> 配置项指定组成网站页面的 HTML 文件的位置。  </p></blockquote><blockquote><p><code>DocumentRoot</code>属性用于指定了一种URL映射的根目录路径。例如<a href="http://localhost/">http://localhost/</a>  </p></blockquote><blockquote><p><code>Directory</code>标签是为了指定URL路径在后续的请求中可以进行操作的权限范围属性。</p></blockquote></li></ul><h5 id="1-2-对主站点的目录进行访问控制"><a href="#1-2-对主站点的目录进行访问控制" class="headerlink" title="1.2 对主站点的目录进行访问控制"></a>1.2 <strong>对主站点的目录进行访问控制</strong></h5><pre class="line-numbers language-apacheconf"><code class="language-apacheconf">     <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>Directory</span><span class="token directive-block-parameter attr-value"> <span class="token string">"<span class="token variable">${SRVROOT}</span>/cgi-bin"</span></span><span class="token punctuation">></span></span>     <span class="token directive-inline property">AllowOverride</span> None     <span class="token directive-inline property">Options</span> None     <span class="token directive-inline property">Require</span> all granted     <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>Directory</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-5.png" alt=""></p><h5 id="1-3-别名设置"><a href="#1-3-别名设置" class="headerlink" title="1.3 别名设置"></a>1.3 <strong>别名设置</strong></h5><blockquote><p>对于不在<code>DocumentRoot</code>指定的目录内的页面，既可以使用符号连接，也可以使用别名。</p></blockquote><pre class="line-numbers language-apacheconf"><code class="language-apacheconf">   <span class="token directive-inline property">Alias</span> /download/ <span class="token string">"/var/www/download/"</span> <span class="token comment" spellcheck="true">#http://www.Wriprin.ml/download/ (404)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-3.png" alt=""></p><ul><li><span style="color:pink"> 已经让我删掉了,不要再去了 🙄 </span></li></ul><h5 id="1-4-虚拟主机配置-conf-extra"><a href="#1-4-虚拟主机配置-conf-extra" class="headerlink" title="1.4 虚拟主机配置  (/conf/extra/...)"></a>1.4 <strong>虚拟主机配置</strong>  <strong><em><code>(/conf/extra/...)</code></em></strong></h5><pre class="line-numbers language-apacheconf"><code class="language-apacheconf">   <span class="token comment" spellcheck="true"># Virtual Hosts</span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>VirtualHost</span><span class="token directive-block-parameter attr-value"> *<span class="token punctuation">:</span>80</span><span class="token punctuation">></span></span>      <span class="token directive-inline property">ServerName</span> localhost      <span class="token directive-inline property">ServerAlias</span> localhost      <span class="token directive-inline property">DocumentRoot</span> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www"</span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>Directory</span><span class="token directive-block-parameter attr-value"> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www/"</span></span><span class="token punctuation">></span></span>      <span class="token directive-inline property">Options</span> +Indexes +Includes +FollowSymLinks +MultiViews      <span class="token directive-inline property">AllowOverride</span> All      <span class="token directive-inline property">Require</span> local   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>Directory</span><span class="token punctuation">></span></span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>VirtualHost</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-4.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS&amp;&amp;Wampsever </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/06/02/hello-world/"/>
      <url>2020/06/02/hello-world/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong><code>还没想好写什么,就先鸽了吧.😳</code></strong></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Mlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
