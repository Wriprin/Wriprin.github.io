<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IPOD-Dev-Doc</title>
      <link href="2020/12/06/ipod-dev-doc/"/>
      <url>2020/12/06/ipod-dev-doc/</url>
      
        <content type="html"><![CDATA[<h1 id="IPOD-Development-Doc"><a href="#IPOD-Development-Doc" class="headerlink" title="IPOD Development Doc"></a><strong>IPOD Development Doc</strong></h1><blockquote><p>💫 <a href="https://github.com/Wriprin/IPOD">Github</a></p></blockquote><h1 id="gt-Read-Songs-From-Phone-Part-1"><a href="#gt-Read-Songs-From-Phone-Part-1" class="headerlink" title="> Read Songs From Phone Part - 1"></a>&gt; Read Songs From Phone Part - 1</h1><ul><li><h5 id="commit-the-viewpagers-and-the-style-of-tabindicator"><a href="#commit-the-viewpagers-and-the-style-of-tabindicator" class="headerlink" title="commit the viewpagers and the style of tabindicator."></a>commit the viewpagers and the style of tabindicator.</h5></li></ul><h4 id="1-Download-the-TabLayout-Tip1-Tip2"><a href="#1-Download-the-TabLayout-Tip1-Tip2" class="headerlink" title="1. Download  the TabLayout.    Tip1, Tip2"></a>1. Download  the TabLayout.    <a href="https://www.jianshu.com/p/fde38f367019">Tip1</a>, <a href="https://www.cnblogs.com/duan-xue-bin/p/10059516.html">Tip2</a></h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.tabs.TabLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tab_layout<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorFullWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorAccent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#009688<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_indicator<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><h4 id="2-ViewPager"><a href="#2-ViewPager" class="headerlink" title="2. ViewPager"></a>2. <a href="https://blog.csdn.net/qq_20785431/article/details/80865500">ViewPager</a></h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.tabs.TabLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tab_layout<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorFullWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorAccent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#009688<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_indicator<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><h4 id="3-Viewpageradapter"><a href="#3-Viewpageradapter" class="headerlink" title="3. Viewpageradapter"></a>3. Viewpageradapter</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewPagerAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">FragmentPagerAdapter</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> ArrayList<span class="token operator">&lt;</span>Fragment<span class="token operator">></span> fragments<span class="token punctuation">;</span>    <span class="token keyword">private</span> ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> titles<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">ViewPagerAdapter</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> FragmentManager fm<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fragments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>titles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">addFragments</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">,</span> String title<span class="token punctuation">)</span><span class="token punctuation">{</span>        fragments<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>        titles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Fragment <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fragments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fragments<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> CharSequence <span class="token function">getPageTitle</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> titles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="4-New-songsFragment-xml-and-albumFragment-xml"><a href="#4-New-songsFragment-xml-and-albumFragment-xml" class="headerlink" title="4.  New songsFragment.xml and albumFragment.xml"></a>4.  New songsFragment.xml and albumFragment.xml</h4><ul><li><h5 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a><a href="https://blog.csdn.net/weixin_43468667/article/details/89435098?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715478319195283043122%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715478319195283043122&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-6-89435098.nonecase&amp;utm_term=recyclerview&amp;spm=1018.2118.3001.4449">RecyclerView</a></h5></li></ul><h4 id="5-New-tabindicator-xml-to-initialize-its-style"><a href="#5-New-tabindicator-xml-to-initialize-its-style" class="headerlink" title="5.  New tabindicator.xml to initialize its style"></a>5.  New tabindicator.xml to initialize its style</h4><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gradient</span> <span class="token attr-name"><span class="token namespace">android:</span>centerColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorPrimaryDark<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>angle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span></code></pre><h1 id="gt-Read-Songs-From-Phone-Part-2"><a href="#gt-Read-Songs-From-Phone-Part-2" class="headerlink" title="> Read Songs From Phone Part - 2"></a><strong>&gt; Read Songs From Phone Part - 2</strong></h1><ul><li><h3 id="Add-the-permission-of-usage-fetch-all-the-songs-where-from-the-storage-to-app"><a href="#Add-the-permission-of-usage-fetch-all-the-songs-where-from-the-storage-to-app" class="headerlink" title="Add the permission of usage, fetch all the songs where from the storage to app."></a>Add the permission of usage, fetch all the songs where from the storage to app.</h3></li></ul><h4 id="1-Add-permission-in-MainActivity-java"><a href="#1-Add-permission-in-MainActivity-java" class="headerlink" title="1. Add permission in MainActivity.java"></a>1. Add permission in MainActivity.java</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ContextCompat<span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">)</span>        <span class="token operator">!=</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">}</span><span class="token punctuation">,</span>REQUEST_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        musicFiles <span class="token operator">=</span> <span class="token function">getAllAudio</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initViewPager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="2-Add-permission-in-AndroidMainfest-xml"><a href="#2-Add-permission-in-AndroidMainfest-xml" class="headerlink" title="2. Add permission in AndroidMainfest.xml"></a>2. Add permission in AndroidMainfest.xml</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><h4 id="3-Add-onRequestPermissionsResult-in-MainActivity-java"><a href="#3-Add-onRequestPermissionsResult-in-MainActivity-java" class="headerlink" title="3. Add onRequestPermissionsResult() in MainActivity.java"></a>3. Add onRequestPermissionsResult() in MainActivity.java</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> REQUEST_CODE<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//Do whatever you want permission related;</span>            musicFiles <span class="token operator">=</span> <span class="token function">getAllAudio</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">initViewPager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>WRITE_EXTERNAL_STORAGE<span class="token punctuation">}</span><span class="token punctuation">,</span>REQUEST_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="4-New-io-wriprin-android-ipod-MusicFiles-java-to-pack-attributes-of-songs"><a href="#4-New-io-wriprin-android-ipod-MusicFiles-java-to-pack-attributes-of-songs" class="headerlink" title="4. New io.wriprin.android.ipod.MusicFiles.java to pack attributes of songs"></a>4. New io.wriprin.android.ipod.MusicFiles.java to pack attributes of songs</h4><ul><li><h4 id="notice-about-the-short-key-Alt-Insert-to-generate-the-constructor-and-the-Getter-Setter"><a href="#notice-about-the-short-key-Alt-Insert-to-generate-the-constructor-and-the-Getter-Setter" class="headerlink" title="notice about the short key, Alt + Insert to generate the constructor and the Getter, Setter;"></a>notice about the short key, Alt + Insert to generate the constructor and the Getter, Setter;</h4></li></ul><h4 id="5-Add-ArrayList-getAllAudio"><a href="#5-Add-ArrayList-getAllAudio" class="headerlink" title="5. Add ArrayList  getAllAudio"></a>5. Add ArrayList<musicfiles>  getAllAudio</musicfiles></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> ArrayList<span class="token operator">&lt;</span>MusicFiles<span class="token operator">></span> <span class="token function">getAllAudio</span> <span class="token punctuation">(</span>Context context<span class="token punctuation">)</span>    <span class="token punctuation">{</span>            ArrayList<span class="token operator">&lt;</span>MusicFiles<span class="token operator">></span> tempAudioList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Uri uri <span class="token operator">=</span> MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>EXTERNAL_CONTENT_URI<span class="token punctuation">;</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> projection <span class="token operator">=</span>            <span class="token punctuation">{</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>TITLE<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>DURATION<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>DATA<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//for path</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>ARTIST<span class="token punctuation">,</span>                MediaStore<span class="token punctuation">.</span>Audio<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>_ID            <span class="token punctuation">}</span><span class="token punctuation">;</span>            Cursor cursor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> null<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    String album <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String title <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String duration <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String path <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String artist <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String id <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    MusicFiles musicFiles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicFiles</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> title<span class="token punctuation">,</span> artist<span class="token punctuation">,</span> album<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//take log.e for check</span>                    Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"Path:"</span> <span class="token operator">+</span> path<span class="token punctuation">,</span> <span class="token string">"Album"</span> <span class="token operator">+</span> album<span class="token punctuation">)</span><span class="token punctuation">;</span>                    tempAudioList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>musicFiles<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>duplicate<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>album<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        albums<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>musicFiles<span class="token punctuation">)</span><span class="token punctuation">;</span>                        duplicate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>album<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> tempAudioList<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><ul><li><a href="https://blog.csdn.net/qqq3670279/article/details/51475899?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715919119726885832985%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715919119726885832985&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-51475899.nonecase&amp;utm_term=getcontentresolver&amp;spm=1018.2118.3001.4449">context.getContentResolver().query</a></li></ul><h4 id="6-Global-Declaration-the-MusicFiles-to-use-it-when-user-choose-allow-permission"><a href="#6-Global-Declaration-the-MusicFiles-to-use-it-when-user-choose-allow-permission" class="headerlink" title="6. Global Declaration the MusicFiles to use it when user choose allow permission"></a>6. Global Declaration the MusicFiles to use it when user choose allow permission</h4><h1 id="gt-Read-Songs-From-Phone-Part-3"><a href="#gt-Read-Songs-From-Phone-Part-3" class="headerlink" title="> Read Songs From Phone Part - 3"></a><strong>&gt; Read Songs From Phone Part - 3</strong></h1><ul><li><h5 id="Display-SongList"><a href="#Display-SongList" class="headerlink" title="Display SongList"></a>Display SongList</h5></li></ul><h4 id="1-New-layout-resource-files-music-items-xml-to-display-the-SongList"><a href="#1-New-layout-resource-files-music-items-xml-to-display-the-SongList" class="headerlink" title="1. New layout resource files - music_items.xml to display the SongList"></a>1. New layout resource files - music_items.xml to display the SongList</h4><h4 id="2-New-io-wriprin-android-ipod-MusicAdapter-java-collect-the-info"><a href="#2-New-io-wriprin-android-ipod-MusicAdapter-java-collect-the-info" class="headerlink" title="2. New io.wriprin.android.ipod.MusicAdapter.java  collect the info"></a>2. New io.wriprin.android.ipod.MusicAdapter.java  collect the info</h4><ul><li><h5 id="ViewHolder"><a href="#ViewHolder" class="headerlink" title="ViewHolder()"></a><a href="https://www.cnblogs.com/wugu-ren/p/6106379.html">ViewHolder()</a></h5></li><li><h5 id="Context"><a href="#Context" class="headerlink" title="Context()"></a><a href="https://blog.csdn.net/u013196348/article/details/94395205?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160716874619724839511869%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160716874619724839511869&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-3-94395205.nonecase&amp;utm_term=context&amp;spm=1018.2118.3001.4449">Context()</a></h5></li><li><h5 id="Adapter"><a href="#Adapter" class="headerlink" title="Adapter()"></a><a href="https://blog.csdn.net/fznpcy/article/details/8658155?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160716922219724818061062%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160716922219724818061062&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-8658155.nonecase&amp;utm_term=adapter&amp;spm=1018.2118.3001.4449">Adapter()</a></h5></li><li><h5 id="Inflater"><a href="#Inflater" class="headerlink" title="Inflater()"></a><a href="https://blog.csdn.net/qq_42376054/article/details/102509594?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160715644219721940212443%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160715644219721940212443&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-102509594.nonecase&amp;utm_term=inflater&amp;spm=1018.2118.3001.4449">Inflater()</a></h5></li><li><h5 id="byte"><a href="#byte" class="headerlink" title="byte[]"></a><a href="https://blog.csdn.net/bzlj2912009596/article/details/79146622?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160717113419724813259611%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160717113419724813259611&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-79146622.nonecase&amp;utm_term=android%20byte&amp;spm=1018.2118.3001.4449">byte[]</a></h5></li></ul><h4 id="3-Import-Glide-dependency-to-build-gradle-Module-app"><a href="#3-Import-Glide-dependency-to-build-gradle-Module-app" class="headerlink" title="3. Import Glide dependency to build.gradle (Module: app)"></a>3. Import <a href="https://blog.csdn.net/xxdw1992/article/details/93624487?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160717011019724813279848%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160717011019724813279848&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-93624487.nonecase&amp;utm_term=glide&amp;spm=1018.2118.3001.4449">Glide</a> dependency to build.gradle (Module: app)</h4><pre class=" language-gradle"><code class="language-gradle">//Glideimplementation 'com.github.bumptech.glide:glide:4.11.0'annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'</code></pre><h4 id="4-songsFragment-java-recyclerview-match-Adapter"><a href="#4-songsFragment-java-recyclerview-match-Adapter" class="headerlink" title="4. songsFragment.java - recyclerview match Adapter"></a>4. songsFragment.java - recyclerview match Adapter</h4><h1 id="gt-Read-Songs-From-Phone-Part-4"><a href="#gt-Read-Songs-From-Phone-Part-4" class="headerlink" title="> Read Songs From Phone Part - 4"></a><strong>&gt; Read Songs From Phone Part - 4</strong></h1><ul><li><h5 id="Commit-the-layout-of-PlayerActivity"><a href="#Commit-the-layout-of-PlayerActivity" class="headerlink" title="Commit the layout of PlayerActivity"></a>Commit the layout of PlayerActivity</h5></li></ul><h4 id="1-Add-the-Vector-Assest-which-under-drawable-and-change-to-a-suitable-color"><a href="#1-Add-the-Vector-Assest-which-under-drawable-and-change-to-a-suitable-color" class="headerlink" title="1. Add the Vector Assest which under drawable and change to a suitable color."></a>1. Add the Vector Assest which under drawable and change to a suitable color.</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/VectorAssest.png" alt=""></p><h4 id="2-New-io-wriprin-android-ipod-PlayerActivity-EmptyActivity"><a href="#2-New-io-wriprin-android-ipod-PlayerActivity-EmptyActivity" class="headerlink" title="2. New io.wriprin.android.ipod.PlayerActivity(EmptyActivity)"></a>2. New io.wriprin.android.ipod.PlayerActivity(EmptyActivity)</h4><h4 id="3-New-Drawable-Resource-File-main-bg-xml"><a href="#3-New-Drawable-Resource-File-main-bg-xml" class="headerlink" title="3. New (Drawable Resource File ) - main_bg.xml"></a>3. New (Drawable Resource File ) - main_bg.xml</h4><ul><li><h5 id="RootElement-is-shape"><a href="#RootElement-is-shape" class="headerlink" title="RootElement is shape"></a>RootElement is shape</h5></li></ul><h4 id="4-New-Drawable-Resource-File-gradient-xml"><a href="#4-New-Drawable-Resource-File-gradient-xml" class="headerlink" title="4. New (Drawable Resource File ) - gradient.xml"></a>4. New (Drawable Resource File ) - gradient.xml</h4><ul><li><h5 id="ImageView’s-scaleType"><a href="#ImageView’s-scaleType" class="headerlink" title="ImageView’s scaleType"></a>ImageView’s <a href="https://blog.csdn.net/laoziyueguo3/article/details/48312347?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721888519725271058745%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721888519725271058745&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-48312347.pc_search_result_no_baidu_js&amp;utm_term=scaletype&amp;spm=1018.2118.3001.4449">scaleType</a></h5></li><li><h5 id="ellipsize"><a href="#ellipsize" class="headerlink" title="ellipsize"></a><a href="https://blog.csdn.net/imdxt1986/article/details/6942743?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721921819724838541780%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721921819724838541780&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-6942743.pc_search_result_no_baidu_js&amp;utm_term=ellipsize&amp;spm=1018.2118.3001.4449">ellipsize</a></h5></li></ul><h4 id="5-Add-FloatingActionButton-in-activity-player-xml"><a href="#5-Add-FloatingActionButton-in-activity-player-xml" class="headerlink" title="5. Add FloatingActionButton in activity_player.xml"></a>5. Add <a href="https://blog.csdn.net/gaolh89/article/details/79759404?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160721938819195271620070%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160721938819195271620070&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-79759404.pc_search_result_no_baidu_js&amp;utm_term=FloatingActionButton&amp;spm=1018.2118.3001.4449">FloatingActionButton</a> in activity_player.xml</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.floatingactionbutton.FloatingActionButton</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/play_pause<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/ic_play<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_centerHorizontal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_centerVertical</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>focusable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><ul><li><h5 id="why-use-focusable"><a href="#why-use-focusable" class="headerlink" title="why use focusable"></a><a href="https://blog.csdn.net/ckf1122/article/details/6269221?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">why use focusable</a></h5></li></ul><h1 id="gt-Read-Songs-From-Phone-Part-5-PlayAudio"><a href="#gt-Read-Songs-From-Phone-Part-5-PlayAudio" class="headerlink" title="> Read Songs From Phone Part - 5 | PlayAudio"></a><strong>&gt; Read Songs From Phone Part - 5 | PlayAudio</strong></h1><ul><li><h5 id="Commit-the-FUNC-of-itemview-click"><a href="#Commit-the-FUNC-of-itemview-click" class="headerlink" title="Commit the FUNC of itemview.click"></a>Commit the FUNC of <a href="https://blog.csdn.net/kent_todo/article/details/41943935?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722044019725271027060%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722044019725271027060&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-41943935.pc_search_result_no_baidu_js&amp;utm_term=itemview&amp;spm=1018.2118.3001.4449">itemview</a>.click</h5></li></ul><h4 id="1-Add-itemview-click-in-MusicAdapter-java"><a href="#1-Add-itemview-click-in-MusicAdapter-java" class="headerlink" title="1. Add itemview.click in MusicAdapter.java"></a>1. Add itemview.click in MusicAdapter.java</h4><pre class=" language-java"><code class="language-java">holder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> PlayerActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        mContext<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="2-Add-TimeLine’s-layout-in-activity-player-xml"><a href="#2-Add-TimeLine’s-layout-in-activity-player-xml" class="headerlink" title="2. Add TimeLine’s layout in activity_player.xml"></a>2. Add TimeLine’s layout in activity_player.xml</h4><ul><li><h5 id="SeekBar"><a href="#SeekBar" class="headerlink" title="SeekBar"></a><a href="https://blog.csdn.net/wu_kangjie/article/details/80145731?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722074419195271695819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722074419195271695819&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-80145731.pc_search_result_no_baidu_js&amp;utm_term=seekbar&amp;spm=1018.2118.3001.4449">SeekBar</a></h5></li></ul><h4 id="3-Implement-the-Init-FUNC-of-PlayerActivity-java"><a href="#3-Implement-the-Init-FUNC-of-PlayerActivity-java" class="headerlink" title="3. Implement the Init FUNC of PlayerActivity.java"></a>3. Implement the Init FUNC of PlayerActivity.java</h4><ul><li><h5 id="Declare-and-assign"><a href="#Declare-and-assign" class="headerlink" title="Declare and assign"></a>Declare and assign</h5></li></ul><h4 id="4-MusicAdapter-java-to-add-intent-putExtra"><a href="#4-MusicAdapter-java-to-add-intent-putExtra" class="headerlink" title="4. MusicAdapter.java to add intent.putExtra()"></a>4. MusicAdapter.java to add <a href="https://blog.csdn.net/ching_zhi/article/details/53842302?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722165919195265193358%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160722165919195265193358&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-53842302.pc_search_result_no_baidu_js&amp;utm_term=putextra&amp;spm=1018.2118.3001.4449">intent.putExtra()</a></h4><pre class=" language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li><h5 id="position"><a href="#position" class="headerlink" title="position"></a><a href="https://www.cnblogs.com/vus520/archive/2011/08/30/2561932.html">position</a></h5></li></ul><h4 id="5-PlayerActivity-java-get-the-position-from-MusicAdapter-java"><a href="#5-PlayerActivity-java-get-the-position-from-MusicAdapter-java" class="headerlink" title="5. PlayerActivity.java get the position from MusicAdapter.java"></a>5. PlayerActivity.java get the position from MusicAdapter.java</h4><pre class=" language-java"><code class="language-java">position <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li><h5 id="static"><a href="#static" class="headerlink" title="static"></a><a href="https://blog.csdn.net/guotianqing/article/details/79828100?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722214719724838563346%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722214719724838563346&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-1-79828100.pc_search_result_no_baidu_js&amp;utm_term=static%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8&amp;spm=1018.2118.3001.4449">static</a></h5></li></ul><h4 id="6-Implement-the-method-of-playing"><a href="#6-Implement-the-method-of-playing" class="headerlink" title="6. Implement the method of playing"></a>6. Implement the method of playing</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">getIntentMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    position <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String sender <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"sender"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>sender <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> sender<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"albumDetails"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        listSongs <span class="token operator">=</span> albumFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        listSongs <span class="token operator">=</span> mFiles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>listSongs <span class="token operator">!=</span> null<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        playPauseBtn<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_pause<span class="token punctuation">)</span><span class="token punctuation">;</span>        uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>listSongs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaPlayer <span class="token operator">!=</span> null<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer <span class="token operator">=</span> MediaPlayer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        mediaPlayer <span class="token operator">=</span> MediaPlayer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>        mediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    seekBar<span class="token punctuation">.</span><span class="token function">setMax</span><span class="token punctuation">(</span>mediaPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">metaData</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><h5 id="MediaPlayer"><a href="#MediaPlayer" class="headerlink" title="MediaPlayer"></a><a href="https://blog.csdn.net/zhaokx3/article/details/53432718?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722327319724848150921%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722327319724848150921&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-7-53432718.pc_search_result_no_baidu_js&amp;utm_term=mediaplayer&amp;spm=1018.2118.3001.4449">MediaPlayer</a></h5></li></ul><h4 id="7-Implement-the-timeline-Durationbar-and-FortmattedTime"><a href="#7-Implement-the-timeline-Durationbar-and-FortmattedTime" class="headerlink" title="7. Implement the timeline_Durationbar  and FortmattedTime"></a>7. Implement the timeline_Durationbar  and FortmattedTime</h4><ul><li><h5 id="runOnUiThread-Thread-collocate-with-Handler"><a href="#runOnUiThread-Thread-collocate-with-Handler" class="headerlink" title="runOnUiThread Thread collocate with Handler"></a><a href="https://blog.csdn.net/cf8833/article/details/90297775?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722366319724813238138%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722366319724813238138&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-4-90297775.pc_search_result_no_baidu_js&amp;utm_term=runonuithread&amp;spm=1018.2118.3001.4449">runOnUiThread</a> Thread collocate with <a href="https://blog.csdn.net/wsq_tomato/article/details/80301851?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160722545519724847137907%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=160722545519724847137907&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-1-80301851.pc_search_result_no_baidu_js&amp;utm_term=handler&amp;spm=1018.2118.3001.4449">Handler</a></h5></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> devDoc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="2020/11/22/git/"/>
      <url>2020/11/22/git/</url>
      
        <content type="html"><![CDATA[<h2 id="Git分布式版本控制工具"><a href="#Git分布式版本控制工具" class="headerlink" title="Git分布式版本控制工具"></a>Git分布式版本控制工具</h2><h2 id="1-Git概述"><a href="#1-Git概述" class="headerlink" title="1. Git概述"></a>1. Git概述</h2><h3 id="1-1-Git历史"><a href="#1-1-Git历史" class="headerlink" title="1.1 Git历史"></a>1.1 Git历史</h3><p>Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 </p><p>他们对新的系统制订了若干目标：</p><ul><li><p>速度</p></li><li><p>简单的设计</p></li><li><p>对非线性开发模式的强力支持（允许成千上万个并行开发的分支）</p></li><li><p>完全分布式</p></li><li><p>有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</p></li></ul><h3 id="1-2-Git与SVN对比"><a href="#1-2-Git与SVN对比" class="headerlink" title="1.2 Git与SVN对比"></a>1.2 Git与SVN对比</h3><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而开发人员工作的时候，用的都是自己的电脑，所以首先要从中央服务器下载最新的版本，然后开发，开发完后，需要把自己开发的代码提交到中央服务器。</p><p>集中式版本控制工具缺点：</p><p>  服务器单点故障</p><p>  容错性差</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-1.png" alt=""></p><p>Git是分布式版本控制系统（Distributed Version Control System，简称 DVCS） ，分为两种类型的仓库：</p><p>本地仓库和远程仓库</p><p>本地仓库：是在开发人员自己电脑上的Git仓库        </p><p>远程仓库：是在远程服务器上的Git仓库</p><p>Clone：克隆，就是将远程仓库复制到本地</p><p>Push：推送，就是将本地仓库代码上传到远程仓库</p><p>Pull：拉取，就是将远程仓库代码下载到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-2.png" alt=""></p><h3 id="1-3-Git工作流程"><a href="#1-3-Git工作流程" class="headerlink" title="1.3 Git工作流程"></a>1.3 Git工作流程</h3><p>工作流程如下：</p><p>1．从远程仓库中克隆代码到本地仓库</p><p>2．从本地仓库中checkout代码然后进行代码修改</p><p>3．在提交前先将代码提交到暂存区</p><p>4．提交到本地仓库。本地仓库中保存修改的各个历史版本</p><p>5．修改完成后，需要和团队成员共享代码时，将代码push到远程仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-3.png" alt=""></p><h3 id="1-4-Git下载与安装"><a href="#1-4-Git下载与安装" class="headerlink" title="1.4 Git下载与安装"></a>1.4 Git下载与安装</h3><p>下载地址： <a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-4.png" alt="">  </p><p>下载完成后可以得到如下安装文件：</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-5.png" alt="">  </p><h2 id="2-Git代码托管服务"><a href="#2-Git代码托管服务" class="headerlink" title="2. Git代码托管服务"></a>2. Git代码托管服务</h2><h3 id="2-1-常用的Git代码托管服务"><a href="#2-1-常用的Git代码托管服务" class="headerlink" title="2.1 常用的Git代码托管服务"></a>2.1 常用的Git代码托管服务</h3><p>前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。</p><p>gitHub（ 地址：<a href="https://github.com/">https://github.com/</a> ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub</p><p>码云（地址： <a href="https://gitee.com/">https://gitee.com/</a> ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快</p><p>GitLab （地址： <a href="https://about.gitlab.com/">https://about.gitlab.com/</a> ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务</p><h3 id="2-2-在码云注册账号"><a href="#2-2-在码云注册账号" class="headerlink" title="2.2 在码云注册账号"></a>2.2 在码云注册账号</h3><p>要想使用码云的相关服务，需要注册账号（地址： <a href="https://gitee.com/signup">https://gitee.com/signup</a> ）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-6.png" alt=""></p><h3 id="2-3-登录码云并创建Git远程仓库"><a href="#2-3-登录码云并创建Git远程仓库" class="headerlink" title="2.3 登录码云并创建Git远程仓库"></a>2.3 登录码云并创建Git远程仓库</h3><p>注册完成后就可以使用刚刚注册的邮箱进行登录（地址： <a href="https://gitee.com/login">https://gitee.com/login</a> ）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-7.png" alt=""></p><p>登录成功后就可以创建Git远程仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-8.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-9.png" alt=""></p><p>创建完成后可以查看仓库信息</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-10.png" alt=""></p><p>每个Git远程仓库都会对应一个网络地址，可以点击克隆/下载按钮弹出窗口并点击复制按钮获得这个网络地址</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-11.png" alt=""></p><p>我们当前创建的Git远程仓库对应的地址为：<a href="https://gitee.com/ChuanZhiBoKe/myGitRepo.git">https://gitee.com/ChuanZhiBoKe/myGitRepo.git</a></p><h3 id="2-4-邀请其他用户成为仓库成员"><a href="#2-4-邀请其他用户成为仓库成员" class="headerlink" title="2.4 邀请其他用户成为仓库成员"></a>2.4 邀请其他用户成为仓库成员</h3><p>前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人（身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-12.png" alt=""></p><h2 id="3-Git常用命令"><a href="#3-Git常用命令" class="headerlink" title="3. Git常用命令"></a>3. Git常用命令</h2><h3 id="3-1-环境配置"><a href="#3-1-环境配置" class="headerlink" title="3.1 环境配置"></a>3.1 环境配置</h3><p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息</p><p>设置用户信息 </p><p>   git config –global user.name “itcast”</p><p>   git config –global user.email “<a href="mailto:hello@itcast.cn">hello@itcast.cn</a>”</p><p>查看配置信息</p><p>   git config –list</p><p>   git config user.name</p><p>通过上面的命令设置的信息会保存在~/.gitconfig文件中</p><h3 id="3-2-获取Git仓库"><a href="#3-2-获取Git仓库" class="headerlink" title="3.2 获取Git仓库"></a>3.2 获取Git仓库</h3><p>要使用Git对我们的代码进行版本控制，首先需要获得Git仓库</p><p>获取Git仓库通常有两种方式：</p><p>  在本地初始化一个Git仓库</p><p>  从远程仓库克隆</p><h4 id="3-2-1在本地初始化一个Git仓库"><a href="#3-2-1在本地初始化一个Git仓库" class="headerlink" title="3.2.1在本地初始化一个Git仓库"></a>3.2.1在本地初始化一个Git仓库</h4><p>执行步骤如下：</p><ol><li><p>在电脑的任意位置创建一个空目录（例如repo1）作为我们的本地Git仓库</p></li><li><p>进入这个目录中，点击右键打开Git bash窗口</p></li><li><p>执行命令git init</p></li></ol><p>如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-13.png" alt=""></p><h4 id="3-2-2从远程仓库克隆"><a href="#3-2-2从远程仓库克隆" class="headerlink" title="3.2.2从远程仓库克隆"></a>3.2.2从远程仓库克隆</h4><p>可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地</p><p>命令形式为：git clone 远程Git仓库地址 </p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-14.png" alt=""></p><h3 id="3-3工作目录、暂存区以及版本库概念"><a href="#3-3工作目录、暂存区以及版本库概念" class="headerlink" title="3.3工作目录、暂存区以及版本库概念"></a>3.3工作目录、暂存区以及版本库概念</h3><p>为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到</p><p>版本库：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等</p><p>工作目录（工作区）：包含.git文件夹的目录就是工作目录，主要用于存放开发的代码</p><p>暂存区：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-15.png" alt=""></p><h3 id="3-4-Git工作目录下文件的两种状态"><a href="#3-4-Git工作目录下文件的两种状态" class="headerlink" title="3.4 Git工作目录下文件的两种状态"></a>3.4 Git工作目录下文件的两种状态</h3><p>Git工作目录下的文件存在两种状态：</p><p>  untracked 未跟踪（未被纳入版本控制）</p><p>  tracked 已跟踪（被纳入版本控制）</p><p>​        Unmodified 未修改状态</p><p>​        Modified 已修改状态</p><p>​        Staged 已暂存状态</p><p>这些文件的状态会随着我们执行Git的命令发生变化</p><h3 id="3-5-本地仓库操作"><a href="#3-5-本地仓库操作" class="headerlink" title="3.5 本地仓库操作"></a>3.5 本地仓库操作</h3><p>git status 查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-16.png" alt=""></p><p>也可以使用git status –s 使输出信息更加简洁</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-17.png" alt=""></p><p>git add 将未跟踪的文件加入暂存区</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-18.png" alt=""></p><p>将新创建的文件加入暂存区后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-19.png" alt=""></p><p>git reset 将暂存区的文件取消暂存</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-20.png" alt="">  </p><p>将文件取消暂存后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-21.png" alt=""></p><p>git commit 将暂存区的文件修改提交到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-22.png" alt=""></p><p>git rm 删除文件</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-23.png" alt=""></p><p>删除文件后查看文件状态</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-24.png" alt=""></p><p>上面删除的只是工作区的文件，需要提交到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-25.png" alt=""></p><p>将文件添加至忽略列表</p><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p><pre><code># no .a files*.a# but do track lib.a, even though you're ignoring .a files above!lib.a# only ignore the TODO file in the current directory, not subdir/TODO/TODO# ignore all files in the build/ directorybuild/# ignore doc/notes.txt, but not doc/server/arch.txtdoc/*.txt# ignore all .pdf files in the doc/ directorydoc/**/*.pdf</code></pre><p>git log 查看日志记录</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-26.png" alt=""></p><h3 id="3-6-远程仓库操作"><a href="#3-6-远程仓库操作" class="headerlink" title="3.6 远程仓库操作"></a>3.6 远程仓库操作</h3><p>前面执行的命令操作都是针对的本地仓库，本章节我们会学习关于远程仓库的一些操作，具体包括：</p><h4 id="3-6-1查看远程仓库"><a href="#3-6-1查看远程仓库" class="headerlink" title="3.6.1查看远程仓库"></a>3.6.1查看远程仓库</h4><p>如果想查看已经配置的远程仓库服务器，可以运行 git remote 命令。 它会列出指定的每一个远程服务器的简写。 如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-27.png" alt=""></p><h4 id="3-6-2-添加远程仓库"><a href="#3-6-2-添加远程仓库" class="headerlink" title="3.6.2 添加远程仓库"></a>3.6.2 添加远程仓库</h4><p>运行 git remote add <shortname> <url> 添加一个新的远程 Git 仓库，同时指定一个可以引用的简写</url></shortname></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-28.png" alt=""></p><h4 id="3-6-3-从远程仓库克隆"><a href="#3-6-3-从远程仓库克隆" class="headerlink" title="3.6.3 从远程仓库克隆"></a>3.6.3 从远程仓库克隆</h4><p>如果你想获得一份已经存在了的 Git 仓库的拷贝，这时就要用到 git clone 命令。 Git 克隆的是该 Git 仓库服务器上的几乎所有数据（包括日志信息、历史记录等），而不仅仅是复制工作所需要的文件。 当你执行 git clone 命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。</p><p>克隆仓库的命令格式是 git clone [url] </p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-29.png" alt=""></p><h4 id="3-6-4-移除无效的远程仓库"><a href="#3-6-4-移除无效的远程仓库" class="headerlink" title="3.6.4 移除无效的远程仓库"></a>3.6.4 移除无效的远程仓库</h4><p>如果因为一些原因想要移除一个远程仓库 ，可以使用 git remote rm</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-30.png" alt=""></p><p>注意：此命令只是从本地移除远程仓库的记录，并不会真正影响到远程仓库</p><h4 id="3-6-5-从远程仓库中抓取与拉取"><a href="#3-6-5-从远程仓库中抓取与拉取" class="headerlink" title="3.6.5 从远程仓库中抓取与拉取"></a>3.6.5 从远程仓库中抓取与拉取</h4><p>git fetch 是从远程仓库获取最新版本到本地仓库，不会自动merge</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-31.png" alt=""></p><p>git pull 是从远程仓库获取最新版本并merge到本地仓库</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-32.png" alt=""></p><p>注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ），解决此问题可以在git pull命令后加入参数–allow-unrelated-histories</p><h4 id="3-6-6-推送到远程仓库"><a href="#3-6-6-推送到远程仓库" class="headerlink" title="3.6.6 推送到远程仓库"></a>3.6.6 推送到远程仓库</h4><p>当你想分享你的代码时，可以将其推送到远程仓库。 命令形式：git push [remote-name][branch-name]</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-54.png" alt=""></p><h3 id="3-7-Git分支"><a href="#3-7-Git分支" class="headerlink" title="3.7 Git分支"></a>3.7 Git分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。Git 的master分支并不是一个特殊分支。 它跟其它分支没有区别。 之所以几乎每一个仓库都有 master 分支，是因为git init 命令默认创建它，并且大多数人都懒得去改动它。</p><p>在本章节我们会学习到关于分支的相关命令，具体如下：</p><h4 id="3-7-1-查看分支"><a href="#3-7-1-查看分支" class="headerlink" title="3.7.1 查看分支"></a>3.7.1 查看分支</h4><p># 列出所有本地分支</p><p>$ git branch</p><p># 列出所有远程分支</p><p>$ git branch -r</p><p># 列出所有本地分支和远程分支</p><p>$ git branch -a</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-33.png" alt=""></p><h4 id="3-7-2-创建分支"><a href="#3-7-2-创建分支" class="headerlink" title="3.7.2 创建分支"></a>3.7.2 创建分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-34.png" alt=""></p><h4 id="3-7-3-切换分支"><a href="#3-7-3-切换分支" class="headerlink" title="3.7.3 切换分支"></a>3.7.3 切换分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-35.png" alt=""></p><h4 id="3-7-4-推送至远程仓库分支"><a href="#3-7-4-推送至远程仓库分支" class="headerlink" title="3.7.4 推送至远程仓库分支"></a>3.7.4 推送至远程仓库分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-36.png" alt=""></p><h4 id="3-7-5-合并分支"><a href="#3-7-5-合并分支" class="headerlink" title="3.7.5 合并分支"></a>3.7.5 合并分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-37.png" alt=""></p><p>有时候合并操作不会如此顺利。 如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没办法合并它们，同时会提示文件冲突。此时需要我们打开冲突的文件并修复冲突内容，最后执行git add命令来标识冲突已解决</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-38.png" alt=""></p><h4 id="3-7-5-删除分支"><a href="#3-7-5-删除分支" class="headerlink" title="3.7.5 删除分支"></a>3.7.5 删除分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-39.png" alt=""></p><p>如果要删除的分支中进行了一些开发动作，此时执行上面的删除命令并不会删除分支，如果坚持要删除此分支，可以将命令中的-d参数改为-D</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-40.png" alt=""></p><p>注：如果要删除远程仓库中的分支，可以使用命令git push<br>origin –d branchName</p><h2 id="4-在IDEA中使用Git"><a href="#4-在IDEA中使用Git" class="headerlink" title="4. 在IDEA中使用Git"></a>4. 在IDEA中使用Git</h2><h3 id="4-1-在IDEA中配置Git"><a href="#4-1-在IDEA中配置Git" class="headerlink" title="4.1 在IDEA中配置Git"></a>4.1 在IDEA中配置Git</h3><p>安装好IntelliJ IDEA后，如果Git安装在默认路径下，那么idea会自动找到git的位置，如果更改了Git的安装位置则需要手动配置下Git的路径。</p><p>选择File→Settings打开设置窗口，找到Version Control下的git选项：</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-41.png" alt=""></p><p>选择git的安装目录后可以点击“Test”按钮测试是否正确配置</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-42.png" alt=""></p><h3 id="4-2-在IDEA中使用Git"><a href="#4-2-在IDEA中使用Git" class="headerlink" title="4.2 在IDEA中使用Git"></a>4.2 在IDEA中使用Git</h3><h4 id="4-2-1在IDEA中创建工程并将工程添加至Git"><a href="#4-2-1在IDEA中创建工程并将工程添加至Git" class="headerlink" title="4.2.1在IDEA中创建工程并将工程添加至Git"></a>4.2.1在IDEA中创建工程并将工程添加至Git</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-43.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-44.png" alt=""></p><p>​将项目添加至Git管理后，可以从IDEA的工具栏上看到Git操作的按钮</p><h4 id="4-2-2-将文件添加到暂存区"><a href="#4-2-2-将文件添加到暂存区" class="headerlink" title="4.2.2 将文件添加到暂存区"></a>4.2.2 将文件添加到暂存区</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-45.png" alt=""></p><h4 id="4-2-3-提交文件"><a href="#4-2-3-提交文件" class="headerlink" title="4.2.3 提交文件"></a>4.2.3 提交文件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-46.png" alt=""></p><h4 id="4-2-4-将代码推送到远程仓库"><a href="#4-2-4-将代码推送到远程仓库" class="headerlink" title="4.2.4 将代码推送到远程仓库"></a>4.2.4 将代码推送到远程仓库</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-47.png" alt=""></p><h4 id="4-2-5-从远程仓库克隆工程到本地"><a href="#4-2-5-从远程仓库克隆工程到本地" class="headerlink" title="4.2.5 从远程仓库克隆工程到本地"></a>4.2.5 从远程仓库克隆工程到本地</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-48.png" alt=""></p><h4 id="4-2-6-从远程拉取代码"><a href="#4-2-6-从远程拉取代码" class="headerlink" title="4.2.6 从远程拉取代码"></a>4.2.6 从远程拉取代码</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-49.png" alt=""></p><h4 id="4-2-7-版本对比"><a href="#4-2-7-版本对比" class="headerlink" title="4.2.7 版本对比"></a>4.2.7 版本对比</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-50.png" alt=""></p><h4 id="4-2-8-创建分支"><a href="#4-2-8-创建分支" class="headerlink" title="4.2.8 创建分支"></a>4.2.8 创建分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-51.png" alt=""></p><h4 id="4-2-9-切换分支"><a href="#4-2-9-切换分支" class="headerlink" title="4.2.9 切换分支"></a>4.2.9 切换分支</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-52.png" alt=""></p><h4 id="4-2-10-分支合并"><a href="#4-2-10-分支合并" class="headerlink" title="4.2.10 分支合并"></a>4.2.10 分支合并</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Git-53.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaMemo</title>
      <link href="2020/11/15/java-day-01/"/>
      <url>2020/11/15/java-day-01/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Java概述"><a href="#1-Java概述" class="headerlink" title="1. Java概述"></a>1. Java概述</h2><h3 id="1-1-Java语言发展史（了解）"><a href="#1-1-Java语言发展史（了解）" class="headerlink" title="1.1 Java语言发展史（了解）"></a>1.1 Java语言发展史（了解）</h3><p>语言：人与人交流沟通的表达方式</p><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p><p>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言</p><p>Java之父：詹姆斯·高斯林（James Gosling）</p><p>2009年，Sun公司被甲骨文公司收购，所以我们现在访问oracle官网即可：<a href="https://www.oracle.com/">https://www.oracle.com</a> </p><p>当前，我们课程使用的JDK版本：11.0</p><h3 id="1-2-Java语言跨平台原理（理解）"><a href="#1-2-Java语言跨平台原理（理解）" class="headerlink" title="1.2 Java语言跨平台原理（理解）"></a>1.2 Java语言跨平台原理（理解）</h3><p>Java程序并非是直接运行的，Java编译器将Java源程序编译成与平台无关的字节码文件(class文件)，然后由Java虚拟机（JVM）对字节码文件解释执行。所以在不同的操作系统下，只需安装不同的Java虚拟机即可实现java程序的跨平台。</p><h3 id="1-3-JRE和JDK（记忆）"><a href="#1-3-JRE和JDK（记忆）" class="headerlink" title="1.3 JRE和JDK（记忆）"></a>1.3 JRE和JDK（记忆）</h3><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p><h3 id="1-4-JDK的下载和安装（应用）"><a href="#1-4-JDK的下载和安装（应用）" class="headerlink" title="1.4 JDK的下载和安装（应用）"></a>1.4 JDK的下载和安装（应用）</h3><h4 id="1-4-1-下载"><a href="#1-4-1-下载" class="headerlink" title="1.4.1 下载"></a>1.4.1 下载</h4><p>通过官方网站获取JDK</p><p><a href="http://www.oracle.com/">http://www.oracle.com</a></p><p><strong>注意</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p>具体下载步骤请参见《JDK下载及安装说明文档》</p><h4 id="1-4-2-安装"><a href="#1-4-2-安装" class="headerlink" title="1.4.2 安装"></a>1.4.2 安装</h4><p>傻瓜式安装，下一步即可。但默认的安装路径是在C:\Program Files下，为方便统一管理建议修改安装路径，将与开发相关的软件都安装到一个目录下，例如：E:\develop。</p><p><strong>注意</strong>：安装路径不要包含中文或者空格等特殊字符（使用纯英文目录）。</p><p>具体安装步骤请参见《JDK下载及安装说明文档》</p><h4 id="1-4-3-JDK的安装目录介绍"><a href="#1-4-3-JDK的安装目录介绍" class="headerlink" title="1.4.3 JDK的安装目录介绍"></a>1.4.3 JDK的安装目录介绍</h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h2 id="2-第一个演示程序"><a href="#2-第一个演示程序" class="headerlink" title="2. 第一个演示程序"></a>2. 第一个演示程序</h2><h3 id="2-1-常用DOS命令（应用）"><a href="#2-1-常用DOS命令（应用）" class="headerlink" title="2.1 常用DOS命令（应用）"></a>2.1 常用DOS命令（应用）</h3><p>在接触集成开发环境之前，我们需要使用命令行窗口对java程序进行编译和运行，所以需要知道一些常用DOS命令。</p><p>1、打开命令行窗口的方式：win + r打开运行窗口，输入cmd，回车。</p><p>2、常用命令及其作用</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称:</td><td>盘符切换。E:回车，表示切换到E盘。</td></tr><tr><td>dir</td><td>查看当前路径下的内容。</td></tr><tr><td>cd 目录</td><td>进入单级目录。cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录。</td></tr><tr><td>cd 目录1\目录2...</td><td>进入多级目录。cd itheima\JavaSE</td></tr><tr><td>cd \</td><td>回退到盘符目录。</td></tr><tr><td>cls</td><td>清屏。</td></tr><tr><td>exit</td><td>退出命令提示符窗口。</td></tr></tbody></table><h3 id="2-2-Path环境变量的配置（应用）"><a href="#2-2-Path环境变量的配置（应用）" class="headerlink" title="2.2 Path环境变量的配置（应用）"></a>2.2 Path环境变量的配置（应用）</h3><h4 id="2-2-1-为什么配置环境变量"><a href="#2-2-1-为什么配置环境变量" class="headerlink" title="2.2.1 为什么配置环境变量"></a>2.2.1 为什么配置环境变量</h4><p>开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在该目录下执行。我们不可能把所有的java文件都放到JDK的bin目录下，所以配置环境变量的作用就是可以使bin目录下的java相关命令可以在任意目录下使用。</p><h4 id="2-2-2-配置环境变量步骤"><a href="#2-2-2-配置环境变量步骤" class="headerlink" title="2.2.2 配置环境变量步骤"></a>2.2.2 配置环境变量步骤</h4><p>具体配置步骤请参见《Java环境变量配置说明》文档。    </p><h3 id="2-3-HelloWorld案例（应用）"><a href="#2-3-HelloWorld案例（应用）" class="headerlink" title="2.3 HelloWorld案例（应用）"></a>2.3 HelloWorld案例（应用）</h3><p>HelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p><h4 id="2-3-1-Java程序开发运行流程"><a href="#2-3-1-Java程序开发运行流程" class="headerlink" title="2.3.1 Java程序开发运行流程"></a>2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><h4 id="2-3-2-HelloWorld案例的编写"><a href="#2-3-2-HelloWorld案例的编写" class="headerlink" title="2.3.2 HelloWorld案例的编写"></a>2.3.2 HelloWorld案例的编写</h4><p>1、新建文本文档文件，修改名称为HelloWorld.java。</p><p>2、用记事本打开HelloWorld.java文件，输写程序内容。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="2-3-3-HelloWorld案例的编译和运行"><a href="#2-3-3-HelloWorld案例的编译和运行" class="headerlink" title="2.3.3 HelloWorld案例的编译和运行"></a>2.3.3 HelloWorld案例的编译和运行</h4><p>存文件，打开命令行窗口，将目录切换至java文件所在目录，编译java文件生成class文件，运行class文件。</p><blockquote><p>编译：javac 文件名.java</p><p>范例：javac HelloWorld.java</p><p>执行：java 类名</p><p>范例：java HelloWorld</p></blockquote><h3 id="2-4-HelloWorld案例常见问题（理解）"><a href="#2-4-HelloWorld案例常见问题（理解）" class="headerlink" title="2.4 HelloWorld案例常见问题（理解）"></a>2.4 HelloWorld案例常见问题（理解）</h3><h4 id="2-4-1-BUG"><a href="#2-4-1-BUG" class="headerlink" title="2.4.1 BUG"></a>2.4.1 BUG</h4><p>在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p><h4 id="2-4-2-BUG的解决"><a href="#2-4-2-BUG的解决" class="headerlink" title="2.4.2 BUG的解决"></a>2.4.2 BUG的解决</h4><p>1、具备识别BUG的能力：多看</p><p>2、具备分析BUG的能力：多思考，多查资料</p><p>3、具备解决BUG的能力：多尝试，多总结</p><h4 id="2-4-3-HelloWorld案例常见问题"><a href="#2-4-3-HelloWorld案例常见问题" class="headerlink" title="2.4.3 HelloWorld案例常见问题"></a>2.4.3 HelloWorld案例常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p><p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>4、编译命令后的java文件名需要带文件后缀.java</p><p>5、运行命令后的class文件名（类名）不带文件后缀.class</p><p>…</p><h3 id="2-5-Notepad-软件的安装和使用（应用）"><a href="#2-5-Notepad-软件的安装和使用（应用）" class="headerlink" title="2.5 Notepad++软件的安装和使用（应用）"></a>2.5 Notepad++软件的安装和使用（应用）</h3><h4 id="2-5-1-什么要使用Notepad-软件"><a href="#2-5-1-什么要使用Notepad-软件" class="headerlink" title="2.5.1 什么要使用Notepad++软件"></a>2.5.1 什么要使用Notepad++软件</h4><p>Notepad++功能比windows中的自带记事本功能强大，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。Notepad++有行号，能够快速定位问题位置，还有语法高亮度显示、代码折叠等功能。而且它是免费的。</p><h4 id="2-5-2-Notepad-软件安装"><a href="#2-5-2-Notepad-软件安装" class="headerlink" title="2.5.2 Notepad++软件安装"></a>2.5.2 Notepad++软件安装</h4><p>安装：傻瓜式安装，一直下一步即可。建议也安装到统一的开发软件目录下，比如E:\develop。</p><p>具体安装步骤请参见《Nodepad++软件安装及配置说明》文档。</p><h4 id="2-5-3Notepad-软件配置"><a href="#2-5-3Notepad-软件配置" class="headerlink" title="2.5.3Notepad++软件配置"></a>2.5.3Notepad++软件配置</h4><p>安装完毕之后，为了使用方便，做一个简单的配置：修改默认语言和编码。</p><p>具体配置的说明请参见《Nodepad++软件安装及配置说明》文档。</p><h2 id="3-java基础语法"><a href="#3-java基础语法" class="headerlink" title="3. java基础语法"></a>3. java基础语法</h2><h4 id="3-1-注释（理解）"><a href="#3-1-注释（理解）" class="headerlink" title="3.1 注释（理解）"></a>3.1 注释（理解）</h4><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p><p>单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 这是单行注释文字</span></code></pre><p>多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*这是多行注释文字这是多行注释文字这是多行注释文字*/</span>注意：多行注释不能嵌套使用。</code></pre><p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p><h4 id="3-2-关键字（理解）"><a href="#3-2-关键字（理解）" class="headerlink" title="3.2 关键字（理解）"></a>3.2 关键字（理解）</h4><p>关键字是指被java语言赋予了特殊含义的单词。</p><p>关键字的特点：</p><p>​    关键字的字母全部小写。</p><p>​    常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p><h4 id="3-3-常量（应用）"><a href="#3-3-常量（应用）" class="headerlink" title="3.3 常量（应用）"></a>3.3 常量（应用）</h4><p>常量：在程序运行过程中，其值不可以发生改变的量。</p><p>Java中的常量分类：</p><p>​    字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p><p>​    整数常量  整数，例如：-10、0、88等</p><p>​    小数常量  小数，例如：-5.5、1.0、88.88等</p><p>​    字符常量  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p><p>​    布尔常量  布尔值，表示真假，只有两个值true和false</p><p>​    空常量  一个特殊的值，空值，值为null</p><p>除空常量外，其他常量均可使用输出语句直接输出。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个整数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个小数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出一个字符</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出boolean值true</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎来到黑马程序员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出字符串</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="3-4-数据类型（记忆、应用）"><a href="#3-4-数据类型（记忆、应用）" class="headerlink" title="3.4 数据类型（记忆、应用）"></a>3.4 数据类型（记忆、应用）</h4><h5 id="3-4-1-计算机存储单元"><a href="#3-4-1-计算机存储单元" class="headerlink" title="3.4.1 计算机存储单元"></a>3.4.1 计算机存储单元</h5><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h5 id="3-4-2-Java中的数据类型"><a href="#3-4-2-Java中的数据类型" class="headerlink" title="3.4.2 Java中的数据类型"></a>3.4.2 Java中的数据类型</h5><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p><p>Java中的基本数据类型：</p><table><thead><tr><th align="left">数据类型</th><th>关键字</th><th>内存占用</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">整数类型</td><td>byte</td><td>1</td><td align="left">-128~127</td></tr><tr><td align="left"></td><td>short</td><td>2</td><td align="left">-32768~32767</td></tr><tr><td align="left"></td><td>int(默认)</td><td>4</td><td align="left">-2的31次方到2的31次方-1</td></tr><tr><td align="left"></td><td>long</td><td>8</td><td align="left">-2的63次方到2的63次方-1</td></tr><tr><td align="left">浮点类型</td><td>float</td><td>4</td><td align="left">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td></tr><tr><td align="left"></td><td>double(默认)</td><td>8</td><td align="left">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td></tr><tr><td align="left">字符类型</td><td>char</td><td>2</td><td align="left">0-65535</td></tr><tr><td align="left">布尔类型</td><td>boolean</td><td>1</td><td align="left">true，false</td></tr></tbody></table><p>说明：</p><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="3-5-变量（应用）"><a href="#3-5-变量（应用）" class="headerlink" title="3.5 变量（应用）"></a>3.5 变量（应用）</h4><h5 id="3-5-1-变量的定义"><a href="#3-5-1-变量的定义" class="headerlink" title="3.5.1 变量的定义"></a>3.5.1 变量的定义</h5><p>变量：在程序运行过程中，其值可以发生改变的量。</p><p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p><p>变量的定义格式：</p><pre class=" language-java"><code class="language-java">数据类型 变量名 <span class="token operator">=</span> 初始化值<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明变量并赋值</span><span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>或者</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 先声明，后赋值（使用前赋值即可）</span>数据类型 变量名<span class="token punctuation">;</span>变量名 <span class="token operator">=</span> 初始化值<span class="token punctuation">;</span><span class="token keyword">double</span> money<span class="token punctuation">;</span>money <span class="token operator">=</span> <span class="token number">55.5</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 定义int类型的变量a和b，中间使用逗号隔开</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> c<span class="token punctuation">,</span>d<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 声明int类型的变量c和d，中间使用逗号隔开</span>c <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>变量的使用：通过变量名访问即可。</p><h5 id="3-5-2-使用变量时的注意事项"><a href="#3-5-2-使用变量时的注意事项" class="headerlink" title="3.5.2 使用变量时的注意事项"></a>3.5.2 使用变量时的注意事项</h5><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li><li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li></ol><h4 id="3-6-标识符（记忆、理解）"><a href="#3-6-标识符（记忆、理解）" class="headerlink" title="3.6 标识符（记忆、理解）"></a>3.6 标识符（记忆、理解）</h4><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p><p>Java中标识符的组成规则：</p><p>​    由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p><p>​    不能使用java中的关键字作为标识符。    </p><p>​    标识符对大小写敏感（区分大小写）。</p><p>Java中标识符的命名约定：</p><p>​    小驼峰式命名：变量名、方法名</p><p>​        首字母小写，从第二个单词开始每个单词的首字母大写。</p><p>​    大驼峰式命名：类名</p><p>​        每个单词的首字母都大写。</p><p>​    另外，标识符的命名最好可以做到见名知意</p><p>​        例如：username、studentNumber等。</p><h4 id="3-7-类型转换（理解）"><a href="#3-7-类型转换（理解）" class="headerlink" title="3.7 类型转换（理解）"></a>3.7 类型转换（理解）</h4><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p><p>自动类型转换：</p><p>​    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">double</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将int类型的10直接赋值给double类型</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出10.0</span></code></pre><p>强制类型转换：</p><p>​    把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p><p>​    强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</p><p>​    例如：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">double</span> num1 <span class="token operator">=</span> <span class="token number">5.5</span><span class="token punctuation">;</span><span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> num1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将double类型的num1强制转换为int类型</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出5（小数位直接舍弃）</span></code></pre><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/Java-Day01-01.png" alt=""></p><p>说明：</p><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将输出97</span></code></pre><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">byte</span> b3 <span class="token operator">=</span> b1 <span class="token operator">+</span> b2<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span><span class="token comment" spellcheck="true">// 修改为:</span><span class="token keyword">int</span> num <span class="token operator">=</span> b1 <span class="token operator">+</span> b2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 或者：</span><span class="token keyword">byte</span> b3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b1 <span class="token operator">+</span> b2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol><li>boolean类型不能与其他基本数据类型相互转换。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaMemo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown Memo</title>
      <link href="2020/07/19/markdown/"/>
      <url>2020/07/19/markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a><a href="https://github.com/younghz/Markdown">Markdown基本语法</a></h3><blockquote><p><strong>PS</strong>：指令后空格才可有效。  </p></blockquote><h3 id="Markdown-all-in-one-Plug"><a href="#Markdown-all-in-one-Plug" class="headerlink" title="Markdown all in one(Plug)"></a>Markdown all in one(Plug)</h3><ul><li>强调：<ul><li><code>Ctrl+B</code>–&gt;<strong>粗体</strong>。  </li><li><code>Ctrl+I</code>–&gt;<em>斜体</em>。</li></ul></li><li>列表：<ul><li>1.+Enter直接换为2.；</li><li>Enter+Tab切为子标题。</li></ul></li><li>超链接：<code>选中文字+ctrl+v</code>。</li><li>插入图片：<code>复制图片+ctrl+alt+v</code></li><li>标记：`文字`<ul><li><code>eg</code></li></ul></li><li>区块引用：一级嵌套：&gt; /二级嵌套：&gt;&gt;<blockquote><p>Outside</p><blockquote><p>Inside</p></blockquote></blockquote></li><li>代码区块：  ```+代码高亮标签+Enter+```</li></ul><pre class=" language-php"><code class="language-php"><span class="token keyword">echo</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token string">"Hello World"</span><span class="token punctuation">;</span></code></pre><ul><li>反斜杠：<code>\</code><br>  相当于反转义作用。使符号成为普通符号。</li></ul><h3 id="Markdown代码高亮标记大全👉Author"><a href="#Markdown代码高亮标记大全👉Author" class="headerlink" title="Markdown代码高亮标记大全👉Author"></a>Markdown代码高亮标记大全👉<a href="http://lujianan.com/2018/10/30/markdown-syntax-highlight/">Author</a></h3><p>用  Markdown 写文档的话经常会用到代码的语法高亮，这里列出了常用的语法高亮标签，<span style="color: red;">前面是标签，括号里是对应的文件扩展名。</span></p><p>Syntax Highlight  </p><ul><li>Cucumber (‘*.feature’)</li><li>abap (‘*.abap’)</li><li>ada (‘.adb’, ‘.ads’, ‘*.ada’)</li><li>ahk (‘.ahk’, ‘.ahkl’)</li><li>apacheconf (‘.htaccess’, ‘apache.conf’, ‘apache2.conf’)</li><li>applescript (‘*.applescript’)</li><li>as (‘*.as’)</li><li>as3 (‘*.as’)</li><li>asy (‘*.asy’)</li><li>bash (‘.sh’, ‘.ksh’, ‘.bash’, ‘.ebuild’, ‘*.eclass’)</li><li>bat (‘.bat’, ‘.cmd’)</li><li>befunge (‘*.befunge’)</li><li>blitzmax (‘*.bmx’)</li><li>boo (‘*.boo’)</li><li>brainfuck (‘.bf’, ‘.b’)</li><li>c (‘.c’, ‘.h’)</li><li>cfm (‘.cfm’, ‘.cfml’, ‘*.cfc’)</li><li>cheetah (‘.tmpl’, ‘.spt’)</li><li>cl (‘.cl’, ‘.lisp’, ‘*.el’)</li><li>clojure (‘.clj’, ‘.cljs’)</li><li>cmake (‘*.cmake’, ‘CMakeLists.txt’)</li><li>coffeescript (‘*.coffee’)</li><li>console (‘*.sh-session’)</li><li>control (‘control’)</li><li>cpp (‘.cpp’, ‘.hpp’, ‘.c++’, ‘.h++’, ‘.cc’, ‘.hh’, ‘.cxx’, ‘.hxx’, ‘*.- pde’)</li><li>csharp (‘*.cs’)</li><li>css (‘*.css’)</li><li>cython (‘.pyx’, ‘.pxd’, ‘*.pxi’)</li><li>d (‘.d’, ‘.di’)</li><li>delphi (‘*.pas’)</li><li>diff (‘.diff’, ‘.patch’)</li><li>dpatch (‘.dpatch’, ‘.darcspatch’)</li><li>duel (‘.duel’, ‘.jbst’)</li><li>dylan (‘.dylan’, ‘.dyl’)</li><li>erb (‘*.erb’)</li><li>erl (‘*.erl-sh’)</li><li>erlang (‘.erl’, ‘.hrl’)</li><li>evoque (‘*.evoque’)</li><li>factor (‘*.factor’)</li><li>felix (‘.flx’, ‘.flxh’)</li><li>fortran (‘.f’, ‘.f90’)</li><li>gas (‘.s’, ‘.S’)</li><li>genshi (‘*.kid’)</li><li>glsl (‘.vert’, ‘.frag’, ‘*.geo’)</li><li>gnuplot (‘.plot’, ‘.plt’)</li><li>go (‘*.go’)</li><li>groff (‘.(1234567)’, ‘.man’)</li><li>haml (‘*.haml’)</li><li>haskell (‘*.hs’)</li><li>html (‘.html’, ‘.htm’, ‘.xhtml’, ‘.xslt’)</li><li>hx (‘*.hx’)</li><li>hybris (‘.hy’, ‘.hyb’)</li><li>ini (‘.ini’, ‘.cfg’)</li><li>io (‘*.io’)</li><li>ioke (‘*.ik’)</li><li>irc (‘*.weechatlog’)</li><li>jade (‘*.jade’)</li><li>java (‘*.java’)</li><li>js (‘*.js’)</li><li>jsp (‘*.jsp’)</li><li>lhs (‘*.lhs’)</li><li>llvm (‘*.ll’)</li><li>logtalk (‘*.lgt’)</li><li>lua (‘.lua’, ‘.wlua’)</li><li>make (‘.mak’, ‘Makefile’, ‘makefile’, ‘Makefile.‘, ‘GNUmakefile’)</li><li>mako (‘*.mao’)</li><li>maql (‘*.maql’)</li><li>mason (‘.mhtml’, ‘.mc’, ‘*.mi’, ‘autohandler’, ‘dhandler’)</li><li>markdown (‘*.md’)</li><li>modelica (‘*.mo’)</li><li>modula2 (‘.def’, ‘.mod’)</li><li>moocode (‘*.moo’)</li><li>mupad (‘*.mu’)</li><li>mxml (‘*.mxml’)</li><li>myghty (‘*.myt’, ‘autodelegate’)</li><li>nasm (‘.asm’, ‘.ASM’)</li><li>newspeak (‘*.ns2’)</li><li>objdump (‘*.objdump’)</li><li>objectivec (‘*.m’)</li><li>objectivej (‘*.j’)</li><li>ocaml (‘.ml’, ‘.mli’, ‘.mll’, ‘.mly’)</li><li>ooc (‘*.ooc’)</li><li>perl (‘.pl’, ‘.pm’)</li><li>php (‘.php’, ‘.php(345)’)</li><li>postscript (‘.ps’, ‘.eps’)</li><li>pot (‘.pot’, ‘.po’)</li><li>pov (‘.pov’, ‘.inc’)</li><li>prolog (‘.prolog’, ‘.pro’, ‘*.pl’)</li><li>properties (‘*.properties’)</li><li>protobuf (‘*.proto’)</li><li>py3tb (‘*.py3tb’)</li><li>pytb (‘*.pytb’)</li><li>python (‘.py’, ‘.pyw’, ‘.sc’, ‘SConstruct’, ‘SConscript’, ‘.tac’)</li><li>rb (‘.rb’, ‘.rbw’, ‘Rakefile’, ‘.rake’, ‘.gemspec’, ‘.rbx’, ‘.duby’)</li><li>rconsole (‘*.Rout’)</li><li>rebol (‘.r’, ‘.r3’)</li><li>redcode (‘*.cw’)</li><li>rhtml (‘*.rhtml’)</li><li>rst (‘.rst’, ‘.rest’)</li><li>sass (‘*.sass’)</li><li>scala (‘*.scala’)</li><li>scaml (‘*.scaml’)</li><li>scheme (‘*.scm’)</li><li>scss (‘*.scss’)</li><li>smalltalk (‘*.st’)</li><li>smarty (‘*.tpl’)</li><li>sourceslist (‘sources.list’)</li><li>splus (‘.S’, ‘.R’)</li><li>sql (‘*.sql’)</li><li>sqlite3 (‘*.sqlite3-console’)</li><li>squidconf (‘squid.conf’)</li><li>ssp (‘*.ssp’)</li><li>tcl (‘*.tcl’)</li><li>tcsh (‘.tcsh’, ‘.csh’)</li><li>tex (‘.tex’, ‘.aux’, ‘*.toc’)</li><li>text (‘*.txt’)</li><li>v (‘.v’, ‘.sv’)</li><li>vala (‘.vala’, ‘.vapi’)</li><li>vbnet (‘.vb’, ‘.bas’)</li><li>velocity (‘.vm’, ‘.fhtml’)</li><li>vim (‘*.vim’, ‘.vimrc’)</li><li>xml (‘.xml’, ‘.xsl’, ‘.rss’, ‘.xslt’, ‘.xsd’, ‘.wsdl’)</li><li>xquery (‘.xqy’, ‘.xquery’)</li><li>xslt (‘.xsl’, ‘.xslt’)</li><li>yaml (‘.yaml’, ‘.yml’)</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮件服务器的架设与使用</title>
      <link href="2020/06/08/you-jian-fu-wu-qi-de-jia-she-yu-shi-yong/"/>
      <url>2020/06/08/you-jian-fu-wu-qi-de-jia-she-yu-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><blockquote><p>学习并掌握邮件服务器的安装和配置方法。</p></blockquote><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>VmWare pro(Win10 x 64)</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="Winmail-安装"><a href="#Winmail-安装" class="headerlink" title="Winmail 安装"></a><a href="https://www.magicwinmail.com/"><strong><em><code>Winmail</code></em></strong></a> 安装</h3><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-1.png" alt=""></p><h3 id="Winmail-配置"><a href="#Winmail-配置" class="headerlink" title="Winmail 配置"></a><strong><em><code>Winmail</code></em></strong> 配置</h3><h4 id="1-初始化邮箱"><a href="#1-初始化邮箱" class="headerlink" title="1.初始化邮箱"></a>1.初始化邮箱</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-2.png" alt=""></p><h4 id="2-登陆管理工具"><a href="#2-登陆管理工具" class="headerlink" title="2. 登陆管理工具"></a>2. 登陆管理工具</h4><blockquote><p><strong><code>密码为安装时设定的初始密码</code></strong><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-1-3.png" alt=""></p></blockquote><h4 id="3-添加域名绑定"><a href="#3-添加域名绑定" class="headerlink" title="3. 添加域名绑定"></a>3. 添加域名绑定</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-2-2.png" alt=""></p><h4 id="4-在新域名下添加用户"><a href="#4-在新域名下添加用户" class="headerlink" title="4. 在新域名下添加用户"></a>4. 在新域名下添加用户</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-2-2.png" alt=""></p><h3 id="Winmail测试"><a href="#Winmail测试" class="headerlink" title="Winmail测试"></a><strong><em><code>Winmail</code></em></strong>测试</h3><blockquote><p>收发信测试(<a href="https://localhost:6080">https://localhost:6080</a>) </p></blockquote><h4 id="1-登录初始化的邮箱账户Wriprin"><a href="#1-登录初始化的邮箱账户Wriprin" class="headerlink" title="1. 登录初始化的邮箱账户Wriprin"></a>1. 登录初始化的邮箱账户<code>Wriprin</code></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-1.jpg" alt="">  </p><h4 id="2-向新建用户Yolo发送测试邮件"><a href="#2-向新建用户Yolo发送测试邮件" class="headerlink" title="2. 向新建用户Yolo发送测试邮件"></a>2. 向新建用户<code>Yolo</code>发送测试邮件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-2.png" alt=""></p><h4 id="3-退出登录"><a href="#3-退出登录" class="headerlink" title="3. 退出登录"></a>3. 退出登录</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-3.png" alt=""></p><h4 id="4-登录新建用户Yolo"><a href="#4-登录新建用户Yolo" class="headerlink" title="4. 登录新建用户Yolo"></a>4. 登录新建用户<code>Yolo</code></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-4.png" alt=""></p><h4 id="5-接收邮件"><a href="#5-接收邮件" class="headerlink" title="5. 接收邮件"></a>5. 接收邮件</h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-3-5.png" alt=""></p><h3 id="实验思考"><a href="#实验思考" class="headerlink" title="实验思考"></a>实验思考</h3><h4 id="1-SMTP是什么协议？作用是什么？默认占用的端口号是？"><a href="#1-SMTP是什么协议？作用是什么？默认占用的端口号是？" class="headerlink" title="1. SMTP是什么协议？作用是什么？默认占用的端口号是？"></a>1. <a href="https://zh.wikipedia.org/wiki/%E7%AE%80%E5%8D%95%E9%82%AE%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE"><strong><em><code>SMTP</code></em></strong></a>是什么协议？作用是什么？默认占用的端口号是？</h4><blockquote><ul><li>SMTP是简单邮件传输协议，是一个相对简单的基于文本的协议。</li><li>相当于中转站，将邮件发送到客户端。  </li><li>25</li></ul></blockquote><h4 id="2-POP是什么协议？作用是什么？默认占用的端口号是？"><a href="#2-POP是什么协议？作用是什么？默认占用的端口号是？" class="headerlink" title="2. POP是什么协议？作用是什么？默认占用的端口号是？"></a>2. <a href="https://zh.wikipedia.org/wiki/%E9%83%B5%E5%B1%80%E5%8D%94%E5%AE%9A"><strong><em><code>POP</code></em></strong></a>是什么协议？作用是什么？默认占用的端口号是？</h4><blockquote><ul><li>POP是邮局协议。</li><li>主要用于支持使用客户端远程管理在服务器上的电子邮件。</li><li>110</li></ul></blockquote><h4 id="3-邮件服务器域名是否可以随意设置"><a href="#3-邮件服务器域名是否可以随意设置" class="headerlink" title="3. 邮件服务器域名是否可以随意设置"></a>3. 邮件服务器域名是否可以随意设置</h4><blockquote><ul><li>如果是在内网中(比如做实验)，那怎么设置都可以。  </li><li>但如果是想在外网上正常使用，必须用绑定的对应域名。</li></ul></blockquote><h4 id="4-通过本邮件的服务器是否可以向Gmail等邮箱发送邮件"><a href="#4-通过本邮件的服务器是否可以向Gmail等邮箱发送邮件" class="headerlink" title="4. 通过本邮件的服务器是否可以向Gmail等邮箱发送邮件"></a>4. 通过本邮件的服务器是否可以向<a href="https://mail.google.com/"><strong><em><code>Gmail</code></em></strong></a>等邮箱发送邮件</h4><blockquote><p>可以。</p></blockquote><h4 id="5-邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？"><a href="#5-邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？" class="headerlink" title="5. 邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？"></a>5. 邮件过滤功能可设置哪些功能条件？是否可添加一些敏感词汇？</h4><blockquote><ul><li>IP 地址(<a href="https://www.magicwinmail.com/technic_spf.php"><strong><em><code>SPF</code></em></strong></a>)，域名，邮件来源，邮件头内容，邮件信体等方式的过滤。</li><li>作为超级管理员，可以设置规则来决定包含某些字词（如敏感词汇）的邮件应被拒绝、隔离还是修改后进行递送。</li><li>eg：<a href="https://support.google.com/a/answer/1346936?hl=zh-Hans"><strong><code>原文章出处</code></strong></a><ul><li>拒绝可能包含公司敏感信息（eg:出站过滤器检测到“机密”一词）的出站邮件。  </li><li>隔离包含敏感词汇的邮件。  </li><li>通过“敏感词汇”设置，可以创建字词列表来甄别敏感词汇，并指定对包含此类内容的邮件执行什么操作。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-4-1.png" alt=""></li></ul></li></ul></blockquote><h4 id="6-对用户可以进行哪些设置？"><a href="#6-对用户可以进行哪些设置？" class="headerlink" title="6. 对用户可以进行哪些设置？"></a>6. 对用户可以进行哪些设置？</h4><blockquote><ul><li>eg：<a href="https://support.google.com/a/answer/2537800?hl=zh-Hans"><strong><code>原文章出处</code></strong></a><ul><li>重置用户密码</li><li>查看、添加或移除安全密钥</li><li>检查两步验证设置</li><li>为用户获取备用验证码</li><li>强制更改密码</li><li>修改用户的恢复信息</li><li>暂时关闭登录验证</li><li>重置用户的登录 Cookie</li><li>查看和撤消应用专用密码</li><li>查看和移除第三方应用的访问权限<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/MS-4-2.png" alt=""></li></ul></li></ul></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mail Sever </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1-YYF固件</title>
      <link href="2020/06/07/n1-yyf-gu-jian/"/>
      <url>2020/06/07/n1-yyf-gu-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="开封验货"><a href="#开封验货" class="headerlink" title="开封验货"></a>开封验货</h3><h4 id="Pre"><a href="#Pre" class="headerlink" title="Pre"></a><strong><em>Pre</em></strong></h4><blockquote><p>至于为什么要买N1，然后自己刷固件就不解释了，自行Google咯。  </p></blockquote><p> <del>玩什么盒子呢</del>，到了到了–&gt;真香，<strong><em><code>Pdd</code></em></strong>(Eternal god🐱‍🏍)<br>  <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-1.png" alt=""></p><h4 id="Open"><a href="#Open" class="headerlink" title="Open"></a><strong><em>Open</em></strong></h4><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-3.png" alt=""></p><blockquote><p>虽说斐讯跑路了但路由和盒子真的是业界楷模。</p></blockquote><h3 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h3><ul><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2Feyun.baidu.com%2Fs%2F3pMOZd2N%23sharelink%2Fpath%3D%252F">Lilith固件</a></li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2Fpan.baidu.com%2Fs%2F1owwyD3_bLFv-pWcv4U18hw%C2%A0%C2%A0">Rush固件</a></li><li><a href="https://share.weiyun.com/5evQlaL">Webpad固件</a>(<code>pwd:ckj05e</code>)</li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=http%3A%2F%2Fwww.yyfrom.com%2Fcms%2Fyyfrom%2Fproduct%2F2018-10-8%2F163.html">YYF固件</a></li><li><a href="https://www.youtube.com/redirect?v=Ei3StnyhDbM&amp;redir_token=kESzbIWecAgQtY4tkUC5cGLScE98MTU5MTU5OTAxMkAxNTkxNTEyNjEy&amp;event=video_description&amp;q=https%3A%2F%2F72k.us%2Ffile%2F4089832-398549090">N1降级线刷工具、烧录工具、link2SD软件</a></li></ul><h3 id="N1-gt-YYF"><a href="#N1-gt-YYF" class="headerlink" title="N1->YYF"></a><strong><em>N1-&gt;YYF</em></strong></h3><h4 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h4><ul><li><p><code>双公线</code>：电脑🔗N1</p></li><li><p><code>HDMI线</code>：显示屏🔗N1</p></li><li><p><code>USB线</code>：鼠标🔗N1</p></li><li><p><code>网线</code>：Wan口🔗路由器LAN口</p><blockquote><p>最好让双公线的口和HDMI线的口紧挨着。</p></blockquote></li></ul><h4 id="进入root模式"><a href="#进入root模式" class="headerlink" title="进入root模式"></a>进入root模式</h4><p>鼠标点固件版本四次，打开adb模式，并把IP记下来。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-1-2.png" alt=""></p><h4 id="N1降级"><a href="#N1降级" class="headerlink" title="N1降级"></a>N1降级</h4><blockquote><p>因为该记录篇呢是在我都完成之后才准备写的，所以之后的步骤也不会有具体的操作演示，毕竟只是纪录片，有时间再补吧😎。  </p></blockquote><p>先输入数字2，会让你输入IP地址，等待降级成功。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-1.png" alt=""></p><h4 id="进入线刷模式"><a href="#进入线刷模式" class="headerlink" title="进入线刷模式"></a>进入线刷模式</h4><blockquote><p>千万别用刚刚的降级工具进行线刷操作（别问为什么，<del>我在这步耗了整整1h😩</del>）<br>接下来将展示我刷固件过程中的两道巨坎儿    </p></blockquote><p>1.在线刷前<code>一定</code>要手动添加过时驱动。    <del>都是泪😭</del><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-3.png" alt=""></p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-4.png" alt=""></p><p>2.要用另外一个专门线刷的工具，按步骤操作即可（此时呢，N1会重启，等一下就好）</p><p><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-2.png" alt=""></p><h4 id="烧录固件"><a href="#烧录固件" class="headerlink" title="烧录固件"></a>烧录固件</h4><blockquote><p>打开烧录工具，导入烧录包后在下面会有导包成功的提示<br>PS:一定要把右边两个默认选项给<code>去掉</code><br>点击开始即可<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-5.png" alt=""></p></blockquote><h4 id="伪收工"><a href="#伪收工" class="headerlink" title="伪收工"></a>伪收工</h4><p>整个过程也就三五分钟，当烧录成功后，进度条变成绿色。</p><blockquote><p>然后需要拔掉USB两个口的线(<code>双共线和鼠标</code>)，拔掉<code>电源</code>，再<code>重新插上电源</code>。  </p></blockquote><blockquote><p>接着就是这样的画面，第一次启动会慢一些，等一会儿就好了。<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/1591519760528_4AACDDDA-98C2-4880-97E3-331ABA0ECA32.png" alt=""></p></blockquote><h4 id="Show-Time"><a href="#Show-Time" class="headerlink" title="Show Time"></a><strong><em>Show Time</em></strong></h4><blockquote><p>✌<br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/N1-2-7.png" alt=""></p></blockquote><h4 id="End"><a href="#End" class="headerlink" title="End"></a><strong><em>End</em></strong></h4><blockquote><p>N1盒子呢其实还有很多玩法  </p></blockquote><blockquote><p>eg:<code>旁路由</code>，<code>KODI</code>看奶飞，<code>Coreelec</code>-4K 等等。  </p></blockquote><blockquote><p>不管怎么说，生命在于折腾嘛😎。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>66&amp;壮壮</title>
      <link href="2020/06/07/66-zhuang-zhuang/"/>
      <url>2020/06/07/66-zhuang-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="壮王爷肾结石之旅"><a href="#壮王爷肾结石之旅" class="headerlink" title="壮王爷肾结石之旅"></a>壮王爷肾结石之旅</h2><blockquote><p>😳借此警戒自己，不久坐，多运动，少喝饮料<del>🍹</del>，多喝热水🥛。</p></blockquote><p> <a href="https://www.bilibili.com/video/av18686199/"><strong><em><code>Watch the video</code></em></strong></a></p><p> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/66.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Mlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web服务器配置</title>
      <link href="2020/06/03/web-fu-wu-qi-pei-zhi/"/>
      <url>2020/06/03/web-fu-wu-qi-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><h4 id="利用IIS配置一个网站"><a href="#利用IIS配置一个网站" class="headerlink" title="利用IIS配置一个网站."></a>利用IIS配置一个网站.</h4><ul><li><strong>IIS配置网站</strong><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-1-IIS%E5%BB%BA%E7%AB%99.gif" alt=""></li></ul><h4 id="开启网站的目录浏览功能"><a href="#开启网站的目录浏览功能" class="headerlink" title="开启网站的目录浏览功能"></a>开启网站的<strong>目录浏览</strong>功能</h4><blockquote><p><span style="color:#ff0000">PS：报错很有可能是未开启目录浏览权限和文件夹共享 <em><code>Everyone</code></em> 。</span></p></blockquote><ul><li><strong>IIS访问</strong><br><img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-2-IIS%E8%AE%BF%E9%97%AE.gif" alt=""></li></ul><h4 id="删除-exe的mime类型，看能否下载-exe文件"><a href="#删除-exe的mime类型，看能否下载-exe文件" class="headerlink" title="删除.exe的mime类型，看能否下载.exe文件"></a>删除.exe的mime类型，看能否下载.exe文件</h4><ul><li><strong>IIS删除mime-exe类型</strong><br> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-3-IIS%E5%88%A0%E9%99%A4mime-exe%E7%B1%BB%E5%9E%8B.gif" alt=""></li><li><strong>IIS删除mime-exe类型后访问</strong><br> <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-1-4-IIS%E5%88%A0%E9%99%A4mime-exe%E7%B1%BB%E5%9E%8B%E5%90%8E%E8%AE%BF%E9%97%AE.gif" alt="">  <blockquote><p><strong>很显然，当我们删除了指定的mime类型后，是无法下载对应类型的文件的。</strong></p></blockquote></li></ul><h2 id="Wampsever"><a href="#Wampsever" class="headerlink" title="Wampsever"></a><a href="http://www.wampserver.com/">Wampsever</a></h2><blockquote><p>Tip:<strong><em><code>Wamp</code></em></strong> -&gt; <em>Windows, Apache, Mysql, PHP.</em><br>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-2.png" alt=""></p></blockquote><h3 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h3><h4 id="Apache目录下文件夹："><a href="#Apache目录下文件夹：" class="headerlink" title="Apache目录下文件夹："></a>Apache目录下文件夹：</h4><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-1.png" alt=""></p><ul><li><code>bin</code>-&gt;存放常用命令，如Httped等。</li><li><code>cgi-bin</code>-&gt;存放Linux下的常用命令。</li><li><code>conf</code>-&gt;存放配置文件，如conf等。</li><li><code>error</code>-&gt;存放错误记录。</li><li><code>htdocs</code>-&gt;存放站点文件，网站的根目录。</li></ul><h4 id="Apache配置"><a href="#Apache配置" class="headerlink" title="Apache配置"></a>Apache配置</h4><h5 id="1-1-主站点的基本配置-httped-conf"><a href="#1-1-主站点的基本配置-httped-conf" class="headerlink" title="1.1 主站点的基本配置  (./httped.conf)"></a>1.1 <strong>主站点的基本配置</strong>  <strong><em><code>(./httped.conf)</code></em></strong></h5><ul><li><p>Listen 80 -&gt; 服务器监听的端口号。 </p><blockquote><p>通过将此配置项设置为 localhost的 IP 地址，Apache 将只侦听来自本地主机的连接。 如果Web 服务器侦听来自远程主机的连接，则可以使用主机的外部 IP 地址。</p></blockquote><pre class=" language-apacheconf"><code class="language-apacheconf"> <span class="token directive-inline property">Listen</span> 0.0.0.0:80 <span class="token directive-inline property">Listen</span> [::0]:80</code></pre></li><li><p><code>ServerAdmin</code> qq1178962746@gmail.com -&gt; 管理员的邮件地址。(当服务器出现问题后的联系方式)</p></li><li><p><code>DocumentRoot</code> “/mnt/web/clusting” -&gt; 主站点的网页存储位置。</p><pre class=" language-apacheconf"><code class="language-apacheconf"> <span class="token directive-inline property">DocumentRoot</span> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www"</span></code></pre><blockquote><p><code>DocumentRoot</code> 配置项指定组成网站页面的 HTML 文件的位置。  </p></blockquote><blockquote><p><code>DocumentRoot</code>属性用于指定了一种URL映射的根目录路径。例如<a href="http://localhost/">http://localhost/</a>  </p></blockquote><blockquote><p><code>Directory</code>标签是为了指定URL路径在后续的请求中可以进行操作的权限范围属性。</p></blockquote></li></ul><h5 id="1-2-对主站点的目录进行访问控制"><a href="#1-2-对主站点的目录进行访问控制" class="headerlink" title="1.2 对主站点的目录进行访问控制"></a>1.2 <strong>对主站点的目录进行访问控制</strong></h5><pre class=" language-apacheconf"><code class="language-apacheconf">     <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>Directory</span><span class="token directive-block-parameter attr-value"> <span class="token string">"<span class="token variable">${SRVROOT}</span>/cgi-bin"</span></span><span class="token punctuation">></span></span>     <span class="token directive-inline property">AllowOverride</span> None     <span class="token directive-inline property">Options</span> None     <span class="token directive-inline property">Require</span> all granted     <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>Directory</span><span class="token punctuation">></span></span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-5.png" alt=""></p><h5 id="1-3-别名设置"><a href="#1-3-别名设置" class="headerlink" title="1.3 别名设置"></a>1.3 <strong>别名设置</strong></h5><blockquote><p>对于不在<code>DocumentRoot</code>指定的目录内的页面，既可以使用符号连接，也可以使用别名。</p></blockquote><pre class=" language-apacheconf"><code class="language-apacheconf">   <span class="token directive-inline property">Alias</span> /download/ <span class="token string">"/var/www/download/"</span> <span class="token comment" spellcheck="true">#http://www.Wriprin.ml/download/ (404)</span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-3.png" alt=""></p><ul><li><span style="color:pink"> 已经让我删掉了,不要再去了 🙄 </span></li></ul><h5 id="1-4-虚拟主机配置-conf-extra"><a href="#1-4-虚拟主机配置-conf-extra" class="headerlink" title="1.4 虚拟主机配置  (/conf/extra/...)"></a>1.4 <strong>虚拟主机配置</strong>  <strong><em><code>(/conf/extra/...)</code></em></strong></h5><pre class=" language-apacheconf"><code class="language-apacheconf">   <span class="token comment" spellcheck="true"># Virtual Hosts</span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>VirtualHost</span><span class="token directive-block-parameter attr-value"> *<span class="token punctuation">:</span>80</span><span class="token punctuation">></span></span>      <span class="token directive-inline property">ServerName</span> localhost      <span class="token directive-inline property">ServerAlias</span> localhost      <span class="token directive-inline property">DocumentRoot</span> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www"</span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;</span>Directory</span><span class="token directive-block-parameter attr-value"> <span class="token string">"<span class="token variable">${INSTALL_DIR}</span>/www/"</span></span><span class="token punctuation">></span></span>      <span class="token directive-inline property">Options</span> +Indexes +Includes +FollowSymLinks +MultiViews      <span class="token directive-inline property">AllowOverride</span> All      <span class="token directive-inline property">Require</span> local   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>Directory</span><span class="token punctuation">></span></span>   <span class="token directive-block tag"><span class="token directive-block tag"><span class="token punctuation">&lt;/</span>VirtualHost</span><span class="token punctuation">></span></span></code></pre><p>   <img src= "/img/loading.gif" data-src="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/loading-02.gif" data-original="http://cdn.jsdelivr.net/gh/Wriprin/Wriprin-Gallery/Gallery/ComNet9-2-4.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS&amp;&amp;Wampsever </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/06/02/hello-world/"/>
      <url>2020/06/02/hello-world/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong><code>还没想好写什么,就先鸽了吧.😳</code></strong></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Mlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
